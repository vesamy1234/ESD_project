
test_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000036f4  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000010c  080037b4  080037b4  000047b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080038c0  080038c0  0000505c  2**0
                  CONTENTS
  4 .ARM          00000000  080038c0  080038c0  0000505c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080038c0  080038c0  0000505c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080038c0  080038c0  000048c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080038c4  080038c4  000048c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080038c8  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001b0  20000060  08003924  00005060  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000210  08003924  00005210  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000505c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003b2a  00000000  00000000  00005084  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000132e  00000000  00000000  00008bae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000efc  00000000  00000000  00009edc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000003a8  00000000  00000000  0000add8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000003b3  00000000  00000000  0000b180  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000f089  00000000  00000000  0000b533  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000683c  00000000  00000000  0001a5bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00057c62  00000000  00000000  00020df8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00078a5a  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000f84  00000000  00000000  00078aa0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004b  00000000  00000000  00079a24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000060 	.word	0x20000060
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800379c 	.word	0x0800379c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000064 	.word	0x20000064
 8000104:	0800379c 	.word	0x0800379c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_lmul>:
 800042c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800042e:	46ce      	mov	lr, r9
 8000430:	4699      	mov	r9, r3
 8000432:	0c03      	lsrs	r3, r0, #16
 8000434:	469c      	mov	ip, r3
 8000436:	0413      	lsls	r3, r2, #16
 8000438:	4647      	mov	r7, r8
 800043a:	0c1b      	lsrs	r3, r3, #16
 800043c:	001d      	movs	r5, r3
 800043e:	000e      	movs	r6, r1
 8000440:	4661      	mov	r1, ip
 8000442:	0404      	lsls	r4, r0, #16
 8000444:	0c24      	lsrs	r4, r4, #16
 8000446:	b580      	push	{r7, lr}
 8000448:	0007      	movs	r7, r0
 800044a:	0c10      	lsrs	r0, r2, #16
 800044c:	434b      	muls	r3, r1
 800044e:	4365      	muls	r5, r4
 8000450:	4341      	muls	r1, r0
 8000452:	4360      	muls	r0, r4
 8000454:	0c2c      	lsrs	r4, r5, #16
 8000456:	18c0      	adds	r0, r0, r3
 8000458:	1824      	adds	r4, r4, r0
 800045a:	468c      	mov	ip, r1
 800045c:	42a3      	cmp	r3, r4
 800045e:	d903      	bls.n	8000468 <__aeabi_lmul+0x3c>
 8000460:	2380      	movs	r3, #128	@ 0x80
 8000462:	025b      	lsls	r3, r3, #9
 8000464:	4698      	mov	r8, r3
 8000466:	44c4      	add	ip, r8
 8000468:	4649      	mov	r1, r9
 800046a:	4379      	muls	r1, r7
 800046c:	4356      	muls	r6, r2
 800046e:	0c23      	lsrs	r3, r4, #16
 8000470:	042d      	lsls	r5, r5, #16
 8000472:	0c2d      	lsrs	r5, r5, #16
 8000474:	1989      	adds	r1, r1, r6
 8000476:	4463      	add	r3, ip
 8000478:	0424      	lsls	r4, r4, #16
 800047a:	1960      	adds	r0, r4, r5
 800047c:	18c9      	adds	r1, r1, r3
 800047e:	bcc0      	pop	{r6, r7}
 8000480:	46b9      	mov	r9, r7
 8000482:	46b0      	mov	r8, r6
 8000484:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000486:	46c0      	nop			@ (mov r8, r8)

08000488 <__aeabi_l2f>:
 8000488:	2201      	movs	r2, #1
 800048a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800048c:	000d      	movs	r5, r1
 800048e:	0004      	movs	r4, r0
 8000490:	4b14      	ldr	r3, [pc, #80]	@ (80004e4 <__aeabi_l2f+0x5c>)
 8000492:	4252      	negs	r2, r2
 8000494:	2180      	movs	r1, #128	@ 0x80
 8000496:	1912      	adds	r2, r2, r4
 8000498:	416b      	adcs	r3, r5
 800049a:	03c9      	lsls	r1, r1, #15
 800049c:	428b      	cmp	r3, r1
 800049e:	d217      	bcs.n	80004d0 <__aeabi_l2f+0x48>
 80004a0:	4911      	ldr	r1, [pc, #68]	@ (80004e8 <__aeabi_l2f+0x60>)
 80004a2:	428b      	cmp	r3, r1
 80004a4:	d012      	beq.n	80004cc <__aeabi_l2f+0x44>
 80004a6:	0028      	movs	r0, r5
 80004a8:	f001 fc46 	bl	8001d38 <__aeabi_i2d>
 80004ac:	2200      	movs	r2, #0
 80004ae:	4b0f      	ldr	r3, [pc, #60]	@ (80004ec <__aeabi_l2f+0x64>)
 80004b0:	f001 f97a 	bl	80017a8 <__aeabi_dmul>
 80004b4:	0006      	movs	r6, r0
 80004b6:	000f      	movs	r7, r1
 80004b8:	0020      	movs	r0, r4
 80004ba:	f001 fc6b 	bl	8001d94 <__aeabi_ui2d>
 80004be:	0032      	movs	r2, r6
 80004c0:	003b      	movs	r3, r7
 80004c2:	f000 fe0d 	bl	80010e0 <__aeabi_dadd>
 80004c6:	f001 fc89 	bl	8001ddc <__aeabi_d2f>
 80004ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004cc:	3202      	adds	r2, #2
 80004ce:	d9ea      	bls.n	80004a6 <__aeabi_l2f+0x1e>
 80004d0:	0563      	lsls	r3, r4, #21
 80004d2:	d0e8      	beq.n	80004a6 <__aeabi_l2f+0x1e>
 80004d4:	2180      	movs	r1, #128	@ 0x80
 80004d6:	0ae3      	lsrs	r3, r4, #11
 80004d8:	02db      	lsls	r3, r3, #11
 80004da:	0109      	lsls	r1, r1, #4
 80004dc:	4319      	orrs	r1, r3
 80004de:	000c      	movs	r4, r1
 80004e0:	e7e1      	b.n	80004a6 <__aeabi_l2f+0x1e>
 80004e2:	46c0      	nop			@ (mov r8, r8)
 80004e4:	001fffff 	.word	0x001fffff
 80004e8:	003fffff 	.word	0x003fffff
 80004ec:	41f00000 	.word	0x41f00000

080004f0 <__aeabi_fadd>:
 80004f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004f2:	46ce      	mov	lr, r9
 80004f4:	4647      	mov	r7, r8
 80004f6:	0243      	lsls	r3, r0, #9
 80004f8:	0a5a      	lsrs	r2, r3, #9
 80004fa:	024e      	lsls	r6, r1, #9
 80004fc:	0045      	lsls	r5, r0, #1
 80004fe:	0fc4      	lsrs	r4, r0, #31
 8000500:	0048      	lsls	r0, r1, #1
 8000502:	4691      	mov	r9, r2
 8000504:	0e2d      	lsrs	r5, r5, #24
 8000506:	0a72      	lsrs	r2, r6, #9
 8000508:	0e00      	lsrs	r0, r0, #24
 800050a:	4694      	mov	ip, r2
 800050c:	b580      	push	{r7, lr}
 800050e:	099b      	lsrs	r3, r3, #6
 8000510:	0fc9      	lsrs	r1, r1, #31
 8000512:	09b6      	lsrs	r6, r6, #6
 8000514:	1a2a      	subs	r2, r5, r0
 8000516:	428c      	cmp	r4, r1
 8000518:	d021      	beq.n	800055e <__aeabi_fadd+0x6e>
 800051a:	2a00      	cmp	r2, #0
 800051c:	dd0d      	ble.n	800053a <__aeabi_fadd+0x4a>
 800051e:	2800      	cmp	r0, #0
 8000520:	d12d      	bne.n	800057e <__aeabi_fadd+0x8e>
 8000522:	2e00      	cmp	r6, #0
 8000524:	d100      	bne.n	8000528 <__aeabi_fadd+0x38>
 8000526:	e08d      	b.n	8000644 <__aeabi_fadd+0x154>
 8000528:	1e51      	subs	r1, r2, #1
 800052a:	2a01      	cmp	r2, #1
 800052c:	d100      	bne.n	8000530 <__aeabi_fadd+0x40>
 800052e:	e11d      	b.n	800076c <__aeabi_fadd+0x27c>
 8000530:	2aff      	cmp	r2, #255	@ 0xff
 8000532:	d100      	bne.n	8000536 <__aeabi_fadd+0x46>
 8000534:	e0ab      	b.n	800068e <__aeabi_fadd+0x19e>
 8000536:	000a      	movs	r2, r1
 8000538:	e027      	b.n	800058a <__aeabi_fadd+0x9a>
 800053a:	2a00      	cmp	r2, #0
 800053c:	d04d      	beq.n	80005da <__aeabi_fadd+0xea>
 800053e:	1b42      	subs	r2, r0, r5
 8000540:	2d00      	cmp	r5, #0
 8000542:	d000      	beq.n	8000546 <__aeabi_fadd+0x56>
 8000544:	e0cc      	b.n	80006e0 <__aeabi_fadd+0x1f0>
 8000546:	2b00      	cmp	r3, #0
 8000548:	d100      	bne.n	800054c <__aeabi_fadd+0x5c>
 800054a:	e079      	b.n	8000640 <__aeabi_fadd+0x150>
 800054c:	1e54      	subs	r4, r2, #1
 800054e:	2a01      	cmp	r2, #1
 8000550:	d100      	bne.n	8000554 <__aeabi_fadd+0x64>
 8000552:	e128      	b.n	80007a6 <__aeabi_fadd+0x2b6>
 8000554:	2aff      	cmp	r2, #255	@ 0xff
 8000556:	d100      	bne.n	800055a <__aeabi_fadd+0x6a>
 8000558:	e097      	b.n	800068a <__aeabi_fadd+0x19a>
 800055a:	0022      	movs	r2, r4
 800055c:	e0c5      	b.n	80006ea <__aeabi_fadd+0x1fa>
 800055e:	2a00      	cmp	r2, #0
 8000560:	dc00      	bgt.n	8000564 <__aeabi_fadd+0x74>
 8000562:	e096      	b.n	8000692 <__aeabi_fadd+0x1a2>
 8000564:	2800      	cmp	r0, #0
 8000566:	d04f      	beq.n	8000608 <__aeabi_fadd+0x118>
 8000568:	2dff      	cmp	r5, #255	@ 0xff
 800056a:	d100      	bne.n	800056e <__aeabi_fadd+0x7e>
 800056c:	e08f      	b.n	800068e <__aeabi_fadd+0x19e>
 800056e:	2180      	movs	r1, #128	@ 0x80
 8000570:	04c9      	lsls	r1, r1, #19
 8000572:	430e      	orrs	r6, r1
 8000574:	2a1b      	cmp	r2, #27
 8000576:	dd51      	ble.n	800061c <__aeabi_fadd+0x12c>
 8000578:	002a      	movs	r2, r5
 800057a:	3301      	adds	r3, #1
 800057c:	e018      	b.n	80005b0 <__aeabi_fadd+0xc0>
 800057e:	2dff      	cmp	r5, #255	@ 0xff
 8000580:	d100      	bne.n	8000584 <__aeabi_fadd+0x94>
 8000582:	e084      	b.n	800068e <__aeabi_fadd+0x19e>
 8000584:	2180      	movs	r1, #128	@ 0x80
 8000586:	04c9      	lsls	r1, r1, #19
 8000588:	430e      	orrs	r6, r1
 800058a:	2101      	movs	r1, #1
 800058c:	2a1b      	cmp	r2, #27
 800058e:	dc08      	bgt.n	80005a2 <__aeabi_fadd+0xb2>
 8000590:	0031      	movs	r1, r6
 8000592:	2020      	movs	r0, #32
 8000594:	40d1      	lsrs	r1, r2
 8000596:	1a82      	subs	r2, r0, r2
 8000598:	4096      	lsls	r6, r2
 800059a:	0032      	movs	r2, r6
 800059c:	1e50      	subs	r0, r2, #1
 800059e:	4182      	sbcs	r2, r0
 80005a0:	4311      	orrs	r1, r2
 80005a2:	1a5b      	subs	r3, r3, r1
 80005a4:	015a      	lsls	r2, r3, #5
 80005a6:	d459      	bmi.n	800065c <__aeabi_fadd+0x16c>
 80005a8:	2107      	movs	r1, #7
 80005aa:	002a      	movs	r2, r5
 80005ac:	4019      	ands	r1, r3
 80005ae:	d049      	beq.n	8000644 <__aeabi_fadd+0x154>
 80005b0:	210f      	movs	r1, #15
 80005b2:	4019      	ands	r1, r3
 80005b4:	2904      	cmp	r1, #4
 80005b6:	d000      	beq.n	80005ba <__aeabi_fadd+0xca>
 80005b8:	3304      	adds	r3, #4
 80005ba:	0159      	lsls	r1, r3, #5
 80005bc:	d542      	bpl.n	8000644 <__aeabi_fadd+0x154>
 80005be:	1c50      	adds	r0, r2, #1
 80005c0:	2afe      	cmp	r2, #254	@ 0xfe
 80005c2:	d03a      	beq.n	800063a <__aeabi_fadd+0x14a>
 80005c4:	019b      	lsls	r3, r3, #6
 80005c6:	b2c0      	uxtb	r0, r0
 80005c8:	0a5b      	lsrs	r3, r3, #9
 80005ca:	05c0      	lsls	r0, r0, #23
 80005cc:	4318      	orrs	r0, r3
 80005ce:	07e4      	lsls	r4, r4, #31
 80005d0:	4320      	orrs	r0, r4
 80005d2:	bcc0      	pop	{r6, r7}
 80005d4:	46b9      	mov	r9, r7
 80005d6:	46b0      	mov	r8, r6
 80005d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005da:	20fe      	movs	r0, #254	@ 0xfe
 80005dc:	4680      	mov	r8, r0
 80005de:	1c6f      	adds	r7, r5, #1
 80005e0:	0038      	movs	r0, r7
 80005e2:	4647      	mov	r7, r8
 80005e4:	4207      	tst	r7, r0
 80005e6:	d000      	beq.n	80005ea <__aeabi_fadd+0xfa>
 80005e8:	e08e      	b.n	8000708 <__aeabi_fadd+0x218>
 80005ea:	2d00      	cmp	r5, #0
 80005ec:	d000      	beq.n	80005f0 <__aeabi_fadd+0x100>
 80005ee:	e0b4      	b.n	800075a <__aeabi_fadd+0x26a>
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d100      	bne.n	80005f6 <__aeabi_fadd+0x106>
 80005f4:	e0db      	b.n	80007ae <__aeabi_fadd+0x2be>
 80005f6:	2e00      	cmp	r6, #0
 80005f8:	d06c      	beq.n	80006d4 <__aeabi_fadd+0x1e4>
 80005fa:	1b98      	subs	r0, r3, r6
 80005fc:	0145      	lsls	r5, r0, #5
 80005fe:	d400      	bmi.n	8000602 <__aeabi_fadd+0x112>
 8000600:	e0f7      	b.n	80007f2 <__aeabi_fadd+0x302>
 8000602:	000c      	movs	r4, r1
 8000604:	1af3      	subs	r3, r6, r3
 8000606:	e03d      	b.n	8000684 <__aeabi_fadd+0x194>
 8000608:	2e00      	cmp	r6, #0
 800060a:	d01b      	beq.n	8000644 <__aeabi_fadd+0x154>
 800060c:	1e51      	subs	r1, r2, #1
 800060e:	2a01      	cmp	r2, #1
 8000610:	d100      	bne.n	8000614 <__aeabi_fadd+0x124>
 8000612:	e082      	b.n	800071a <__aeabi_fadd+0x22a>
 8000614:	2aff      	cmp	r2, #255	@ 0xff
 8000616:	d03a      	beq.n	800068e <__aeabi_fadd+0x19e>
 8000618:	000a      	movs	r2, r1
 800061a:	e7ab      	b.n	8000574 <__aeabi_fadd+0x84>
 800061c:	0031      	movs	r1, r6
 800061e:	2020      	movs	r0, #32
 8000620:	40d1      	lsrs	r1, r2
 8000622:	1a82      	subs	r2, r0, r2
 8000624:	4096      	lsls	r6, r2
 8000626:	0032      	movs	r2, r6
 8000628:	1e50      	subs	r0, r2, #1
 800062a:	4182      	sbcs	r2, r0
 800062c:	430a      	orrs	r2, r1
 800062e:	189b      	adds	r3, r3, r2
 8000630:	015a      	lsls	r2, r3, #5
 8000632:	d5b9      	bpl.n	80005a8 <__aeabi_fadd+0xb8>
 8000634:	1c6a      	adds	r2, r5, #1
 8000636:	2dfe      	cmp	r5, #254	@ 0xfe
 8000638:	d175      	bne.n	8000726 <__aeabi_fadd+0x236>
 800063a:	20ff      	movs	r0, #255	@ 0xff
 800063c:	2300      	movs	r3, #0
 800063e:	e7c4      	b.n	80005ca <__aeabi_fadd+0xda>
 8000640:	000c      	movs	r4, r1
 8000642:	0033      	movs	r3, r6
 8000644:	08db      	lsrs	r3, r3, #3
 8000646:	2aff      	cmp	r2, #255	@ 0xff
 8000648:	d146      	bne.n	80006d8 <__aeabi_fadd+0x1e8>
 800064a:	2b00      	cmp	r3, #0
 800064c:	d0f5      	beq.n	800063a <__aeabi_fadd+0x14a>
 800064e:	2280      	movs	r2, #128	@ 0x80
 8000650:	03d2      	lsls	r2, r2, #15
 8000652:	4313      	orrs	r3, r2
 8000654:	025b      	lsls	r3, r3, #9
 8000656:	20ff      	movs	r0, #255	@ 0xff
 8000658:	0a5b      	lsrs	r3, r3, #9
 800065a:	e7b6      	b.n	80005ca <__aeabi_fadd+0xda>
 800065c:	019f      	lsls	r7, r3, #6
 800065e:	09bf      	lsrs	r7, r7, #6
 8000660:	0038      	movs	r0, r7
 8000662:	f001 fc3f 	bl	8001ee4 <__clzsi2>
 8000666:	3805      	subs	r0, #5
 8000668:	4087      	lsls	r7, r0
 800066a:	4285      	cmp	r5, r0
 800066c:	dc24      	bgt.n	80006b8 <__aeabi_fadd+0x1c8>
 800066e:	003b      	movs	r3, r7
 8000670:	2120      	movs	r1, #32
 8000672:	1b42      	subs	r2, r0, r5
 8000674:	3201      	adds	r2, #1
 8000676:	40d3      	lsrs	r3, r2
 8000678:	1a8a      	subs	r2, r1, r2
 800067a:	4097      	lsls	r7, r2
 800067c:	1e7a      	subs	r2, r7, #1
 800067e:	4197      	sbcs	r7, r2
 8000680:	2200      	movs	r2, #0
 8000682:	433b      	orrs	r3, r7
 8000684:	0759      	lsls	r1, r3, #29
 8000686:	d193      	bne.n	80005b0 <__aeabi_fadd+0xc0>
 8000688:	e797      	b.n	80005ba <__aeabi_fadd+0xca>
 800068a:	000c      	movs	r4, r1
 800068c:	0033      	movs	r3, r6
 800068e:	08db      	lsrs	r3, r3, #3
 8000690:	e7db      	b.n	800064a <__aeabi_fadd+0x15a>
 8000692:	2a00      	cmp	r2, #0
 8000694:	d014      	beq.n	80006c0 <__aeabi_fadd+0x1d0>
 8000696:	1b42      	subs	r2, r0, r5
 8000698:	2d00      	cmp	r5, #0
 800069a:	d14b      	bne.n	8000734 <__aeabi_fadd+0x244>
 800069c:	2b00      	cmp	r3, #0
 800069e:	d0d0      	beq.n	8000642 <__aeabi_fadd+0x152>
 80006a0:	1e51      	subs	r1, r2, #1
 80006a2:	2a01      	cmp	r2, #1
 80006a4:	d100      	bne.n	80006a8 <__aeabi_fadd+0x1b8>
 80006a6:	e09e      	b.n	80007e6 <__aeabi_fadd+0x2f6>
 80006a8:	2aff      	cmp	r2, #255	@ 0xff
 80006aa:	d0ef      	beq.n	800068c <__aeabi_fadd+0x19c>
 80006ac:	000a      	movs	r2, r1
 80006ae:	2a1b      	cmp	r2, #27
 80006b0:	dd5f      	ble.n	8000772 <__aeabi_fadd+0x282>
 80006b2:	0002      	movs	r2, r0
 80006b4:	1c73      	adds	r3, r6, #1
 80006b6:	e77b      	b.n	80005b0 <__aeabi_fadd+0xc0>
 80006b8:	4b50      	ldr	r3, [pc, #320]	@ (80007fc <__aeabi_fadd+0x30c>)
 80006ba:	1a2a      	subs	r2, r5, r0
 80006bc:	403b      	ands	r3, r7
 80006be:	e7e1      	b.n	8000684 <__aeabi_fadd+0x194>
 80006c0:	21fe      	movs	r1, #254	@ 0xfe
 80006c2:	1c6a      	adds	r2, r5, #1
 80006c4:	4211      	tst	r1, r2
 80006c6:	d13b      	bne.n	8000740 <__aeabi_fadd+0x250>
 80006c8:	2d00      	cmp	r5, #0
 80006ca:	d15d      	bne.n	8000788 <__aeabi_fadd+0x298>
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d07f      	beq.n	80007d0 <__aeabi_fadd+0x2e0>
 80006d0:	2e00      	cmp	r6, #0
 80006d2:	d17f      	bne.n	80007d4 <__aeabi_fadd+0x2e4>
 80006d4:	2200      	movs	r2, #0
 80006d6:	08db      	lsrs	r3, r3, #3
 80006d8:	025b      	lsls	r3, r3, #9
 80006da:	0a5b      	lsrs	r3, r3, #9
 80006dc:	b2d0      	uxtb	r0, r2
 80006de:	e774      	b.n	80005ca <__aeabi_fadd+0xda>
 80006e0:	28ff      	cmp	r0, #255	@ 0xff
 80006e2:	d0d2      	beq.n	800068a <__aeabi_fadd+0x19a>
 80006e4:	2480      	movs	r4, #128	@ 0x80
 80006e6:	04e4      	lsls	r4, r4, #19
 80006e8:	4323      	orrs	r3, r4
 80006ea:	2401      	movs	r4, #1
 80006ec:	2a1b      	cmp	r2, #27
 80006ee:	dc07      	bgt.n	8000700 <__aeabi_fadd+0x210>
 80006f0:	001c      	movs	r4, r3
 80006f2:	2520      	movs	r5, #32
 80006f4:	40d4      	lsrs	r4, r2
 80006f6:	1aaa      	subs	r2, r5, r2
 80006f8:	4093      	lsls	r3, r2
 80006fa:	1e5a      	subs	r2, r3, #1
 80006fc:	4193      	sbcs	r3, r2
 80006fe:	431c      	orrs	r4, r3
 8000700:	1b33      	subs	r3, r6, r4
 8000702:	0005      	movs	r5, r0
 8000704:	000c      	movs	r4, r1
 8000706:	e74d      	b.n	80005a4 <__aeabi_fadd+0xb4>
 8000708:	1b9f      	subs	r7, r3, r6
 800070a:	017a      	lsls	r2, r7, #5
 800070c:	d422      	bmi.n	8000754 <__aeabi_fadd+0x264>
 800070e:	2f00      	cmp	r7, #0
 8000710:	d1a6      	bne.n	8000660 <__aeabi_fadd+0x170>
 8000712:	2400      	movs	r4, #0
 8000714:	2000      	movs	r0, #0
 8000716:	2300      	movs	r3, #0
 8000718:	e757      	b.n	80005ca <__aeabi_fadd+0xda>
 800071a:	199b      	adds	r3, r3, r6
 800071c:	2501      	movs	r5, #1
 800071e:	3201      	adds	r2, #1
 8000720:	0159      	lsls	r1, r3, #5
 8000722:	d400      	bmi.n	8000726 <__aeabi_fadd+0x236>
 8000724:	e740      	b.n	80005a8 <__aeabi_fadd+0xb8>
 8000726:	2101      	movs	r1, #1
 8000728:	4835      	ldr	r0, [pc, #212]	@ (8000800 <__aeabi_fadd+0x310>)
 800072a:	4019      	ands	r1, r3
 800072c:	085b      	lsrs	r3, r3, #1
 800072e:	4003      	ands	r3, r0
 8000730:	430b      	orrs	r3, r1
 8000732:	e7a7      	b.n	8000684 <__aeabi_fadd+0x194>
 8000734:	28ff      	cmp	r0, #255	@ 0xff
 8000736:	d0a9      	beq.n	800068c <__aeabi_fadd+0x19c>
 8000738:	2180      	movs	r1, #128	@ 0x80
 800073a:	04c9      	lsls	r1, r1, #19
 800073c:	430b      	orrs	r3, r1
 800073e:	e7b6      	b.n	80006ae <__aeabi_fadd+0x1be>
 8000740:	2aff      	cmp	r2, #255	@ 0xff
 8000742:	d100      	bne.n	8000746 <__aeabi_fadd+0x256>
 8000744:	e779      	b.n	800063a <__aeabi_fadd+0x14a>
 8000746:	199b      	adds	r3, r3, r6
 8000748:	085b      	lsrs	r3, r3, #1
 800074a:	0759      	lsls	r1, r3, #29
 800074c:	d000      	beq.n	8000750 <__aeabi_fadd+0x260>
 800074e:	e72f      	b.n	80005b0 <__aeabi_fadd+0xc0>
 8000750:	08db      	lsrs	r3, r3, #3
 8000752:	e7c1      	b.n	80006d8 <__aeabi_fadd+0x1e8>
 8000754:	000c      	movs	r4, r1
 8000756:	1af7      	subs	r7, r6, r3
 8000758:	e782      	b.n	8000660 <__aeabi_fadd+0x170>
 800075a:	2b00      	cmp	r3, #0
 800075c:	d12c      	bne.n	80007b8 <__aeabi_fadd+0x2c8>
 800075e:	2e00      	cmp	r6, #0
 8000760:	d193      	bne.n	800068a <__aeabi_fadd+0x19a>
 8000762:	2380      	movs	r3, #128	@ 0x80
 8000764:	2400      	movs	r4, #0
 8000766:	20ff      	movs	r0, #255	@ 0xff
 8000768:	03db      	lsls	r3, r3, #15
 800076a:	e72e      	b.n	80005ca <__aeabi_fadd+0xda>
 800076c:	2501      	movs	r5, #1
 800076e:	1b9b      	subs	r3, r3, r6
 8000770:	e718      	b.n	80005a4 <__aeabi_fadd+0xb4>
 8000772:	0019      	movs	r1, r3
 8000774:	2520      	movs	r5, #32
 8000776:	40d1      	lsrs	r1, r2
 8000778:	1aaa      	subs	r2, r5, r2
 800077a:	4093      	lsls	r3, r2
 800077c:	1e5a      	subs	r2, r3, #1
 800077e:	4193      	sbcs	r3, r2
 8000780:	430b      	orrs	r3, r1
 8000782:	0005      	movs	r5, r0
 8000784:	199b      	adds	r3, r3, r6
 8000786:	e753      	b.n	8000630 <__aeabi_fadd+0x140>
 8000788:	2b00      	cmp	r3, #0
 800078a:	d100      	bne.n	800078e <__aeabi_fadd+0x29e>
 800078c:	e77e      	b.n	800068c <__aeabi_fadd+0x19c>
 800078e:	2e00      	cmp	r6, #0
 8000790:	d100      	bne.n	8000794 <__aeabi_fadd+0x2a4>
 8000792:	e77c      	b.n	800068e <__aeabi_fadd+0x19e>
 8000794:	2280      	movs	r2, #128	@ 0x80
 8000796:	03d2      	lsls	r2, r2, #15
 8000798:	4591      	cmp	r9, r2
 800079a:	d302      	bcc.n	80007a2 <__aeabi_fadd+0x2b2>
 800079c:	4594      	cmp	ip, r2
 800079e:	d200      	bcs.n	80007a2 <__aeabi_fadd+0x2b2>
 80007a0:	0033      	movs	r3, r6
 80007a2:	08db      	lsrs	r3, r3, #3
 80007a4:	e753      	b.n	800064e <__aeabi_fadd+0x15e>
 80007a6:	000c      	movs	r4, r1
 80007a8:	1af3      	subs	r3, r6, r3
 80007aa:	3501      	adds	r5, #1
 80007ac:	e6fa      	b.n	80005a4 <__aeabi_fadd+0xb4>
 80007ae:	2e00      	cmp	r6, #0
 80007b0:	d0af      	beq.n	8000712 <__aeabi_fadd+0x222>
 80007b2:	000c      	movs	r4, r1
 80007b4:	0033      	movs	r3, r6
 80007b6:	e78d      	b.n	80006d4 <__aeabi_fadd+0x1e4>
 80007b8:	2e00      	cmp	r6, #0
 80007ba:	d100      	bne.n	80007be <__aeabi_fadd+0x2ce>
 80007bc:	e767      	b.n	800068e <__aeabi_fadd+0x19e>
 80007be:	2280      	movs	r2, #128	@ 0x80
 80007c0:	03d2      	lsls	r2, r2, #15
 80007c2:	4591      	cmp	r9, r2
 80007c4:	d3ed      	bcc.n	80007a2 <__aeabi_fadd+0x2b2>
 80007c6:	4594      	cmp	ip, r2
 80007c8:	d2eb      	bcs.n	80007a2 <__aeabi_fadd+0x2b2>
 80007ca:	000c      	movs	r4, r1
 80007cc:	0033      	movs	r3, r6
 80007ce:	e7e8      	b.n	80007a2 <__aeabi_fadd+0x2b2>
 80007d0:	0033      	movs	r3, r6
 80007d2:	e77f      	b.n	80006d4 <__aeabi_fadd+0x1e4>
 80007d4:	199b      	adds	r3, r3, r6
 80007d6:	2200      	movs	r2, #0
 80007d8:	0159      	lsls	r1, r3, #5
 80007da:	d5b9      	bpl.n	8000750 <__aeabi_fadd+0x260>
 80007dc:	4a07      	ldr	r2, [pc, #28]	@ (80007fc <__aeabi_fadd+0x30c>)
 80007de:	4013      	ands	r3, r2
 80007e0:	08db      	lsrs	r3, r3, #3
 80007e2:	2201      	movs	r2, #1
 80007e4:	e778      	b.n	80006d8 <__aeabi_fadd+0x1e8>
 80007e6:	199b      	adds	r3, r3, r6
 80007e8:	3201      	adds	r2, #1
 80007ea:	3501      	adds	r5, #1
 80007ec:	0159      	lsls	r1, r3, #5
 80007ee:	d49a      	bmi.n	8000726 <__aeabi_fadd+0x236>
 80007f0:	e6da      	b.n	80005a8 <__aeabi_fadd+0xb8>
 80007f2:	1e03      	subs	r3, r0, #0
 80007f4:	d08d      	beq.n	8000712 <__aeabi_fadd+0x222>
 80007f6:	08db      	lsrs	r3, r3, #3
 80007f8:	e76e      	b.n	80006d8 <__aeabi_fadd+0x1e8>
 80007fa:	46c0      	nop			@ (mov r8, r8)
 80007fc:	fbffffff 	.word	0xfbffffff
 8000800:	7dffffff 	.word	0x7dffffff

08000804 <__aeabi_fdiv>:
 8000804:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000806:	464f      	mov	r7, r9
 8000808:	4646      	mov	r6, r8
 800080a:	46d6      	mov	lr, sl
 800080c:	0244      	lsls	r4, r0, #9
 800080e:	b5c0      	push	{r6, r7, lr}
 8000810:	0047      	lsls	r7, r0, #1
 8000812:	1c0e      	adds	r6, r1, #0
 8000814:	0a64      	lsrs	r4, r4, #9
 8000816:	0e3f      	lsrs	r7, r7, #24
 8000818:	0fc5      	lsrs	r5, r0, #31
 800081a:	2f00      	cmp	r7, #0
 800081c:	d03c      	beq.n	8000898 <__aeabi_fdiv+0x94>
 800081e:	2fff      	cmp	r7, #255	@ 0xff
 8000820:	d042      	beq.n	80008a8 <__aeabi_fdiv+0xa4>
 8000822:	2300      	movs	r3, #0
 8000824:	2280      	movs	r2, #128	@ 0x80
 8000826:	4699      	mov	r9, r3
 8000828:	469a      	mov	sl, r3
 800082a:	00e4      	lsls	r4, r4, #3
 800082c:	04d2      	lsls	r2, r2, #19
 800082e:	4314      	orrs	r4, r2
 8000830:	3f7f      	subs	r7, #127	@ 0x7f
 8000832:	0273      	lsls	r3, r6, #9
 8000834:	0a5b      	lsrs	r3, r3, #9
 8000836:	4698      	mov	r8, r3
 8000838:	0073      	lsls	r3, r6, #1
 800083a:	0e1b      	lsrs	r3, r3, #24
 800083c:	0ff6      	lsrs	r6, r6, #31
 800083e:	2b00      	cmp	r3, #0
 8000840:	d01b      	beq.n	800087a <__aeabi_fdiv+0x76>
 8000842:	2bff      	cmp	r3, #255	@ 0xff
 8000844:	d013      	beq.n	800086e <__aeabi_fdiv+0x6a>
 8000846:	4642      	mov	r2, r8
 8000848:	2180      	movs	r1, #128	@ 0x80
 800084a:	00d2      	lsls	r2, r2, #3
 800084c:	04c9      	lsls	r1, r1, #19
 800084e:	4311      	orrs	r1, r2
 8000850:	4688      	mov	r8, r1
 8000852:	2000      	movs	r0, #0
 8000854:	3b7f      	subs	r3, #127	@ 0x7f
 8000856:	0029      	movs	r1, r5
 8000858:	1aff      	subs	r7, r7, r3
 800085a:	464b      	mov	r3, r9
 800085c:	4071      	eors	r1, r6
 800085e:	b2c9      	uxtb	r1, r1
 8000860:	2b0f      	cmp	r3, #15
 8000862:	d900      	bls.n	8000866 <__aeabi_fdiv+0x62>
 8000864:	e0b5      	b.n	80009d2 <__aeabi_fdiv+0x1ce>
 8000866:	4a74      	ldr	r2, [pc, #464]	@ (8000a38 <__aeabi_fdiv+0x234>)
 8000868:	009b      	lsls	r3, r3, #2
 800086a:	58d3      	ldr	r3, [r2, r3]
 800086c:	469f      	mov	pc, r3
 800086e:	4643      	mov	r3, r8
 8000870:	2b00      	cmp	r3, #0
 8000872:	d13f      	bne.n	80008f4 <__aeabi_fdiv+0xf0>
 8000874:	3fff      	subs	r7, #255	@ 0xff
 8000876:	3302      	adds	r3, #2
 8000878:	e003      	b.n	8000882 <__aeabi_fdiv+0x7e>
 800087a:	4643      	mov	r3, r8
 800087c:	2b00      	cmp	r3, #0
 800087e:	d12d      	bne.n	80008dc <__aeabi_fdiv+0xd8>
 8000880:	2301      	movs	r3, #1
 8000882:	0029      	movs	r1, r5
 8000884:	464a      	mov	r2, r9
 8000886:	4071      	eors	r1, r6
 8000888:	b2c9      	uxtb	r1, r1
 800088a:	431a      	orrs	r2, r3
 800088c:	2a0e      	cmp	r2, #14
 800088e:	d838      	bhi.n	8000902 <__aeabi_fdiv+0xfe>
 8000890:	486a      	ldr	r0, [pc, #424]	@ (8000a3c <__aeabi_fdiv+0x238>)
 8000892:	0092      	lsls	r2, r2, #2
 8000894:	5882      	ldr	r2, [r0, r2]
 8000896:	4697      	mov	pc, r2
 8000898:	2c00      	cmp	r4, #0
 800089a:	d113      	bne.n	80008c4 <__aeabi_fdiv+0xc0>
 800089c:	2304      	movs	r3, #4
 800089e:	4699      	mov	r9, r3
 80008a0:	3b03      	subs	r3, #3
 80008a2:	2700      	movs	r7, #0
 80008a4:	469a      	mov	sl, r3
 80008a6:	e7c4      	b.n	8000832 <__aeabi_fdiv+0x2e>
 80008a8:	2c00      	cmp	r4, #0
 80008aa:	d105      	bne.n	80008b8 <__aeabi_fdiv+0xb4>
 80008ac:	2308      	movs	r3, #8
 80008ae:	4699      	mov	r9, r3
 80008b0:	3b06      	subs	r3, #6
 80008b2:	27ff      	movs	r7, #255	@ 0xff
 80008b4:	469a      	mov	sl, r3
 80008b6:	e7bc      	b.n	8000832 <__aeabi_fdiv+0x2e>
 80008b8:	230c      	movs	r3, #12
 80008ba:	4699      	mov	r9, r3
 80008bc:	3b09      	subs	r3, #9
 80008be:	27ff      	movs	r7, #255	@ 0xff
 80008c0:	469a      	mov	sl, r3
 80008c2:	e7b6      	b.n	8000832 <__aeabi_fdiv+0x2e>
 80008c4:	0020      	movs	r0, r4
 80008c6:	f001 fb0d 	bl	8001ee4 <__clzsi2>
 80008ca:	2776      	movs	r7, #118	@ 0x76
 80008cc:	1f43      	subs	r3, r0, #5
 80008ce:	409c      	lsls	r4, r3
 80008d0:	2300      	movs	r3, #0
 80008d2:	427f      	negs	r7, r7
 80008d4:	4699      	mov	r9, r3
 80008d6:	469a      	mov	sl, r3
 80008d8:	1a3f      	subs	r7, r7, r0
 80008da:	e7aa      	b.n	8000832 <__aeabi_fdiv+0x2e>
 80008dc:	4640      	mov	r0, r8
 80008de:	f001 fb01 	bl	8001ee4 <__clzsi2>
 80008e2:	4642      	mov	r2, r8
 80008e4:	1f43      	subs	r3, r0, #5
 80008e6:	409a      	lsls	r2, r3
 80008e8:	2376      	movs	r3, #118	@ 0x76
 80008ea:	425b      	negs	r3, r3
 80008ec:	1a1b      	subs	r3, r3, r0
 80008ee:	4690      	mov	r8, r2
 80008f0:	2000      	movs	r0, #0
 80008f2:	e7b0      	b.n	8000856 <__aeabi_fdiv+0x52>
 80008f4:	2303      	movs	r3, #3
 80008f6:	464a      	mov	r2, r9
 80008f8:	431a      	orrs	r2, r3
 80008fa:	4691      	mov	r9, r2
 80008fc:	2003      	movs	r0, #3
 80008fe:	33fc      	adds	r3, #252	@ 0xfc
 8000900:	e7a9      	b.n	8000856 <__aeabi_fdiv+0x52>
 8000902:	000d      	movs	r5, r1
 8000904:	20ff      	movs	r0, #255	@ 0xff
 8000906:	2200      	movs	r2, #0
 8000908:	05c0      	lsls	r0, r0, #23
 800090a:	07ed      	lsls	r5, r5, #31
 800090c:	4310      	orrs	r0, r2
 800090e:	4328      	orrs	r0, r5
 8000910:	bce0      	pop	{r5, r6, r7}
 8000912:	46ba      	mov	sl, r7
 8000914:	46b1      	mov	r9, r6
 8000916:	46a8      	mov	r8, r5
 8000918:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800091a:	000d      	movs	r5, r1
 800091c:	2000      	movs	r0, #0
 800091e:	2200      	movs	r2, #0
 8000920:	e7f2      	b.n	8000908 <__aeabi_fdiv+0x104>
 8000922:	4653      	mov	r3, sl
 8000924:	2b02      	cmp	r3, #2
 8000926:	d0ed      	beq.n	8000904 <__aeabi_fdiv+0x100>
 8000928:	2b03      	cmp	r3, #3
 800092a:	d033      	beq.n	8000994 <__aeabi_fdiv+0x190>
 800092c:	46a0      	mov	r8, r4
 800092e:	2b01      	cmp	r3, #1
 8000930:	d105      	bne.n	800093e <__aeabi_fdiv+0x13a>
 8000932:	2000      	movs	r0, #0
 8000934:	2200      	movs	r2, #0
 8000936:	e7e7      	b.n	8000908 <__aeabi_fdiv+0x104>
 8000938:	0035      	movs	r5, r6
 800093a:	2803      	cmp	r0, #3
 800093c:	d07a      	beq.n	8000a34 <__aeabi_fdiv+0x230>
 800093e:	003b      	movs	r3, r7
 8000940:	337f      	adds	r3, #127	@ 0x7f
 8000942:	2b00      	cmp	r3, #0
 8000944:	dd2d      	ble.n	80009a2 <__aeabi_fdiv+0x19e>
 8000946:	4642      	mov	r2, r8
 8000948:	0752      	lsls	r2, r2, #29
 800094a:	d007      	beq.n	800095c <__aeabi_fdiv+0x158>
 800094c:	220f      	movs	r2, #15
 800094e:	4641      	mov	r1, r8
 8000950:	400a      	ands	r2, r1
 8000952:	2a04      	cmp	r2, #4
 8000954:	d002      	beq.n	800095c <__aeabi_fdiv+0x158>
 8000956:	2204      	movs	r2, #4
 8000958:	4694      	mov	ip, r2
 800095a:	44e0      	add	r8, ip
 800095c:	4642      	mov	r2, r8
 800095e:	0112      	lsls	r2, r2, #4
 8000960:	d505      	bpl.n	800096e <__aeabi_fdiv+0x16a>
 8000962:	4642      	mov	r2, r8
 8000964:	4b36      	ldr	r3, [pc, #216]	@ (8000a40 <__aeabi_fdiv+0x23c>)
 8000966:	401a      	ands	r2, r3
 8000968:	003b      	movs	r3, r7
 800096a:	4690      	mov	r8, r2
 800096c:	3380      	adds	r3, #128	@ 0x80
 800096e:	2bfe      	cmp	r3, #254	@ 0xfe
 8000970:	dcc8      	bgt.n	8000904 <__aeabi_fdiv+0x100>
 8000972:	4642      	mov	r2, r8
 8000974:	0192      	lsls	r2, r2, #6
 8000976:	0a52      	lsrs	r2, r2, #9
 8000978:	b2d8      	uxtb	r0, r3
 800097a:	e7c5      	b.n	8000908 <__aeabi_fdiv+0x104>
 800097c:	2280      	movs	r2, #128	@ 0x80
 800097e:	2500      	movs	r5, #0
 8000980:	20ff      	movs	r0, #255	@ 0xff
 8000982:	03d2      	lsls	r2, r2, #15
 8000984:	e7c0      	b.n	8000908 <__aeabi_fdiv+0x104>
 8000986:	2280      	movs	r2, #128	@ 0x80
 8000988:	03d2      	lsls	r2, r2, #15
 800098a:	4214      	tst	r4, r2
 800098c:	d002      	beq.n	8000994 <__aeabi_fdiv+0x190>
 800098e:	4643      	mov	r3, r8
 8000990:	4213      	tst	r3, r2
 8000992:	d049      	beq.n	8000a28 <__aeabi_fdiv+0x224>
 8000994:	2280      	movs	r2, #128	@ 0x80
 8000996:	03d2      	lsls	r2, r2, #15
 8000998:	4322      	orrs	r2, r4
 800099a:	0252      	lsls	r2, r2, #9
 800099c:	20ff      	movs	r0, #255	@ 0xff
 800099e:	0a52      	lsrs	r2, r2, #9
 80009a0:	e7b2      	b.n	8000908 <__aeabi_fdiv+0x104>
 80009a2:	2201      	movs	r2, #1
 80009a4:	1ad3      	subs	r3, r2, r3
 80009a6:	2b1b      	cmp	r3, #27
 80009a8:	dcc3      	bgt.n	8000932 <__aeabi_fdiv+0x12e>
 80009aa:	4642      	mov	r2, r8
 80009ac:	40da      	lsrs	r2, r3
 80009ae:	4643      	mov	r3, r8
 80009b0:	379e      	adds	r7, #158	@ 0x9e
 80009b2:	40bb      	lsls	r3, r7
 80009b4:	1e59      	subs	r1, r3, #1
 80009b6:	418b      	sbcs	r3, r1
 80009b8:	431a      	orrs	r2, r3
 80009ba:	0753      	lsls	r3, r2, #29
 80009bc:	d004      	beq.n	80009c8 <__aeabi_fdiv+0x1c4>
 80009be:	230f      	movs	r3, #15
 80009c0:	4013      	ands	r3, r2
 80009c2:	2b04      	cmp	r3, #4
 80009c4:	d000      	beq.n	80009c8 <__aeabi_fdiv+0x1c4>
 80009c6:	3204      	adds	r2, #4
 80009c8:	0153      	lsls	r3, r2, #5
 80009ca:	d529      	bpl.n	8000a20 <__aeabi_fdiv+0x21c>
 80009cc:	2001      	movs	r0, #1
 80009ce:	2200      	movs	r2, #0
 80009d0:	e79a      	b.n	8000908 <__aeabi_fdiv+0x104>
 80009d2:	4642      	mov	r2, r8
 80009d4:	0163      	lsls	r3, r4, #5
 80009d6:	0155      	lsls	r5, r2, #5
 80009d8:	42ab      	cmp	r3, r5
 80009da:	d215      	bcs.n	8000a08 <__aeabi_fdiv+0x204>
 80009dc:	201b      	movs	r0, #27
 80009de:	2200      	movs	r2, #0
 80009e0:	3f01      	subs	r7, #1
 80009e2:	2601      	movs	r6, #1
 80009e4:	001c      	movs	r4, r3
 80009e6:	0052      	lsls	r2, r2, #1
 80009e8:	005b      	lsls	r3, r3, #1
 80009ea:	2c00      	cmp	r4, #0
 80009ec:	db01      	blt.n	80009f2 <__aeabi_fdiv+0x1ee>
 80009ee:	429d      	cmp	r5, r3
 80009f0:	d801      	bhi.n	80009f6 <__aeabi_fdiv+0x1f2>
 80009f2:	1b5b      	subs	r3, r3, r5
 80009f4:	4332      	orrs	r2, r6
 80009f6:	3801      	subs	r0, #1
 80009f8:	2800      	cmp	r0, #0
 80009fa:	d1f3      	bne.n	80009e4 <__aeabi_fdiv+0x1e0>
 80009fc:	1e58      	subs	r0, r3, #1
 80009fe:	4183      	sbcs	r3, r0
 8000a00:	4313      	orrs	r3, r2
 8000a02:	4698      	mov	r8, r3
 8000a04:	000d      	movs	r5, r1
 8000a06:	e79a      	b.n	800093e <__aeabi_fdiv+0x13a>
 8000a08:	201a      	movs	r0, #26
 8000a0a:	2201      	movs	r2, #1
 8000a0c:	1b5b      	subs	r3, r3, r5
 8000a0e:	e7e8      	b.n	80009e2 <__aeabi_fdiv+0x1de>
 8000a10:	3b02      	subs	r3, #2
 8000a12:	425a      	negs	r2, r3
 8000a14:	4153      	adcs	r3, r2
 8000a16:	425b      	negs	r3, r3
 8000a18:	0035      	movs	r5, r6
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	b2d8      	uxtb	r0, r3
 8000a1e:	e773      	b.n	8000908 <__aeabi_fdiv+0x104>
 8000a20:	0192      	lsls	r2, r2, #6
 8000a22:	2000      	movs	r0, #0
 8000a24:	0a52      	lsrs	r2, r2, #9
 8000a26:	e76f      	b.n	8000908 <__aeabi_fdiv+0x104>
 8000a28:	431a      	orrs	r2, r3
 8000a2a:	0252      	lsls	r2, r2, #9
 8000a2c:	0035      	movs	r5, r6
 8000a2e:	20ff      	movs	r0, #255	@ 0xff
 8000a30:	0a52      	lsrs	r2, r2, #9
 8000a32:	e769      	b.n	8000908 <__aeabi_fdiv+0x104>
 8000a34:	4644      	mov	r4, r8
 8000a36:	e7ad      	b.n	8000994 <__aeabi_fdiv+0x190>
 8000a38:	080037b4 	.word	0x080037b4
 8000a3c:	080037f4 	.word	0x080037f4
 8000a40:	f7ffffff 	.word	0xf7ffffff

08000a44 <__aeabi_fmul>:
 8000a44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a46:	464f      	mov	r7, r9
 8000a48:	4646      	mov	r6, r8
 8000a4a:	46d6      	mov	lr, sl
 8000a4c:	0243      	lsls	r3, r0, #9
 8000a4e:	0a5b      	lsrs	r3, r3, #9
 8000a50:	0045      	lsls	r5, r0, #1
 8000a52:	b5c0      	push	{r6, r7, lr}
 8000a54:	4699      	mov	r9, r3
 8000a56:	1c0f      	adds	r7, r1, #0
 8000a58:	0e2d      	lsrs	r5, r5, #24
 8000a5a:	0fc6      	lsrs	r6, r0, #31
 8000a5c:	2d00      	cmp	r5, #0
 8000a5e:	d100      	bne.n	8000a62 <__aeabi_fmul+0x1e>
 8000a60:	e088      	b.n	8000b74 <__aeabi_fmul+0x130>
 8000a62:	2dff      	cmp	r5, #255	@ 0xff
 8000a64:	d100      	bne.n	8000a68 <__aeabi_fmul+0x24>
 8000a66:	e08d      	b.n	8000b84 <__aeabi_fmul+0x140>
 8000a68:	2280      	movs	r2, #128	@ 0x80
 8000a6a:	00db      	lsls	r3, r3, #3
 8000a6c:	04d2      	lsls	r2, r2, #19
 8000a6e:	431a      	orrs	r2, r3
 8000a70:	2300      	movs	r3, #0
 8000a72:	4691      	mov	r9, r2
 8000a74:	4698      	mov	r8, r3
 8000a76:	469a      	mov	sl, r3
 8000a78:	3d7f      	subs	r5, #127	@ 0x7f
 8000a7a:	027c      	lsls	r4, r7, #9
 8000a7c:	007b      	lsls	r3, r7, #1
 8000a7e:	0a64      	lsrs	r4, r4, #9
 8000a80:	0e1b      	lsrs	r3, r3, #24
 8000a82:	0fff      	lsrs	r7, r7, #31
 8000a84:	2b00      	cmp	r3, #0
 8000a86:	d068      	beq.n	8000b5a <__aeabi_fmul+0x116>
 8000a88:	2bff      	cmp	r3, #255	@ 0xff
 8000a8a:	d021      	beq.n	8000ad0 <__aeabi_fmul+0x8c>
 8000a8c:	2280      	movs	r2, #128	@ 0x80
 8000a8e:	00e4      	lsls	r4, r4, #3
 8000a90:	04d2      	lsls	r2, r2, #19
 8000a92:	4314      	orrs	r4, r2
 8000a94:	4642      	mov	r2, r8
 8000a96:	3b7f      	subs	r3, #127	@ 0x7f
 8000a98:	195b      	adds	r3, r3, r5
 8000a9a:	2100      	movs	r1, #0
 8000a9c:	1c5d      	adds	r5, r3, #1
 8000a9e:	2a0a      	cmp	r2, #10
 8000aa0:	dc2e      	bgt.n	8000b00 <__aeabi_fmul+0xbc>
 8000aa2:	407e      	eors	r6, r7
 8000aa4:	4642      	mov	r2, r8
 8000aa6:	2a02      	cmp	r2, #2
 8000aa8:	dc23      	bgt.n	8000af2 <__aeabi_fmul+0xae>
 8000aaa:	3a01      	subs	r2, #1
 8000aac:	2a01      	cmp	r2, #1
 8000aae:	d900      	bls.n	8000ab2 <__aeabi_fmul+0x6e>
 8000ab0:	e0bd      	b.n	8000c2e <__aeabi_fmul+0x1ea>
 8000ab2:	2902      	cmp	r1, #2
 8000ab4:	d06e      	beq.n	8000b94 <__aeabi_fmul+0x150>
 8000ab6:	2901      	cmp	r1, #1
 8000ab8:	d12c      	bne.n	8000b14 <__aeabi_fmul+0xd0>
 8000aba:	2000      	movs	r0, #0
 8000abc:	2200      	movs	r2, #0
 8000abe:	05c0      	lsls	r0, r0, #23
 8000ac0:	07f6      	lsls	r6, r6, #31
 8000ac2:	4310      	orrs	r0, r2
 8000ac4:	4330      	orrs	r0, r6
 8000ac6:	bce0      	pop	{r5, r6, r7}
 8000ac8:	46ba      	mov	sl, r7
 8000aca:	46b1      	mov	r9, r6
 8000acc:	46a8      	mov	r8, r5
 8000ace:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ad0:	002b      	movs	r3, r5
 8000ad2:	33ff      	adds	r3, #255	@ 0xff
 8000ad4:	2c00      	cmp	r4, #0
 8000ad6:	d065      	beq.n	8000ba4 <__aeabi_fmul+0x160>
 8000ad8:	2203      	movs	r2, #3
 8000ada:	4641      	mov	r1, r8
 8000adc:	4311      	orrs	r1, r2
 8000ade:	0032      	movs	r2, r6
 8000ae0:	3501      	adds	r5, #1
 8000ae2:	4688      	mov	r8, r1
 8000ae4:	407a      	eors	r2, r7
 8000ae6:	35ff      	adds	r5, #255	@ 0xff
 8000ae8:	290a      	cmp	r1, #10
 8000aea:	dd00      	ble.n	8000aee <__aeabi_fmul+0xaa>
 8000aec:	e0d8      	b.n	8000ca0 <__aeabi_fmul+0x25c>
 8000aee:	0016      	movs	r6, r2
 8000af0:	2103      	movs	r1, #3
 8000af2:	4640      	mov	r0, r8
 8000af4:	2201      	movs	r2, #1
 8000af6:	4082      	lsls	r2, r0
 8000af8:	20a6      	movs	r0, #166	@ 0xa6
 8000afa:	00c0      	lsls	r0, r0, #3
 8000afc:	4202      	tst	r2, r0
 8000afe:	d020      	beq.n	8000b42 <__aeabi_fmul+0xfe>
 8000b00:	4653      	mov	r3, sl
 8000b02:	2b02      	cmp	r3, #2
 8000b04:	d046      	beq.n	8000b94 <__aeabi_fmul+0x150>
 8000b06:	2b03      	cmp	r3, #3
 8000b08:	d100      	bne.n	8000b0c <__aeabi_fmul+0xc8>
 8000b0a:	e0bb      	b.n	8000c84 <__aeabi_fmul+0x240>
 8000b0c:	4651      	mov	r1, sl
 8000b0e:	464c      	mov	r4, r9
 8000b10:	2901      	cmp	r1, #1
 8000b12:	d0d2      	beq.n	8000aba <__aeabi_fmul+0x76>
 8000b14:	002b      	movs	r3, r5
 8000b16:	337f      	adds	r3, #127	@ 0x7f
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	dd70      	ble.n	8000bfe <__aeabi_fmul+0x1ba>
 8000b1c:	0762      	lsls	r2, r4, #29
 8000b1e:	d004      	beq.n	8000b2a <__aeabi_fmul+0xe6>
 8000b20:	220f      	movs	r2, #15
 8000b22:	4022      	ands	r2, r4
 8000b24:	2a04      	cmp	r2, #4
 8000b26:	d000      	beq.n	8000b2a <__aeabi_fmul+0xe6>
 8000b28:	3404      	adds	r4, #4
 8000b2a:	0122      	lsls	r2, r4, #4
 8000b2c:	d503      	bpl.n	8000b36 <__aeabi_fmul+0xf2>
 8000b2e:	4b63      	ldr	r3, [pc, #396]	@ (8000cbc <__aeabi_fmul+0x278>)
 8000b30:	401c      	ands	r4, r3
 8000b32:	002b      	movs	r3, r5
 8000b34:	3380      	adds	r3, #128	@ 0x80
 8000b36:	2bfe      	cmp	r3, #254	@ 0xfe
 8000b38:	dc2c      	bgt.n	8000b94 <__aeabi_fmul+0x150>
 8000b3a:	01a2      	lsls	r2, r4, #6
 8000b3c:	0a52      	lsrs	r2, r2, #9
 8000b3e:	b2d8      	uxtb	r0, r3
 8000b40:	e7bd      	b.n	8000abe <__aeabi_fmul+0x7a>
 8000b42:	2090      	movs	r0, #144	@ 0x90
 8000b44:	0080      	lsls	r0, r0, #2
 8000b46:	4202      	tst	r2, r0
 8000b48:	d127      	bne.n	8000b9a <__aeabi_fmul+0x156>
 8000b4a:	38b9      	subs	r0, #185	@ 0xb9
 8000b4c:	38ff      	subs	r0, #255	@ 0xff
 8000b4e:	4210      	tst	r0, r2
 8000b50:	d06d      	beq.n	8000c2e <__aeabi_fmul+0x1ea>
 8000b52:	003e      	movs	r6, r7
 8000b54:	46a1      	mov	r9, r4
 8000b56:	468a      	mov	sl, r1
 8000b58:	e7d2      	b.n	8000b00 <__aeabi_fmul+0xbc>
 8000b5a:	2c00      	cmp	r4, #0
 8000b5c:	d141      	bne.n	8000be2 <__aeabi_fmul+0x19e>
 8000b5e:	2301      	movs	r3, #1
 8000b60:	4642      	mov	r2, r8
 8000b62:	431a      	orrs	r2, r3
 8000b64:	4690      	mov	r8, r2
 8000b66:	002b      	movs	r3, r5
 8000b68:	4642      	mov	r2, r8
 8000b6a:	2101      	movs	r1, #1
 8000b6c:	1c5d      	adds	r5, r3, #1
 8000b6e:	2a0a      	cmp	r2, #10
 8000b70:	dd97      	ble.n	8000aa2 <__aeabi_fmul+0x5e>
 8000b72:	e7c5      	b.n	8000b00 <__aeabi_fmul+0xbc>
 8000b74:	2b00      	cmp	r3, #0
 8000b76:	d126      	bne.n	8000bc6 <__aeabi_fmul+0x182>
 8000b78:	2304      	movs	r3, #4
 8000b7a:	4698      	mov	r8, r3
 8000b7c:	3b03      	subs	r3, #3
 8000b7e:	2500      	movs	r5, #0
 8000b80:	469a      	mov	sl, r3
 8000b82:	e77a      	b.n	8000a7a <__aeabi_fmul+0x36>
 8000b84:	2b00      	cmp	r3, #0
 8000b86:	d118      	bne.n	8000bba <__aeabi_fmul+0x176>
 8000b88:	2308      	movs	r3, #8
 8000b8a:	4698      	mov	r8, r3
 8000b8c:	3b06      	subs	r3, #6
 8000b8e:	25ff      	movs	r5, #255	@ 0xff
 8000b90:	469a      	mov	sl, r3
 8000b92:	e772      	b.n	8000a7a <__aeabi_fmul+0x36>
 8000b94:	20ff      	movs	r0, #255	@ 0xff
 8000b96:	2200      	movs	r2, #0
 8000b98:	e791      	b.n	8000abe <__aeabi_fmul+0x7a>
 8000b9a:	2280      	movs	r2, #128	@ 0x80
 8000b9c:	2600      	movs	r6, #0
 8000b9e:	20ff      	movs	r0, #255	@ 0xff
 8000ba0:	03d2      	lsls	r2, r2, #15
 8000ba2:	e78c      	b.n	8000abe <__aeabi_fmul+0x7a>
 8000ba4:	4641      	mov	r1, r8
 8000ba6:	2202      	movs	r2, #2
 8000ba8:	3501      	adds	r5, #1
 8000baa:	4311      	orrs	r1, r2
 8000bac:	4688      	mov	r8, r1
 8000bae:	35ff      	adds	r5, #255	@ 0xff
 8000bb0:	290a      	cmp	r1, #10
 8000bb2:	dca5      	bgt.n	8000b00 <__aeabi_fmul+0xbc>
 8000bb4:	2102      	movs	r1, #2
 8000bb6:	407e      	eors	r6, r7
 8000bb8:	e774      	b.n	8000aa4 <__aeabi_fmul+0x60>
 8000bba:	230c      	movs	r3, #12
 8000bbc:	4698      	mov	r8, r3
 8000bbe:	3b09      	subs	r3, #9
 8000bc0:	25ff      	movs	r5, #255	@ 0xff
 8000bc2:	469a      	mov	sl, r3
 8000bc4:	e759      	b.n	8000a7a <__aeabi_fmul+0x36>
 8000bc6:	0018      	movs	r0, r3
 8000bc8:	f001 f98c 	bl	8001ee4 <__clzsi2>
 8000bcc:	464a      	mov	r2, r9
 8000bce:	1f43      	subs	r3, r0, #5
 8000bd0:	2576      	movs	r5, #118	@ 0x76
 8000bd2:	409a      	lsls	r2, r3
 8000bd4:	2300      	movs	r3, #0
 8000bd6:	426d      	negs	r5, r5
 8000bd8:	4691      	mov	r9, r2
 8000bda:	4698      	mov	r8, r3
 8000bdc:	469a      	mov	sl, r3
 8000bde:	1a2d      	subs	r5, r5, r0
 8000be0:	e74b      	b.n	8000a7a <__aeabi_fmul+0x36>
 8000be2:	0020      	movs	r0, r4
 8000be4:	f001 f97e 	bl	8001ee4 <__clzsi2>
 8000be8:	4642      	mov	r2, r8
 8000bea:	1f43      	subs	r3, r0, #5
 8000bec:	409c      	lsls	r4, r3
 8000bee:	1a2b      	subs	r3, r5, r0
 8000bf0:	3b76      	subs	r3, #118	@ 0x76
 8000bf2:	2100      	movs	r1, #0
 8000bf4:	1c5d      	adds	r5, r3, #1
 8000bf6:	2a0a      	cmp	r2, #10
 8000bf8:	dc00      	bgt.n	8000bfc <__aeabi_fmul+0x1b8>
 8000bfa:	e752      	b.n	8000aa2 <__aeabi_fmul+0x5e>
 8000bfc:	e780      	b.n	8000b00 <__aeabi_fmul+0xbc>
 8000bfe:	2201      	movs	r2, #1
 8000c00:	1ad3      	subs	r3, r2, r3
 8000c02:	2b1b      	cmp	r3, #27
 8000c04:	dd00      	ble.n	8000c08 <__aeabi_fmul+0x1c4>
 8000c06:	e758      	b.n	8000aba <__aeabi_fmul+0x76>
 8000c08:	359e      	adds	r5, #158	@ 0x9e
 8000c0a:	0022      	movs	r2, r4
 8000c0c:	40ac      	lsls	r4, r5
 8000c0e:	40da      	lsrs	r2, r3
 8000c10:	1e63      	subs	r3, r4, #1
 8000c12:	419c      	sbcs	r4, r3
 8000c14:	4322      	orrs	r2, r4
 8000c16:	0753      	lsls	r3, r2, #29
 8000c18:	d004      	beq.n	8000c24 <__aeabi_fmul+0x1e0>
 8000c1a:	230f      	movs	r3, #15
 8000c1c:	4013      	ands	r3, r2
 8000c1e:	2b04      	cmp	r3, #4
 8000c20:	d000      	beq.n	8000c24 <__aeabi_fmul+0x1e0>
 8000c22:	3204      	adds	r2, #4
 8000c24:	0153      	lsls	r3, r2, #5
 8000c26:	d537      	bpl.n	8000c98 <__aeabi_fmul+0x254>
 8000c28:	2001      	movs	r0, #1
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	e747      	b.n	8000abe <__aeabi_fmul+0x7a>
 8000c2e:	0c21      	lsrs	r1, r4, #16
 8000c30:	464a      	mov	r2, r9
 8000c32:	0424      	lsls	r4, r4, #16
 8000c34:	0c24      	lsrs	r4, r4, #16
 8000c36:	0027      	movs	r7, r4
 8000c38:	0c10      	lsrs	r0, r2, #16
 8000c3a:	0412      	lsls	r2, r2, #16
 8000c3c:	0c12      	lsrs	r2, r2, #16
 8000c3e:	4344      	muls	r4, r0
 8000c40:	4357      	muls	r7, r2
 8000c42:	4348      	muls	r0, r1
 8000c44:	4351      	muls	r1, r2
 8000c46:	0c3a      	lsrs	r2, r7, #16
 8000c48:	1909      	adds	r1, r1, r4
 8000c4a:	1852      	adds	r2, r2, r1
 8000c4c:	4294      	cmp	r4, r2
 8000c4e:	d903      	bls.n	8000c58 <__aeabi_fmul+0x214>
 8000c50:	2180      	movs	r1, #128	@ 0x80
 8000c52:	0249      	lsls	r1, r1, #9
 8000c54:	468c      	mov	ip, r1
 8000c56:	4460      	add	r0, ip
 8000c58:	043f      	lsls	r7, r7, #16
 8000c5a:	0411      	lsls	r1, r2, #16
 8000c5c:	0c3f      	lsrs	r7, r7, #16
 8000c5e:	19c9      	adds	r1, r1, r7
 8000c60:	018c      	lsls	r4, r1, #6
 8000c62:	1e67      	subs	r7, r4, #1
 8000c64:	41bc      	sbcs	r4, r7
 8000c66:	0c12      	lsrs	r2, r2, #16
 8000c68:	0e89      	lsrs	r1, r1, #26
 8000c6a:	1812      	adds	r2, r2, r0
 8000c6c:	430c      	orrs	r4, r1
 8000c6e:	0192      	lsls	r2, r2, #6
 8000c70:	4314      	orrs	r4, r2
 8000c72:	0112      	lsls	r2, r2, #4
 8000c74:	d50e      	bpl.n	8000c94 <__aeabi_fmul+0x250>
 8000c76:	2301      	movs	r3, #1
 8000c78:	0862      	lsrs	r2, r4, #1
 8000c7a:	401c      	ands	r4, r3
 8000c7c:	4314      	orrs	r4, r2
 8000c7e:	e749      	b.n	8000b14 <__aeabi_fmul+0xd0>
 8000c80:	003e      	movs	r6, r7
 8000c82:	46a1      	mov	r9, r4
 8000c84:	2280      	movs	r2, #128	@ 0x80
 8000c86:	464b      	mov	r3, r9
 8000c88:	03d2      	lsls	r2, r2, #15
 8000c8a:	431a      	orrs	r2, r3
 8000c8c:	0252      	lsls	r2, r2, #9
 8000c8e:	20ff      	movs	r0, #255	@ 0xff
 8000c90:	0a52      	lsrs	r2, r2, #9
 8000c92:	e714      	b.n	8000abe <__aeabi_fmul+0x7a>
 8000c94:	001d      	movs	r5, r3
 8000c96:	e73d      	b.n	8000b14 <__aeabi_fmul+0xd0>
 8000c98:	0192      	lsls	r2, r2, #6
 8000c9a:	2000      	movs	r0, #0
 8000c9c:	0a52      	lsrs	r2, r2, #9
 8000c9e:	e70e      	b.n	8000abe <__aeabi_fmul+0x7a>
 8000ca0:	290f      	cmp	r1, #15
 8000ca2:	d1ed      	bne.n	8000c80 <__aeabi_fmul+0x23c>
 8000ca4:	2280      	movs	r2, #128	@ 0x80
 8000ca6:	464b      	mov	r3, r9
 8000ca8:	03d2      	lsls	r2, r2, #15
 8000caa:	4213      	tst	r3, r2
 8000cac:	d0ea      	beq.n	8000c84 <__aeabi_fmul+0x240>
 8000cae:	4214      	tst	r4, r2
 8000cb0:	d1e8      	bne.n	8000c84 <__aeabi_fmul+0x240>
 8000cb2:	003e      	movs	r6, r7
 8000cb4:	20ff      	movs	r0, #255	@ 0xff
 8000cb6:	4322      	orrs	r2, r4
 8000cb8:	e701      	b.n	8000abe <__aeabi_fmul+0x7a>
 8000cba:	46c0      	nop			@ (mov r8, r8)
 8000cbc:	f7ffffff 	.word	0xf7ffffff

08000cc0 <__aeabi_fsub>:
 8000cc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cc2:	4647      	mov	r7, r8
 8000cc4:	46ce      	mov	lr, r9
 8000cc6:	024e      	lsls	r6, r1, #9
 8000cc8:	0243      	lsls	r3, r0, #9
 8000cca:	0045      	lsls	r5, r0, #1
 8000ccc:	0a72      	lsrs	r2, r6, #9
 8000cce:	0fc4      	lsrs	r4, r0, #31
 8000cd0:	0048      	lsls	r0, r1, #1
 8000cd2:	b580      	push	{r7, lr}
 8000cd4:	4694      	mov	ip, r2
 8000cd6:	0a5f      	lsrs	r7, r3, #9
 8000cd8:	0e2d      	lsrs	r5, r5, #24
 8000cda:	099b      	lsrs	r3, r3, #6
 8000cdc:	0e00      	lsrs	r0, r0, #24
 8000cde:	0fc9      	lsrs	r1, r1, #31
 8000ce0:	09b6      	lsrs	r6, r6, #6
 8000ce2:	28ff      	cmp	r0, #255	@ 0xff
 8000ce4:	d024      	beq.n	8000d30 <__aeabi_fsub+0x70>
 8000ce6:	2201      	movs	r2, #1
 8000ce8:	4051      	eors	r1, r2
 8000cea:	1a2a      	subs	r2, r5, r0
 8000cec:	428c      	cmp	r4, r1
 8000cee:	d00f      	beq.n	8000d10 <__aeabi_fsub+0x50>
 8000cf0:	2a00      	cmp	r2, #0
 8000cf2:	dc00      	bgt.n	8000cf6 <__aeabi_fsub+0x36>
 8000cf4:	e16a      	b.n	8000fcc <__aeabi_fsub+0x30c>
 8000cf6:	2800      	cmp	r0, #0
 8000cf8:	d135      	bne.n	8000d66 <__aeabi_fsub+0xa6>
 8000cfa:	2e00      	cmp	r6, #0
 8000cfc:	d100      	bne.n	8000d00 <__aeabi_fsub+0x40>
 8000cfe:	e0a2      	b.n	8000e46 <__aeabi_fsub+0x186>
 8000d00:	1e51      	subs	r1, r2, #1
 8000d02:	2a01      	cmp	r2, #1
 8000d04:	d100      	bne.n	8000d08 <__aeabi_fsub+0x48>
 8000d06:	e124      	b.n	8000f52 <__aeabi_fsub+0x292>
 8000d08:	2aff      	cmp	r2, #255	@ 0xff
 8000d0a:	d021      	beq.n	8000d50 <__aeabi_fsub+0x90>
 8000d0c:	000a      	movs	r2, r1
 8000d0e:	e02f      	b.n	8000d70 <__aeabi_fsub+0xb0>
 8000d10:	2a00      	cmp	r2, #0
 8000d12:	dc00      	bgt.n	8000d16 <__aeabi_fsub+0x56>
 8000d14:	e167      	b.n	8000fe6 <__aeabi_fsub+0x326>
 8000d16:	2800      	cmp	r0, #0
 8000d18:	d05e      	beq.n	8000dd8 <__aeabi_fsub+0x118>
 8000d1a:	2dff      	cmp	r5, #255	@ 0xff
 8000d1c:	d018      	beq.n	8000d50 <__aeabi_fsub+0x90>
 8000d1e:	2180      	movs	r1, #128	@ 0x80
 8000d20:	04c9      	lsls	r1, r1, #19
 8000d22:	430e      	orrs	r6, r1
 8000d24:	2a1b      	cmp	r2, #27
 8000d26:	dc00      	bgt.n	8000d2a <__aeabi_fsub+0x6a>
 8000d28:	e076      	b.n	8000e18 <__aeabi_fsub+0x158>
 8000d2a:	002a      	movs	r2, r5
 8000d2c:	3301      	adds	r3, #1
 8000d2e:	e032      	b.n	8000d96 <__aeabi_fsub+0xd6>
 8000d30:	002a      	movs	r2, r5
 8000d32:	3aff      	subs	r2, #255	@ 0xff
 8000d34:	4691      	mov	r9, r2
 8000d36:	2e00      	cmp	r6, #0
 8000d38:	d042      	beq.n	8000dc0 <__aeabi_fsub+0x100>
 8000d3a:	428c      	cmp	r4, r1
 8000d3c:	d055      	beq.n	8000dea <__aeabi_fsub+0x12a>
 8000d3e:	464a      	mov	r2, r9
 8000d40:	2a00      	cmp	r2, #0
 8000d42:	d100      	bne.n	8000d46 <__aeabi_fsub+0x86>
 8000d44:	e09c      	b.n	8000e80 <__aeabi_fsub+0x1c0>
 8000d46:	2d00      	cmp	r5, #0
 8000d48:	d100      	bne.n	8000d4c <__aeabi_fsub+0x8c>
 8000d4a:	e077      	b.n	8000e3c <__aeabi_fsub+0x17c>
 8000d4c:	000c      	movs	r4, r1
 8000d4e:	0033      	movs	r3, r6
 8000d50:	08db      	lsrs	r3, r3, #3
 8000d52:	2b00      	cmp	r3, #0
 8000d54:	d100      	bne.n	8000d58 <__aeabi_fsub+0x98>
 8000d56:	e06e      	b.n	8000e36 <__aeabi_fsub+0x176>
 8000d58:	2280      	movs	r2, #128	@ 0x80
 8000d5a:	03d2      	lsls	r2, r2, #15
 8000d5c:	4313      	orrs	r3, r2
 8000d5e:	025b      	lsls	r3, r3, #9
 8000d60:	20ff      	movs	r0, #255	@ 0xff
 8000d62:	0a5b      	lsrs	r3, r3, #9
 8000d64:	e024      	b.n	8000db0 <__aeabi_fsub+0xf0>
 8000d66:	2dff      	cmp	r5, #255	@ 0xff
 8000d68:	d0f2      	beq.n	8000d50 <__aeabi_fsub+0x90>
 8000d6a:	2180      	movs	r1, #128	@ 0x80
 8000d6c:	04c9      	lsls	r1, r1, #19
 8000d6e:	430e      	orrs	r6, r1
 8000d70:	2101      	movs	r1, #1
 8000d72:	2a1b      	cmp	r2, #27
 8000d74:	dc08      	bgt.n	8000d88 <__aeabi_fsub+0xc8>
 8000d76:	0031      	movs	r1, r6
 8000d78:	2020      	movs	r0, #32
 8000d7a:	40d1      	lsrs	r1, r2
 8000d7c:	1a82      	subs	r2, r0, r2
 8000d7e:	4096      	lsls	r6, r2
 8000d80:	0032      	movs	r2, r6
 8000d82:	1e50      	subs	r0, r2, #1
 8000d84:	4182      	sbcs	r2, r0
 8000d86:	4311      	orrs	r1, r2
 8000d88:	1a5b      	subs	r3, r3, r1
 8000d8a:	015a      	lsls	r2, r3, #5
 8000d8c:	d460      	bmi.n	8000e50 <__aeabi_fsub+0x190>
 8000d8e:	2107      	movs	r1, #7
 8000d90:	002a      	movs	r2, r5
 8000d92:	4019      	ands	r1, r3
 8000d94:	d057      	beq.n	8000e46 <__aeabi_fsub+0x186>
 8000d96:	210f      	movs	r1, #15
 8000d98:	4019      	ands	r1, r3
 8000d9a:	2904      	cmp	r1, #4
 8000d9c:	d000      	beq.n	8000da0 <__aeabi_fsub+0xe0>
 8000d9e:	3304      	adds	r3, #4
 8000da0:	0159      	lsls	r1, r3, #5
 8000da2:	d550      	bpl.n	8000e46 <__aeabi_fsub+0x186>
 8000da4:	1c50      	adds	r0, r2, #1
 8000da6:	2afe      	cmp	r2, #254	@ 0xfe
 8000da8:	d045      	beq.n	8000e36 <__aeabi_fsub+0x176>
 8000daa:	019b      	lsls	r3, r3, #6
 8000dac:	b2c0      	uxtb	r0, r0
 8000dae:	0a5b      	lsrs	r3, r3, #9
 8000db0:	05c0      	lsls	r0, r0, #23
 8000db2:	4318      	orrs	r0, r3
 8000db4:	07e4      	lsls	r4, r4, #31
 8000db6:	4320      	orrs	r0, r4
 8000db8:	bcc0      	pop	{r6, r7}
 8000dba:	46b9      	mov	r9, r7
 8000dbc:	46b0      	mov	r8, r6
 8000dbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000dc0:	2201      	movs	r2, #1
 8000dc2:	4051      	eors	r1, r2
 8000dc4:	428c      	cmp	r4, r1
 8000dc6:	d1ba      	bne.n	8000d3e <__aeabi_fsub+0x7e>
 8000dc8:	464a      	mov	r2, r9
 8000dca:	2a00      	cmp	r2, #0
 8000dcc:	d010      	beq.n	8000df0 <__aeabi_fsub+0x130>
 8000dce:	2d00      	cmp	r5, #0
 8000dd0:	d100      	bne.n	8000dd4 <__aeabi_fsub+0x114>
 8000dd2:	e098      	b.n	8000f06 <__aeabi_fsub+0x246>
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	e7bb      	b.n	8000d50 <__aeabi_fsub+0x90>
 8000dd8:	2e00      	cmp	r6, #0
 8000dda:	d034      	beq.n	8000e46 <__aeabi_fsub+0x186>
 8000ddc:	1e51      	subs	r1, r2, #1
 8000dde:	2a01      	cmp	r2, #1
 8000de0:	d06e      	beq.n	8000ec0 <__aeabi_fsub+0x200>
 8000de2:	2aff      	cmp	r2, #255	@ 0xff
 8000de4:	d0b4      	beq.n	8000d50 <__aeabi_fsub+0x90>
 8000de6:	000a      	movs	r2, r1
 8000de8:	e79c      	b.n	8000d24 <__aeabi_fsub+0x64>
 8000dea:	2a00      	cmp	r2, #0
 8000dec:	d000      	beq.n	8000df0 <__aeabi_fsub+0x130>
 8000dee:	e088      	b.n	8000f02 <__aeabi_fsub+0x242>
 8000df0:	20fe      	movs	r0, #254	@ 0xfe
 8000df2:	1c6a      	adds	r2, r5, #1
 8000df4:	4210      	tst	r0, r2
 8000df6:	d000      	beq.n	8000dfa <__aeabi_fsub+0x13a>
 8000df8:	e092      	b.n	8000f20 <__aeabi_fsub+0x260>
 8000dfa:	2d00      	cmp	r5, #0
 8000dfc:	d000      	beq.n	8000e00 <__aeabi_fsub+0x140>
 8000dfe:	e0a4      	b.n	8000f4a <__aeabi_fsub+0x28a>
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d100      	bne.n	8000e06 <__aeabi_fsub+0x146>
 8000e04:	e0cb      	b.n	8000f9e <__aeabi_fsub+0x2de>
 8000e06:	2e00      	cmp	r6, #0
 8000e08:	d000      	beq.n	8000e0c <__aeabi_fsub+0x14c>
 8000e0a:	e0ca      	b.n	8000fa2 <__aeabi_fsub+0x2e2>
 8000e0c:	2200      	movs	r2, #0
 8000e0e:	08db      	lsrs	r3, r3, #3
 8000e10:	025b      	lsls	r3, r3, #9
 8000e12:	0a5b      	lsrs	r3, r3, #9
 8000e14:	b2d0      	uxtb	r0, r2
 8000e16:	e7cb      	b.n	8000db0 <__aeabi_fsub+0xf0>
 8000e18:	0031      	movs	r1, r6
 8000e1a:	2020      	movs	r0, #32
 8000e1c:	40d1      	lsrs	r1, r2
 8000e1e:	1a82      	subs	r2, r0, r2
 8000e20:	4096      	lsls	r6, r2
 8000e22:	0032      	movs	r2, r6
 8000e24:	1e50      	subs	r0, r2, #1
 8000e26:	4182      	sbcs	r2, r0
 8000e28:	430a      	orrs	r2, r1
 8000e2a:	189b      	adds	r3, r3, r2
 8000e2c:	015a      	lsls	r2, r3, #5
 8000e2e:	d5ae      	bpl.n	8000d8e <__aeabi_fsub+0xce>
 8000e30:	1c6a      	adds	r2, r5, #1
 8000e32:	2dfe      	cmp	r5, #254	@ 0xfe
 8000e34:	d14a      	bne.n	8000ecc <__aeabi_fsub+0x20c>
 8000e36:	20ff      	movs	r0, #255	@ 0xff
 8000e38:	2300      	movs	r3, #0
 8000e3a:	e7b9      	b.n	8000db0 <__aeabi_fsub+0xf0>
 8000e3c:	22ff      	movs	r2, #255	@ 0xff
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	d14b      	bne.n	8000eda <__aeabi_fsub+0x21a>
 8000e42:	000c      	movs	r4, r1
 8000e44:	0033      	movs	r3, r6
 8000e46:	08db      	lsrs	r3, r3, #3
 8000e48:	2aff      	cmp	r2, #255	@ 0xff
 8000e4a:	d100      	bne.n	8000e4e <__aeabi_fsub+0x18e>
 8000e4c:	e781      	b.n	8000d52 <__aeabi_fsub+0x92>
 8000e4e:	e7df      	b.n	8000e10 <__aeabi_fsub+0x150>
 8000e50:	019f      	lsls	r7, r3, #6
 8000e52:	09bf      	lsrs	r7, r7, #6
 8000e54:	0038      	movs	r0, r7
 8000e56:	f001 f845 	bl	8001ee4 <__clzsi2>
 8000e5a:	3805      	subs	r0, #5
 8000e5c:	4087      	lsls	r7, r0
 8000e5e:	4285      	cmp	r5, r0
 8000e60:	dc21      	bgt.n	8000ea6 <__aeabi_fsub+0x1e6>
 8000e62:	003b      	movs	r3, r7
 8000e64:	2120      	movs	r1, #32
 8000e66:	1b42      	subs	r2, r0, r5
 8000e68:	3201      	adds	r2, #1
 8000e6a:	40d3      	lsrs	r3, r2
 8000e6c:	1a8a      	subs	r2, r1, r2
 8000e6e:	4097      	lsls	r7, r2
 8000e70:	1e7a      	subs	r2, r7, #1
 8000e72:	4197      	sbcs	r7, r2
 8000e74:	2200      	movs	r2, #0
 8000e76:	433b      	orrs	r3, r7
 8000e78:	0759      	lsls	r1, r3, #29
 8000e7a:	d000      	beq.n	8000e7e <__aeabi_fsub+0x1be>
 8000e7c:	e78b      	b.n	8000d96 <__aeabi_fsub+0xd6>
 8000e7e:	e78f      	b.n	8000da0 <__aeabi_fsub+0xe0>
 8000e80:	20fe      	movs	r0, #254	@ 0xfe
 8000e82:	1c6a      	adds	r2, r5, #1
 8000e84:	4210      	tst	r0, r2
 8000e86:	d112      	bne.n	8000eae <__aeabi_fsub+0x1ee>
 8000e88:	2d00      	cmp	r5, #0
 8000e8a:	d152      	bne.n	8000f32 <__aeabi_fsub+0x272>
 8000e8c:	2b00      	cmp	r3, #0
 8000e8e:	d07c      	beq.n	8000f8a <__aeabi_fsub+0x2ca>
 8000e90:	2e00      	cmp	r6, #0
 8000e92:	d0bb      	beq.n	8000e0c <__aeabi_fsub+0x14c>
 8000e94:	1b9a      	subs	r2, r3, r6
 8000e96:	0150      	lsls	r0, r2, #5
 8000e98:	d400      	bmi.n	8000e9c <__aeabi_fsub+0x1dc>
 8000e9a:	e08b      	b.n	8000fb4 <__aeabi_fsub+0x2f4>
 8000e9c:	2401      	movs	r4, #1
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	1af3      	subs	r3, r6, r3
 8000ea2:	400c      	ands	r4, r1
 8000ea4:	e7e8      	b.n	8000e78 <__aeabi_fsub+0x1b8>
 8000ea6:	4b56      	ldr	r3, [pc, #344]	@ (8001000 <__aeabi_fsub+0x340>)
 8000ea8:	1a2a      	subs	r2, r5, r0
 8000eaa:	403b      	ands	r3, r7
 8000eac:	e7e4      	b.n	8000e78 <__aeabi_fsub+0x1b8>
 8000eae:	1b9f      	subs	r7, r3, r6
 8000eb0:	017a      	lsls	r2, r7, #5
 8000eb2:	d446      	bmi.n	8000f42 <__aeabi_fsub+0x282>
 8000eb4:	2f00      	cmp	r7, #0
 8000eb6:	d1cd      	bne.n	8000e54 <__aeabi_fsub+0x194>
 8000eb8:	2400      	movs	r4, #0
 8000eba:	2000      	movs	r0, #0
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	e777      	b.n	8000db0 <__aeabi_fsub+0xf0>
 8000ec0:	199b      	adds	r3, r3, r6
 8000ec2:	2501      	movs	r5, #1
 8000ec4:	3201      	adds	r2, #1
 8000ec6:	0159      	lsls	r1, r3, #5
 8000ec8:	d400      	bmi.n	8000ecc <__aeabi_fsub+0x20c>
 8000eca:	e760      	b.n	8000d8e <__aeabi_fsub+0xce>
 8000ecc:	2101      	movs	r1, #1
 8000ece:	484d      	ldr	r0, [pc, #308]	@ (8001004 <__aeabi_fsub+0x344>)
 8000ed0:	4019      	ands	r1, r3
 8000ed2:	085b      	lsrs	r3, r3, #1
 8000ed4:	4003      	ands	r3, r0
 8000ed6:	430b      	orrs	r3, r1
 8000ed8:	e7ce      	b.n	8000e78 <__aeabi_fsub+0x1b8>
 8000eda:	1e57      	subs	r7, r2, #1
 8000edc:	2a01      	cmp	r2, #1
 8000ede:	d05a      	beq.n	8000f96 <__aeabi_fsub+0x2d6>
 8000ee0:	000c      	movs	r4, r1
 8000ee2:	2aff      	cmp	r2, #255	@ 0xff
 8000ee4:	d033      	beq.n	8000f4e <__aeabi_fsub+0x28e>
 8000ee6:	2201      	movs	r2, #1
 8000ee8:	2f1b      	cmp	r7, #27
 8000eea:	dc07      	bgt.n	8000efc <__aeabi_fsub+0x23c>
 8000eec:	2120      	movs	r1, #32
 8000eee:	1bc9      	subs	r1, r1, r7
 8000ef0:	001a      	movs	r2, r3
 8000ef2:	408b      	lsls	r3, r1
 8000ef4:	40fa      	lsrs	r2, r7
 8000ef6:	1e59      	subs	r1, r3, #1
 8000ef8:	418b      	sbcs	r3, r1
 8000efa:	431a      	orrs	r2, r3
 8000efc:	0005      	movs	r5, r0
 8000efe:	1ab3      	subs	r3, r6, r2
 8000f00:	e743      	b.n	8000d8a <__aeabi_fsub+0xca>
 8000f02:	2d00      	cmp	r5, #0
 8000f04:	d123      	bne.n	8000f4e <__aeabi_fsub+0x28e>
 8000f06:	22ff      	movs	r2, #255	@ 0xff
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d09b      	beq.n	8000e44 <__aeabi_fsub+0x184>
 8000f0c:	1e51      	subs	r1, r2, #1
 8000f0e:	2a01      	cmp	r2, #1
 8000f10:	d0d6      	beq.n	8000ec0 <__aeabi_fsub+0x200>
 8000f12:	2aff      	cmp	r2, #255	@ 0xff
 8000f14:	d01b      	beq.n	8000f4e <__aeabi_fsub+0x28e>
 8000f16:	291b      	cmp	r1, #27
 8000f18:	dd2c      	ble.n	8000f74 <__aeabi_fsub+0x2b4>
 8000f1a:	0002      	movs	r2, r0
 8000f1c:	1c73      	adds	r3, r6, #1
 8000f1e:	e73a      	b.n	8000d96 <__aeabi_fsub+0xd6>
 8000f20:	2aff      	cmp	r2, #255	@ 0xff
 8000f22:	d088      	beq.n	8000e36 <__aeabi_fsub+0x176>
 8000f24:	199b      	adds	r3, r3, r6
 8000f26:	085b      	lsrs	r3, r3, #1
 8000f28:	0759      	lsls	r1, r3, #29
 8000f2a:	d000      	beq.n	8000f2e <__aeabi_fsub+0x26e>
 8000f2c:	e733      	b.n	8000d96 <__aeabi_fsub+0xd6>
 8000f2e:	08db      	lsrs	r3, r3, #3
 8000f30:	e76e      	b.n	8000e10 <__aeabi_fsub+0x150>
 8000f32:	2b00      	cmp	r3, #0
 8000f34:	d110      	bne.n	8000f58 <__aeabi_fsub+0x298>
 8000f36:	2e00      	cmp	r6, #0
 8000f38:	d043      	beq.n	8000fc2 <__aeabi_fsub+0x302>
 8000f3a:	2401      	movs	r4, #1
 8000f3c:	0033      	movs	r3, r6
 8000f3e:	400c      	ands	r4, r1
 8000f40:	e706      	b.n	8000d50 <__aeabi_fsub+0x90>
 8000f42:	2401      	movs	r4, #1
 8000f44:	1af7      	subs	r7, r6, r3
 8000f46:	400c      	ands	r4, r1
 8000f48:	e784      	b.n	8000e54 <__aeabi_fsub+0x194>
 8000f4a:	2b00      	cmp	r3, #0
 8000f4c:	d104      	bne.n	8000f58 <__aeabi_fsub+0x298>
 8000f4e:	0033      	movs	r3, r6
 8000f50:	e6fe      	b.n	8000d50 <__aeabi_fsub+0x90>
 8000f52:	2501      	movs	r5, #1
 8000f54:	1b9b      	subs	r3, r3, r6
 8000f56:	e718      	b.n	8000d8a <__aeabi_fsub+0xca>
 8000f58:	2e00      	cmp	r6, #0
 8000f5a:	d100      	bne.n	8000f5e <__aeabi_fsub+0x29e>
 8000f5c:	e6f8      	b.n	8000d50 <__aeabi_fsub+0x90>
 8000f5e:	2280      	movs	r2, #128	@ 0x80
 8000f60:	03d2      	lsls	r2, r2, #15
 8000f62:	4297      	cmp	r7, r2
 8000f64:	d304      	bcc.n	8000f70 <__aeabi_fsub+0x2b0>
 8000f66:	4594      	cmp	ip, r2
 8000f68:	d202      	bcs.n	8000f70 <__aeabi_fsub+0x2b0>
 8000f6a:	2401      	movs	r4, #1
 8000f6c:	0033      	movs	r3, r6
 8000f6e:	400c      	ands	r4, r1
 8000f70:	08db      	lsrs	r3, r3, #3
 8000f72:	e6f1      	b.n	8000d58 <__aeabi_fsub+0x98>
 8000f74:	001a      	movs	r2, r3
 8000f76:	2520      	movs	r5, #32
 8000f78:	40ca      	lsrs	r2, r1
 8000f7a:	1a69      	subs	r1, r5, r1
 8000f7c:	408b      	lsls	r3, r1
 8000f7e:	1e59      	subs	r1, r3, #1
 8000f80:	418b      	sbcs	r3, r1
 8000f82:	4313      	orrs	r3, r2
 8000f84:	0005      	movs	r5, r0
 8000f86:	199b      	adds	r3, r3, r6
 8000f88:	e750      	b.n	8000e2c <__aeabi_fsub+0x16c>
 8000f8a:	2e00      	cmp	r6, #0
 8000f8c:	d094      	beq.n	8000eb8 <__aeabi_fsub+0x1f8>
 8000f8e:	2401      	movs	r4, #1
 8000f90:	0033      	movs	r3, r6
 8000f92:	400c      	ands	r4, r1
 8000f94:	e73a      	b.n	8000e0c <__aeabi_fsub+0x14c>
 8000f96:	000c      	movs	r4, r1
 8000f98:	2501      	movs	r5, #1
 8000f9a:	1af3      	subs	r3, r6, r3
 8000f9c:	e6f5      	b.n	8000d8a <__aeabi_fsub+0xca>
 8000f9e:	0033      	movs	r3, r6
 8000fa0:	e734      	b.n	8000e0c <__aeabi_fsub+0x14c>
 8000fa2:	199b      	adds	r3, r3, r6
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	0159      	lsls	r1, r3, #5
 8000fa8:	d5c1      	bpl.n	8000f2e <__aeabi_fsub+0x26e>
 8000faa:	4a15      	ldr	r2, [pc, #84]	@ (8001000 <__aeabi_fsub+0x340>)
 8000fac:	4013      	ands	r3, r2
 8000fae:	08db      	lsrs	r3, r3, #3
 8000fb0:	2201      	movs	r2, #1
 8000fb2:	e72d      	b.n	8000e10 <__aeabi_fsub+0x150>
 8000fb4:	2a00      	cmp	r2, #0
 8000fb6:	d100      	bne.n	8000fba <__aeabi_fsub+0x2fa>
 8000fb8:	e77e      	b.n	8000eb8 <__aeabi_fsub+0x1f8>
 8000fba:	0013      	movs	r3, r2
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	08db      	lsrs	r3, r3, #3
 8000fc0:	e726      	b.n	8000e10 <__aeabi_fsub+0x150>
 8000fc2:	2380      	movs	r3, #128	@ 0x80
 8000fc4:	2400      	movs	r4, #0
 8000fc6:	20ff      	movs	r0, #255	@ 0xff
 8000fc8:	03db      	lsls	r3, r3, #15
 8000fca:	e6f1      	b.n	8000db0 <__aeabi_fsub+0xf0>
 8000fcc:	2a00      	cmp	r2, #0
 8000fce:	d100      	bne.n	8000fd2 <__aeabi_fsub+0x312>
 8000fd0:	e756      	b.n	8000e80 <__aeabi_fsub+0x1c0>
 8000fd2:	1b47      	subs	r7, r0, r5
 8000fd4:	003a      	movs	r2, r7
 8000fd6:	2d00      	cmp	r5, #0
 8000fd8:	d100      	bne.n	8000fdc <__aeabi_fsub+0x31c>
 8000fda:	e730      	b.n	8000e3e <__aeabi_fsub+0x17e>
 8000fdc:	2280      	movs	r2, #128	@ 0x80
 8000fde:	04d2      	lsls	r2, r2, #19
 8000fe0:	000c      	movs	r4, r1
 8000fe2:	4313      	orrs	r3, r2
 8000fe4:	e77f      	b.n	8000ee6 <__aeabi_fsub+0x226>
 8000fe6:	2a00      	cmp	r2, #0
 8000fe8:	d100      	bne.n	8000fec <__aeabi_fsub+0x32c>
 8000fea:	e701      	b.n	8000df0 <__aeabi_fsub+0x130>
 8000fec:	1b41      	subs	r1, r0, r5
 8000fee:	2d00      	cmp	r5, #0
 8000ff0:	d101      	bne.n	8000ff6 <__aeabi_fsub+0x336>
 8000ff2:	000a      	movs	r2, r1
 8000ff4:	e788      	b.n	8000f08 <__aeabi_fsub+0x248>
 8000ff6:	2280      	movs	r2, #128	@ 0x80
 8000ff8:	04d2      	lsls	r2, r2, #19
 8000ffa:	4313      	orrs	r3, r2
 8000ffc:	e78b      	b.n	8000f16 <__aeabi_fsub+0x256>
 8000ffe:	46c0      	nop			@ (mov r8, r8)
 8001000:	fbffffff 	.word	0xfbffffff
 8001004:	7dffffff 	.word	0x7dffffff

08001008 <__aeabi_f2iz>:
 8001008:	0241      	lsls	r1, r0, #9
 800100a:	0042      	lsls	r2, r0, #1
 800100c:	0fc3      	lsrs	r3, r0, #31
 800100e:	0a49      	lsrs	r1, r1, #9
 8001010:	2000      	movs	r0, #0
 8001012:	0e12      	lsrs	r2, r2, #24
 8001014:	2a7e      	cmp	r2, #126	@ 0x7e
 8001016:	dd03      	ble.n	8001020 <__aeabi_f2iz+0x18>
 8001018:	2a9d      	cmp	r2, #157	@ 0x9d
 800101a:	dd02      	ble.n	8001022 <__aeabi_f2iz+0x1a>
 800101c:	4a09      	ldr	r2, [pc, #36]	@ (8001044 <__aeabi_f2iz+0x3c>)
 800101e:	1898      	adds	r0, r3, r2
 8001020:	4770      	bx	lr
 8001022:	2080      	movs	r0, #128	@ 0x80
 8001024:	0400      	lsls	r0, r0, #16
 8001026:	4301      	orrs	r1, r0
 8001028:	2a95      	cmp	r2, #149	@ 0x95
 800102a:	dc07      	bgt.n	800103c <__aeabi_f2iz+0x34>
 800102c:	2096      	movs	r0, #150	@ 0x96
 800102e:	1a82      	subs	r2, r0, r2
 8001030:	40d1      	lsrs	r1, r2
 8001032:	4248      	negs	r0, r1
 8001034:	2b00      	cmp	r3, #0
 8001036:	d1f3      	bne.n	8001020 <__aeabi_f2iz+0x18>
 8001038:	0008      	movs	r0, r1
 800103a:	e7f1      	b.n	8001020 <__aeabi_f2iz+0x18>
 800103c:	3a96      	subs	r2, #150	@ 0x96
 800103e:	4091      	lsls	r1, r2
 8001040:	e7f7      	b.n	8001032 <__aeabi_f2iz+0x2a>
 8001042:	46c0      	nop			@ (mov r8, r8)
 8001044:	7fffffff 	.word	0x7fffffff

08001048 <__aeabi_i2f>:
 8001048:	b570      	push	{r4, r5, r6, lr}
 800104a:	2800      	cmp	r0, #0
 800104c:	d013      	beq.n	8001076 <__aeabi_i2f+0x2e>
 800104e:	17c3      	asrs	r3, r0, #31
 8001050:	18c5      	adds	r5, r0, r3
 8001052:	405d      	eors	r5, r3
 8001054:	0fc4      	lsrs	r4, r0, #31
 8001056:	0028      	movs	r0, r5
 8001058:	f000 ff44 	bl	8001ee4 <__clzsi2>
 800105c:	239e      	movs	r3, #158	@ 0x9e
 800105e:	0001      	movs	r1, r0
 8001060:	1a1b      	subs	r3, r3, r0
 8001062:	2b96      	cmp	r3, #150	@ 0x96
 8001064:	dc0f      	bgt.n	8001086 <__aeabi_i2f+0x3e>
 8001066:	2808      	cmp	r0, #8
 8001068:	d034      	beq.n	80010d4 <__aeabi_i2f+0x8c>
 800106a:	3908      	subs	r1, #8
 800106c:	408d      	lsls	r5, r1
 800106e:	026d      	lsls	r5, r5, #9
 8001070:	0a6d      	lsrs	r5, r5, #9
 8001072:	b2d8      	uxtb	r0, r3
 8001074:	e002      	b.n	800107c <__aeabi_i2f+0x34>
 8001076:	2400      	movs	r4, #0
 8001078:	2000      	movs	r0, #0
 800107a:	2500      	movs	r5, #0
 800107c:	05c0      	lsls	r0, r0, #23
 800107e:	4328      	orrs	r0, r5
 8001080:	07e4      	lsls	r4, r4, #31
 8001082:	4320      	orrs	r0, r4
 8001084:	bd70      	pop	{r4, r5, r6, pc}
 8001086:	2b99      	cmp	r3, #153	@ 0x99
 8001088:	dc16      	bgt.n	80010b8 <__aeabi_i2f+0x70>
 800108a:	1f42      	subs	r2, r0, #5
 800108c:	2805      	cmp	r0, #5
 800108e:	d000      	beq.n	8001092 <__aeabi_i2f+0x4a>
 8001090:	4095      	lsls	r5, r2
 8001092:	002a      	movs	r2, r5
 8001094:	4811      	ldr	r0, [pc, #68]	@ (80010dc <__aeabi_i2f+0x94>)
 8001096:	4002      	ands	r2, r0
 8001098:	076e      	lsls	r6, r5, #29
 800109a:	d009      	beq.n	80010b0 <__aeabi_i2f+0x68>
 800109c:	260f      	movs	r6, #15
 800109e:	4035      	ands	r5, r6
 80010a0:	2d04      	cmp	r5, #4
 80010a2:	d005      	beq.n	80010b0 <__aeabi_i2f+0x68>
 80010a4:	3204      	adds	r2, #4
 80010a6:	0155      	lsls	r5, r2, #5
 80010a8:	d502      	bpl.n	80010b0 <__aeabi_i2f+0x68>
 80010aa:	239f      	movs	r3, #159	@ 0x9f
 80010ac:	4002      	ands	r2, r0
 80010ae:	1a5b      	subs	r3, r3, r1
 80010b0:	0192      	lsls	r2, r2, #6
 80010b2:	0a55      	lsrs	r5, r2, #9
 80010b4:	b2d8      	uxtb	r0, r3
 80010b6:	e7e1      	b.n	800107c <__aeabi_i2f+0x34>
 80010b8:	2205      	movs	r2, #5
 80010ba:	1a12      	subs	r2, r2, r0
 80010bc:	0028      	movs	r0, r5
 80010be:	40d0      	lsrs	r0, r2
 80010c0:	0002      	movs	r2, r0
 80010c2:	0008      	movs	r0, r1
 80010c4:	301b      	adds	r0, #27
 80010c6:	4085      	lsls	r5, r0
 80010c8:	0028      	movs	r0, r5
 80010ca:	1e45      	subs	r5, r0, #1
 80010cc:	41a8      	sbcs	r0, r5
 80010ce:	4302      	orrs	r2, r0
 80010d0:	0015      	movs	r5, r2
 80010d2:	e7de      	b.n	8001092 <__aeabi_i2f+0x4a>
 80010d4:	026d      	lsls	r5, r5, #9
 80010d6:	2096      	movs	r0, #150	@ 0x96
 80010d8:	0a6d      	lsrs	r5, r5, #9
 80010da:	e7cf      	b.n	800107c <__aeabi_i2f+0x34>
 80010dc:	fbffffff 	.word	0xfbffffff

080010e0 <__aeabi_dadd>:
 80010e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80010e2:	4657      	mov	r7, sl
 80010e4:	464e      	mov	r6, r9
 80010e6:	4645      	mov	r5, r8
 80010e8:	46de      	mov	lr, fp
 80010ea:	b5e0      	push	{r5, r6, r7, lr}
 80010ec:	b083      	sub	sp, #12
 80010ee:	9000      	str	r0, [sp, #0]
 80010f0:	9101      	str	r1, [sp, #4]
 80010f2:	030c      	lsls	r4, r1, #12
 80010f4:	004f      	lsls	r7, r1, #1
 80010f6:	0fce      	lsrs	r6, r1, #31
 80010f8:	0a61      	lsrs	r1, r4, #9
 80010fa:	9c00      	ldr	r4, [sp, #0]
 80010fc:	031d      	lsls	r5, r3, #12
 80010fe:	0f64      	lsrs	r4, r4, #29
 8001100:	430c      	orrs	r4, r1
 8001102:	9900      	ldr	r1, [sp, #0]
 8001104:	9200      	str	r2, [sp, #0]
 8001106:	9301      	str	r3, [sp, #4]
 8001108:	00c8      	lsls	r0, r1, #3
 800110a:	0059      	lsls	r1, r3, #1
 800110c:	0d4b      	lsrs	r3, r1, #21
 800110e:	4699      	mov	r9, r3
 8001110:	9a00      	ldr	r2, [sp, #0]
 8001112:	9b01      	ldr	r3, [sp, #4]
 8001114:	0a6d      	lsrs	r5, r5, #9
 8001116:	0fd9      	lsrs	r1, r3, #31
 8001118:	0f53      	lsrs	r3, r2, #29
 800111a:	432b      	orrs	r3, r5
 800111c:	469a      	mov	sl, r3
 800111e:	9b00      	ldr	r3, [sp, #0]
 8001120:	0d7f      	lsrs	r7, r7, #21
 8001122:	00da      	lsls	r2, r3, #3
 8001124:	4694      	mov	ip, r2
 8001126:	464a      	mov	r2, r9
 8001128:	46b0      	mov	r8, r6
 800112a:	1aba      	subs	r2, r7, r2
 800112c:	428e      	cmp	r6, r1
 800112e:	d100      	bne.n	8001132 <__aeabi_dadd+0x52>
 8001130:	e0b0      	b.n	8001294 <__aeabi_dadd+0x1b4>
 8001132:	2a00      	cmp	r2, #0
 8001134:	dc00      	bgt.n	8001138 <__aeabi_dadd+0x58>
 8001136:	e078      	b.n	800122a <__aeabi_dadd+0x14a>
 8001138:	4649      	mov	r1, r9
 800113a:	2900      	cmp	r1, #0
 800113c:	d100      	bne.n	8001140 <__aeabi_dadd+0x60>
 800113e:	e0e9      	b.n	8001314 <__aeabi_dadd+0x234>
 8001140:	49c9      	ldr	r1, [pc, #804]	@ (8001468 <__aeabi_dadd+0x388>)
 8001142:	428f      	cmp	r7, r1
 8001144:	d100      	bne.n	8001148 <__aeabi_dadd+0x68>
 8001146:	e195      	b.n	8001474 <__aeabi_dadd+0x394>
 8001148:	2501      	movs	r5, #1
 800114a:	2a38      	cmp	r2, #56	@ 0x38
 800114c:	dc16      	bgt.n	800117c <__aeabi_dadd+0x9c>
 800114e:	2180      	movs	r1, #128	@ 0x80
 8001150:	4653      	mov	r3, sl
 8001152:	0409      	lsls	r1, r1, #16
 8001154:	430b      	orrs	r3, r1
 8001156:	469a      	mov	sl, r3
 8001158:	2a1f      	cmp	r2, #31
 800115a:	dd00      	ble.n	800115e <__aeabi_dadd+0x7e>
 800115c:	e1e7      	b.n	800152e <__aeabi_dadd+0x44e>
 800115e:	2120      	movs	r1, #32
 8001160:	4655      	mov	r5, sl
 8001162:	1a8b      	subs	r3, r1, r2
 8001164:	4661      	mov	r1, ip
 8001166:	409d      	lsls	r5, r3
 8001168:	40d1      	lsrs	r1, r2
 800116a:	430d      	orrs	r5, r1
 800116c:	4661      	mov	r1, ip
 800116e:	4099      	lsls	r1, r3
 8001170:	1e4b      	subs	r3, r1, #1
 8001172:	4199      	sbcs	r1, r3
 8001174:	4653      	mov	r3, sl
 8001176:	40d3      	lsrs	r3, r2
 8001178:	430d      	orrs	r5, r1
 800117a:	1ae4      	subs	r4, r4, r3
 800117c:	1b45      	subs	r5, r0, r5
 800117e:	42a8      	cmp	r0, r5
 8001180:	4180      	sbcs	r0, r0
 8001182:	4240      	negs	r0, r0
 8001184:	1a24      	subs	r4, r4, r0
 8001186:	0223      	lsls	r3, r4, #8
 8001188:	d400      	bmi.n	800118c <__aeabi_dadd+0xac>
 800118a:	e10f      	b.n	80013ac <__aeabi_dadd+0x2cc>
 800118c:	0264      	lsls	r4, r4, #9
 800118e:	0a64      	lsrs	r4, r4, #9
 8001190:	2c00      	cmp	r4, #0
 8001192:	d100      	bne.n	8001196 <__aeabi_dadd+0xb6>
 8001194:	e139      	b.n	800140a <__aeabi_dadd+0x32a>
 8001196:	0020      	movs	r0, r4
 8001198:	f000 fea4 	bl	8001ee4 <__clzsi2>
 800119c:	0003      	movs	r3, r0
 800119e:	3b08      	subs	r3, #8
 80011a0:	2120      	movs	r1, #32
 80011a2:	0028      	movs	r0, r5
 80011a4:	1aca      	subs	r2, r1, r3
 80011a6:	40d0      	lsrs	r0, r2
 80011a8:	409c      	lsls	r4, r3
 80011aa:	0002      	movs	r2, r0
 80011ac:	409d      	lsls	r5, r3
 80011ae:	4322      	orrs	r2, r4
 80011b0:	429f      	cmp	r7, r3
 80011b2:	dd00      	ble.n	80011b6 <__aeabi_dadd+0xd6>
 80011b4:	e173      	b.n	800149e <__aeabi_dadd+0x3be>
 80011b6:	1bd8      	subs	r0, r3, r7
 80011b8:	3001      	adds	r0, #1
 80011ba:	1a09      	subs	r1, r1, r0
 80011bc:	002c      	movs	r4, r5
 80011be:	408d      	lsls	r5, r1
 80011c0:	40c4      	lsrs	r4, r0
 80011c2:	1e6b      	subs	r3, r5, #1
 80011c4:	419d      	sbcs	r5, r3
 80011c6:	0013      	movs	r3, r2
 80011c8:	40c2      	lsrs	r2, r0
 80011ca:	408b      	lsls	r3, r1
 80011cc:	4325      	orrs	r5, r4
 80011ce:	2700      	movs	r7, #0
 80011d0:	0014      	movs	r4, r2
 80011d2:	431d      	orrs	r5, r3
 80011d4:	076b      	lsls	r3, r5, #29
 80011d6:	d009      	beq.n	80011ec <__aeabi_dadd+0x10c>
 80011d8:	230f      	movs	r3, #15
 80011da:	402b      	ands	r3, r5
 80011dc:	2b04      	cmp	r3, #4
 80011de:	d005      	beq.n	80011ec <__aeabi_dadd+0x10c>
 80011e0:	1d2b      	adds	r3, r5, #4
 80011e2:	42ab      	cmp	r3, r5
 80011e4:	41ad      	sbcs	r5, r5
 80011e6:	426d      	negs	r5, r5
 80011e8:	1964      	adds	r4, r4, r5
 80011ea:	001d      	movs	r5, r3
 80011ec:	0223      	lsls	r3, r4, #8
 80011ee:	d400      	bmi.n	80011f2 <__aeabi_dadd+0x112>
 80011f0:	e12d      	b.n	800144e <__aeabi_dadd+0x36e>
 80011f2:	4a9d      	ldr	r2, [pc, #628]	@ (8001468 <__aeabi_dadd+0x388>)
 80011f4:	3701      	adds	r7, #1
 80011f6:	4297      	cmp	r7, r2
 80011f8:	d100      	bne.n	80011fc <__aeabi_dadd+0x11c>
 80011fa:	e0d3      	b.n	80013a4 <__aeabi_dadd+0x2c4>
 80011fc:	4646      	mov	r6, r8
 80011fe:	499b      	ldr	r1, [pc, #620]	@ (800146c <__aeabi_dadd+0x38c>)
 8001200:	08ed      	lsrs	r5, r5, #3
 8001202:	4021      	ands	r1, r4
 8001204:	074a      	lsls	r2, r1, #29
 8001206:	432a      	orrs	r2, r5
 8001208:	057c      	lsls	r4, r7, #21
 800120a:	024d      	lsls	r5, r1, #9
 800120c:	0b2d      	lsrs	r5, r5, #12
 800120e:	0d64      	lsrs	r4, r4, #21
 8001210:	0524      	lsls	r4, r4, #20
 8001212:	432c      	orrs	r4, r5
 8001214:	07f6      	lsls	r6, r6, #31
 8001216:	4334      	orrs	r4, r6
 8001218:	0010      	movs	r0, r2
 800121a:	0021      	movs	r1, r4
 800121c:	b003      	add	sp, #12
 800121e:	bcf0      	pop	{r4, r5, r6, r7}
 8001220:	46bb      	mov	fp, r7
 8001222:	46b2      	mov	sl, r6
 8001224:	46a9      	mov	r9, r5
 8001226:	46a0      	mov	r8, r4
 8001228:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800122a:	2a00      	cmp	r2, #0
 800122c:	d100      	bne.n	8001230 <__aeabi_dadd+0x150>
 800122e:	e084      	b.n	800133a <__aeabi_dadd+0x25a>
 8001230:	464a      	mov	r2, r9
 8001232:	1bd2      	subs	r2, r2, r7
 8001234:	2f00      	cmp	r7, #0
 8001236:	d000      	beq.n	800123a <__aeabi_dadd+0x15a>
 8001238:	e16d      	b.n	8001516 <__aeabi_dadd+0x436>
 800123a:	0025      	movs	r5, r4
 800123c:	4305      	orrs	r5, r0
 800123e:	d100      	bne.n	8001242 <__aeabi_dadd+0x162>
 8001240:	e127      	b.n	8001492 <__aeabi_dadd+0x3b2>
 8001242:	1e56      	subs	r6, r2, #1
 8001244:	2a01      	cmp	r2, #1
 8001246:	d100      	bne.n	800124a <__aeabi_dadd+0x16a>
 8001248:	e23b      	b.n	80016c2 <__aeabi_dadd+0x5e2>
 800124a:	4d87      	ldr	r5, [pc, #540]	@ (8001468 <__aeabi_dadd+0x388>)
 800124c:	42aa      	cmp	r2, r5
 800124e:	d100      	bne.n	8001252 <__aeabi_dadd+0x172>
 8001250:	e26a      	b.n	8001728 <__aeabi_dadd+0x648>
 8001252:	2501      	movs	r5, #1
 8001254:	2e38      	cmp	r6, #56	@ 0x38
 8001256:	dc12      	bgt.n	800127e <__aeabi_dadd+0x19e>
 8001258:	0032      	movs	r2, r6
 800125a:	2a1f      	cmp	r2, #31
 800125c:	dd00      	ble.n	8001260 <__aeabi_dadd+0x180>
 800125e:	e1f8      	b.n	8001652 <__aeabi_dadd+0x572>
 8001260:	2620      	movs	r6, #32
 8001262:	0025      	movs	r5, r4
 8001264:	1ab6      	subs	r6, r6, r2
 8001266:	0007      	movs	r7, r0
 8001268:	4653      	mov	r3, sl
 800126a:	40b0      	lsls	r0, r6
 800126c:	40d4      	lsrs	r4, r2
 800126e:	40b5      	lsls	r5, r6
 8001270:	40d7      	lsrs	r7, r2
 8001272:	1e46      	subs	r6, r0, #1
 8001274:	41b0      	sbcs	r0, r6
 8001276:	1b1b      	subs	r3, r3, r4
 8001278:	469a      	mov	sl, r3
 800127a:	433d      	orrs	r5, r7
 800127c:	4305      	orrs	r5, r0
 800127e:	4662      	mov	r2, ip
 8001280:	1b55      	subs	r5, r2, r5
 8001282:	45ac      	cmp	ip, r5
 8001284:	4192      	sbcs	r2, r2
 8001286:	4653      	mov	r3, sl
 8001288:	4252      	negs	r2, r2
 800128a:	000e      	movs	r6, r1
 800128c:	464f      	mov	r7, r9
 800128e:	4688      	mov	r8, r1
 8001290:	1a9c      	subs	r4, r3, r2
 8001292:	e778      	b.n	8001186 <__aeabi_dadd+0xa6>
 8001294:	2a00      	cmp	r2, #0
 8001296:	dc00      	bgt.n	800129a <__aeabi_dadd+0x1ba>
 8001298:	e08e      	b.n	80013b8 <__aeabi_dadd+0x2d8>
 800129a:	4649      	mov	r1, r9
 800129c:	2900      	cmp	r1, #0
 800129e:	d175      	bne.n	800138c <__aeabi_dadd+0x2ac>
 80012a0:	4661      	mov	r1, ip
 80012a2:	4653      	mov	r3, sl
 80012a4:	4319      	orrs	r1, r3
 80012a6:	d100      	bne.n	80012aa <__aeabi_dadd+0x1ca>
 80012a8:	e0f6      	b.n	8001498 <__aeabi_dadd+0x3b8>
 80012aa:	1e51      	subs	r1, r2, #1
 80012ac:	2a01      	cmp	r2, #1
 80012ae:	d100      	bne.n	80012b2 <__aeabi_dadd+0x1d2>
 80012b0:	e191      	b.n	80015d6 <__aeabi_dadd+0x4f6>
 80012b2:	4d6d      	ldr	r5, [pc, #436]	@ (8001468 <__aeabi_dadd+0x388>)
 80012b4:	42aa      	cmp	r2, r5
 80012b6:	d100      	bne.n	80012ba <__aeabi_dadd+0x1da>
 80012b8:	e0dc      	b.n	8001474 <__aeabi_dadd+0x394>
 80012ba:	2501      	movs	r5, #1
 80012bc:	2938      	cmp	r1, #56	@ 0x38
 80012be:	dc14      	bgt.n	80012ea <__aeabi_dadd+0x20a>
 80012c0:	000a      	movs	r2, r1
 80012c2:	2a1f      	cmp	r2, #31
 80012c4:	dd00      	ble.n	80012c8 <__aeabi_dadd+0x1e8>
 80012c6:	e1a2      	b.n	800160e <__aeabi_dadd+0x52e>
 80012c8:	2120      	movs	r1, #32
 80012ca:	4653      	mov	r3, sl
 80012cc:	1a89      	subs	r1, r1, r2
 80012ce:	408b      	lsls	r3, r1
 80012d0:	001d      	movs	r5, r3
 80012d2:	4663      	mov	r3, ip
 80012d4:	40d3      	lsrs	r3, r2
 80012d6:	431d      	orrs	r5, r3
 80012d8:	4663      	mov	r3, ip
 80012da:	408b      	lsls	r3, r1
 80012dc:	0019      	movs	r1, r3
 80012de:	1e4b      	subs	r3, r1, #1
 80012e0:	4199      	sbcs	r1, r3
 80012e2:	4653      	mov	r3, sl
 80012e4:	40d3      	lsrs	r3, r2
 80012e6:	430d      	orrs	r5, r1
 80012e8:	18e4      	adds	r4, r4, r3
 80012ea:	182d      	adds	r5, r5, r0
 80012ec:	4285      	cmp	r5, r0
 80012ee:	4180      	sbcs	r0, r0
 80012f0:	4240      	negs	r0, r0
 80012f2:	1824      	adds	r4, r4, r0
 80012f4:	0223      	lsls	r3, r4, #8
 80012f6:	d559      	bpl.n	80013ac <__aeabi_dadd+0x2cc>
 80012f8:	4b5b      	ldr	r3, [pc, #364]	@ (8001468 <__aeabi_dadd+0x388>)
 80012fa:	3701      	adds	r7, #1
 80012fc:	429f      	cmp	r7, r3
 80012fe:	d051      	beq.n	80013a4 <__aeabi_dadd+0x2c4>
 8001300:	2101      	movs	r1, #1
 8001302:	4b5a      	ldr	r3, [pc, #360]	@ (800146c <__aeabi_dadd+0x38c>)
 8001304:	086a      	lsrs	r2, r5, #1
 8001306:	401c      	ands	r4, r3
 8001308:	4029      	ands	r1, r5
 800130a:	430a      	orrs	r2, r1
 800130c:	07e5      	lsls	r5, r4, #31
 800130e:	4315      	orrs	r5, r2
 8001310:	0864      	lsrs	r4, r4, #1
 8001312:	e75f      	b.n	80011d4 <__aeabi_dadd+0xf4>
 8001314:	4661      	mov	r1, ip
 8001316:	4653      	mov	r3, sl
 8001318:	4319      	orrs	r1, r3
 800131a:	d100      	bne.n	800131e <__aeabi_dadd+0x23e>
 800131c:	e0bc      	b.n	8001498 <__aeabi_dadd+0x3b8>
 800131e:	1e51      	subs	r1, r2, #1
 8001320:	2a01      	cmp	r2, #1
 8001322:	d100      	bne.n	8001326 <__aeabi_dadd+0x246>
 8001324:	e164      	b.n	80015f0 <__aeabi_dadd+0x510>
 8001326:	4d50      	ldr	r5, [pc, #320]	@ (8001468 <__aeabi_dadd+0x388>)
 8001328:	42aa      	cmp	r2, r5
 800132a:	d100      	bne.n	800132e <__aeabi_dadd+0x24e>
 800132c:	e16a      	b.n	8001604 <__aeabi_dadd+0x524>
 800132e:	2501      	movs	r5, #1
 8001330:	2938      	cmp	r1, #56	@ 0x38
 8001332:	dd00      	ble.n	8001336 <__aeabi_dadd+0x256>
 8001334:	e722      	b.n	800117c <__aeabi_dadd+0x9c>
 8001336:	000a      	movs	r2, r1
 8001338:	e70e      	b.n	8001158 <__aeabi_dadd+0x78>
 800133a:	4a4d      	ldr	r2, [pc, #308]	@ (8001470 <__aeabi_dadd+0x390>)
 800133c:	1c7d      	adds	r5, r7, #1
 800133e:	4215      	tst	r5, r2
 8001340:	d000      	beq.n	8001344 <__aeabi_dadd+0x264>
 8001342:	e0d0      	b.n	80014e6 <__aeabi_dadd+0x406>
 8001344:	0025      	movs	r5, r4
 8001346:	4662      	mov	r2, ip
 8001348:	4653      	mov	r3, sl
 800134a:	4305      	orrs	r5, r0
 800134c:	431a      	orrs	r2, r3
 800134e:	2f00      	cmp	r7, #0
 8001350:	d000      	beq.n	8001354 <__aeabi_dadd+0x274>
 8001352:	e137      	b.n	80015c4 <__aeabi_dadd+0x4e4>
 8001354:	2d00      	cmp	r5, #0
 8001356:	d100      	bne.n	800135a <__aeabi_dadd+0x27a>
 8001358:	e1a8      	b.n	80016ac <__aeabi_dadd+0x5cc>
 800135a:	2a00      	cmp	r2, #0
 800135c:	d100      	bne.n	8001360 <__aeabi_dadd+0x280>
 800135e:	e16a      	b.n	8001636 <__aeabi_dadd+0x556>
 8001360:	4663      	mov	r3, ip
 8001362:	1ac5      	subs	r5, r0, r3
 8001364:	4653      	mov	r3, sl
 8001366:	1ae2      	subs	r2, r4, r3
 8001368:	42a8      	cmp	r0, r5
 800136a:	419b      	sbcs	r3, r3
 800136c:	425b      	negs	r3, r3
 800136e:	1ad3      	subs	r3, r2, r3
 8001370:	021a      	lsls	r2, r3, #8
 8001372:	d400      	bmi.n	8001376 <__aeabi_dadd+0x296>
 8001374:	e203      	b.n	800177e <__aeabi_dadd+0x69e>
 8001376:	4663      	mov	r3, ip
 8001378:	1a1d      	subs	r5, r3, r0
 800137a:	45ac      	cmp	ip, r5
 800137c:	4192      	sbcs	r2, r2
 800137e:	4653      	mov	r3, sl
 8001380:	4252      	negs	r2, r2
 8001382:	1b1c      	subs	r4, r3, r4
 8001384:	000e      	movs	r6, r1
 8001386:	4688      	mov	r8, r1
 8001388:	1aa4      	subs	r4, r4, r2
 800138a:	e723      	b.n	80011d4 <__aeabi_dadd+0xf4>
 800138c:	4936      	ldr	r1, [pc, #216]	@ (8001468 <__aeabi_dadd+0x388>)
 800138e:	428f      	cmp	r7, r1
 8001390:	d070      	beq.n	8001474 <__aeabi_dadd+0x394>
 8001392:	2501      	movs	r5, #1
 8001394:	2a38      	cmp	r2, #56	@ 0x38
 8001396:	dca8      	bgt.n	80012ea <__aeabi_dadd+0x20a>
 8001398:	2180      	movs	r1, #128	@ 0x80
 800139a:	4653      	mov	r3, sl
 800139c:	0409      	lsls	r1, r1, #16
 800139e:	430b      	orrs	r3, r1
 80013a0:	469a      	mov	sl, r3
 80013a2:	e78e      	b.n	80012c2 <__aeabi_dadd+0x1e2>
 80013a4:	003c      	movs	r4, r7
 80013a6:	2500      	movs	r5, #0
 80013a8:	2200      	movs	r2, #0
 80013aa:	e731      	b.n	8001210 <__aeabi_dadd+0x130>
 80013ac:	2307      	movs	r3, #7
 80013ae:	402b      	ands	r3, r5
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d000      	beq.n	80013b6 <__aeabi_dadd+0x2d6>
 80013b4:	e710      	b.n	80011d8 <__aeabi_dadd+0xf8>
 80013b6:	e093      	b.n	80014e0 <__aeabi_dadd+0x400>
 80013b8:	2a00      	cmp	r2, #0
 80013ba:	d074      	beq.n	80014a6 <__aeabi_dadd+0x3c6>
 80013bc:	464a      	mov	r2, r9
 80013be:	1bd2      	subs	r2, r2, r7
 80013c0:	2f00      	cmp	r7, #0
 80013c2:	d100      	bne.n	80013c6 <__aeabi_dadd+0x2e6>
 80013c4:	e0c7      	b.n	8001556 <__aeabi_dadd+0x476>
 80013c6:	4928      	ldr	r1, [pc, #160]	@ (8001468 <__aeabi_dadd+0x388>)
 80013c8:	4589      	cmp	r9, r1
 80013ca:	d100      	bne.n	80013ce <__aeabi_dadd+0x2ee>
 80013cc:	e185      	b.n	80016da <__aeabi_dadd+0x5fa>
 80013ce:	2501      	movs	r5, #1
 80013d0:	2a38      	cmp	r2, #56	@ 0x38
 80013d2:	dc12      	bgt.n	80013fa <__aeabi_dadd+0x31a>
 80013d4:	2180      	movs	r1, #128	@ 0x80
 80013d6:	0409      	lsls	r1, r1, #16
 80013d8:	430c      	orrs	r4, r1
 80013da:	2a1f      	cmp	r2, #31
 80013dc:	dd00      	ble.n	80013e0 <__aeabi_dadd+0x300>
 80013de:	e1ab      	b.n	8001738 <__aeabi_dadd+0x658>
 80013e0:	2120      	movs	r1, #32
 80013e2:	0025      	movs	r5, r4
 80013e4:	1a89      	subs	r1, r1, r2
 80013e6:	0007      	movs	r7, r0
 80013e8:	4088      	lsls	r0, r1
 80013ea:	408d      	lsls	r5, r1
 80013ec:	40d7      	lsrs	r7, r2
 80013ee:	1e41      	subs	r1, r0, #1
 80013f0:	4188      	sbcs	r0, r1
 80013f2:	40d4      	lsrs	r4, r2
 80013f4:	433d      	orrs	r5, r7
 80013f6:	4305      	orrs	r5, r0
 80013f8:	44a2      	add	sl, r4
 80013fa:	4465      	add	r5, ip
 80013fc:	4565      	cmp	r5, ip
 80013fe:	4192      	sbcs	r2, r2
 8001400:	4252      	negs	r2, r2
 8001402:	4452      	add	r2, sl
 8001404:	0014      	movs	r4, r2
 8001406:	464f      	mov	r7, r9
 8001408:	e774      	b.n	80012f4 <__aeabi_dadd+0x214>
 800140a:	0028      	movs	r0, r5
 800140c:	f000 fd6a 	bl	8001ee4 <__clzsi2>
 8001410:	0003      	movs	r3, r0
 8001412:	3318      	adds	r3, #24
 8001414:	2b1f      	cmp	r3, #31
 8001416:	dc00      	bgt.n	800141a <__aeabi_dadd+0x33a>
 8001418:	e6c2      	b.n	80011a0 <__aeabi_dadd+0xc0>
 800141a:	002a      	movs	r2, r5
 800141c:	3808      	subs	r0, #8
 800141e:	4082      	lsls	r2, r0
 8001420:	429f      	cmp	r7, r3
 8001422:	dd00      	ble.n	8001426 <__aeabi_dadd+0x346>
 8001424:	e0a9      	b.n	800157a <__aeabi_dadd+0x49a>
 8001426:	1bdb      	subs	r3, r3, r7
 8001428:	1c58      	adds	r0, r3, #1
 800142a:	281f      	cmp	r0, #31
 800142c:	dc00      	bgt.n	8001430 <__aeabi_dadd+0x350>
 800142e:	e1ac      	b.n	800178a <__aeabi_dadd+0x6aa>
 8001430:	0015      	movs	r5, r2
 8001432:	3b1f      	subs	r3, #31
 8001434:	40dd      	lsrs	r5, r3
 8001436:	2820      	cmp	r0, #32
 8001438:	d005      	beq.n	8001446 <__aeabi_dadd+0x366>
 800143a:	2340      	movs	r3, #64	@ 0x40
 800143c:	1a1b      	subs	r3, r3, r0
 800143e:	409a      	lsls	r2, r3
 8001440:	1e53      	subs	r3, r2, #1
 8001442:	419a      	sbcs	r2, r3
 8001444:	4315      	orrs	r5, r2
 8001446:	2307      	movs	r3, #7
 8001448:	2700      	movs	r7, #0
 800144a:	402b      	ands	r3, r5
 800144c:	e7b0      	b.n	80013b0 <__aeabi_dadd+0x2d0>
 800144e:	08ed      	lsrs	r5, r5, #3
 8001450:	4b05      	ldr	r3, [pc, #20]	@ (8001468 <__aeabi_dadd+0x388>)
 8001452:	0762      	lsls	r2, r4, #29
 8001454:	432a      	orrs	r2, r5
 8001456:	08e4      	lsrs	r4, r4, #3
 8001458:	429f      	cmp	r7, r3
 800145a:	d00f      	beq.n	800147c <__aeabi_dadd+0x39c>
 800145c:	0324      	lsls	r4, r4, #12
 800145e:	0b25      	lsrs	r5, r4, #12
 8001460:	057c      	lsls	r4, r7, #21
 8001462:	0d64      	lsrs	r4, r4, #21
 8001464:	e6d4      	b.n	8001210 <__aeabi_dadd+0x130>
 8001466:	46c0      	nop			@ (mov r8, r8)
 8001468:	000007ff 	.word	0x000007ff
 800146c:	ff7fffff 	.word	0xff7fffff
 8001470:	000007fe 	.word	0x000007fe
 8001474:	08c0      	lsrs	r0, r0, #3
 8001476:	0762      	lsls	r2, r4, #29
 8001478:	4302      	orrs	r2, r0
 800147a:	08e4      	lsrs	r4, r4, #3
 800147c:	0013      	movs	r3, r2
 800147e:	4323      	orrs	r3, r4
 8001480:	d100      	bne.n	8001484 <__aeabi_dadd+0x3a4>
 8001482:	e186      	b.n	8001792 <__aeabi_dadd+0x6b2>
 8001484:	2580      	movs	r5, #128	@ 0x80
 8001486:	032d      	lsls	r5, r5, #12
 8001488:	4325      	orrs	r5, r4
 800148a:	032d      	lsls	r5, r5, #12
 800148c:	4cc3      	ldr	r4, [pc, #780]	@ (800179c <__aeabi_dadd+0x6bc>)
 800148e:	0b2d      	lsrs	r5, r5, #12
 8001490:	e6be      	b.n	8001210 <__aeabi_dadd+0x130>
 8001492:	4660      	mov	r0, ip
 8001494:	4654      	mov	r4, sl
 8001496:	000e      	movs	r6, r1
 8001498:	0017      	movs	r7, r2
 800149a:	08c5      	lsrs	r5, r0, #3
 800149c:	e7d8      	b.n	8001450 <__aeabi_dadd+0x370>
 800149e:	4cc0      	ldr	r4, [pc, #768]	@ (80017a0 <__aeabi_dadd+0x6c0>)
 80014a0:	1aff      	subs	r7, r7, r3
 80014a2:	4014      	ands	r4, r2
 80014a4:	e696      	b.n	80011d4 <__aeabi_dadd+0xf4>
 80014a6:	4abf      	ldr	r2, [pc, #764]	@ (80017a4 <__aeabi_dadd+0x6c4>)
 80014a8:	1c79      	adds	r1, r7, #1
 80014aa:	4211      	tst	r1, r2
 80014ac:	d16b      	bne.n	8001586 <__aeabi_dadd+0x4a6>
 80014ae:	0022      	movs	r2, r4
 80014b0:	4302      	orrs	r2, r0
 80014b2:	2f00      	cmp	r7, #0
 80014b4:	d000      	beq.n	80014b8 <__aeabi_dadd+0x3d8>
 80014b6:	e0db      	b.n	8001670 <__aeabi_dadd+0x590>
 80014b8:	2a00      	cmp	r2, #0
 80014ba:	d100      	bne.n	80014be <__aeabi_dadd+0x3de>
 80014bc:	e12d      	b.n	800171a <__aeabi_dadd+0x63a>
 80014be:	4662      	mov	r2, ip
 80014c0:	4653      	mov	r3, sl
 80014c2:	431a      	orrs	r2, r3
 80014c4:	d100      	bne.n	80014c8 <__aeabi_dadd+0x3e8>
 80014c6:	e0b6      	b.n	8001636 <__aeabi_dadd+0x556>
 80014c8:	4663      	mov	r3, ip
 80014ca:	18c5      	adds	r5, r0, r3
 80014cc:	4285      	cmp	r5, r0
 80014ce:	4180      	sbcs	r0, r0
 80014d0:	4454      	add	r4, sl
 80014d2:	4240      	negs	r0, r0
 80014d4:	1824      	adds	r4, r4, r0
 80014d6:	0223      	lsls	r3, r4, #8
 80014d8:	d502      	bpl.n	80014e0 <__aeabi_dadd+0x400>
 80014da:	000f      	movs	r7, r1
 80014dc:	4bb0      	ldr	r3, [pc, #704]	@ (80017a0 <__aeabi_dadd+0x6c0>)
 80014de:	401c      	ands	r4, r3
 80014e0:	003a      	movs	r2, r7
 80014e2:	0028      	movs	r0, r5
 80014e4:	e7d8      	b.n	8001498 <__aeabi_dadd+0x3b8>
 80014e6:	4662      	mov	r2, ip
 80014e8:	1a85      	subs	r5, r0, r2
 80014ea:	42a8      	cmp	r0, r5
 80014ec:	4192      	sbcs	r2, r2
 80014ee:	4653      	mov	r3, sl
 80014f0:	4252      	negs	r2, r2
 80014f2:	4691      	mov	r9, r2
 80014f4:	1ae3      	subs	r3, r4, r3
 80014f6:	001a      	movs	r2, r3
 80014f8:	464b      	mov	r3, r9
 80014fa:	1ad2      	subs	r2, r2, r3
 80014fc:	0013      	movs	r3, r2
 80014fe:	4691      	mov	r9, r2
 8001500:	021a      	lsls	r2, r3, #8
 8001502:	d454      	bmi.n	80015ae <__aeabi_dadd+0x4ce>
 8001504:	464a      	mov	r2, r9
 8001506:	464c      	mov	r4, r9
 8001508:	432a      	orrs	r2, r5
 800150a:	d000      	beq.n	800150e <__aeabi_dadd+0x42e>
 800150c:	e640      	b.n	8001190 <__aeabi_dadd+0xb0>
 800150e:	2600      	movs	r6, #0
 8001510:	2400      	movs	r4, #0
 8001512:	2500      	movs	r5, #0
 8001514:	e67c      	b.n	8001210 <__aeabi_dadd+0x130>
 8001516:	4da1      	ldr	r5, [pc, #644]	@ (800179c <__aeabi_dadd+0x6bc>)
 8001518:	45a9      	cmp	r9, r5
 800151a:	d100      	bne.n	800151e <__aeabi_dadd+0x43e>
 800151c:	e090      	b.n	8001640 <__aeabi_dadd+0x560>
 800151e:	2501      	movs	r5, #1
 8001520:	2a38      	cmp	r2, #56	@ 0x38
 8001522:	dd00      	ble.n	8001526 <__aeabi_dadd+0x446>
 8001524:	e6ab      	b.n	800127e <__aeabi_dadd+0x19e>
 8001526:	2580      	movs	r5, #128	@ 0x80
 8001528:	042d      	lsls	r5, r5, #16
 800152a:	432c      	orrs	r4, r5
 800152c:	e695      	b.n	800125a <__aeabi_dadd+0x17a>
 800152e:	0011      	movs	r1, r2
 8001530:	4655      	mov	r5, sl
 8001532:	3920      	subs	r1, #32
 8001534:	40cd      	lsrs	r5, r1
 8001536:	46a9      	mov	r9, r5
 8001538:	2a20      	cmp	r2, #32
 800153a:	d006      	beq.n	800154a <__aeabi_dadd+0x46a>
 800153c:	2140      	movs	r1, #64	@ 0x40
 800153e:	4653      	mov	r3, sl
 8001540:	1a8a      	subs	r2, r1, r2
 8001542:	4093      	lsls	r3, r2
 8001544:	4662      	mov	r2, ip
 8001546:	431a      	orrs	r2, r3
 8001548:	4694      	mov	ip, r2
 800154a:	4665      	mov	r5, ip
 800154c:	1e6b      	subs	r3, r5, #1
 800154e:	419d      	sbcs	r5, r3
 8001550:	464b      	mov	r3, r9
 8001552:	431d      	orrs	r5, r3
 8001554:	e612      	b.n	800117c <__aeabi_dadd+0x9c>
 8001556:	0021      	movs	r1, r4
 8001558:	4301      	orrs	r1, r0
 800155a:	d100      	bne.n	800155e <__aeabi_dadd+0x47e>
 800155c:	e0c4      	b.n	80016e8 <__aeabi_dadd+0x608>
 800155e:	1e51      	subs	r1, r2, #1
 8001560:	2a01      	cmp	r2, #1
 8001562:	d100      	bne.n	8001566 <__aeabi_dadd+0x486>
 8001564:	e0fb      	b.n	800175e <__aeabi_dadd+0x67e>
 8001566:	4d8d      	ldr	r5, [pc, #564]	@ (800179c <__aeabi_dadd+0x6bc>)
 8001568:	42aa      	cmp	r2, r5
 800156a:	d100      	bne.n	800156e <__aeabi_dadd+0x48e>
 800156c:	e0b5      	b.n	80016da <__aeabi_dadd+0x5fa>
 800156e:	2501      	movs	r5, #1
 8001570:	2938      	cmp	r1, #56	@ 0x38
 8001572:	dd00      	ble.n	8001576 <__aeabi_dadd+0x496>
 8001574:	e741      	b.n	80013fa <__aeabi_dadd+0x31a>
 8001576:	000a      	movs	r2, r1
 8001578:	e72f      	b.n	80013da <__aeabi_dadd+0x2fa>
 800157a:	4c89      	ldr	r4, [pc, #548]	@ (80017a0 <__aeabi_dadd+0x6c0>)
 800157c:	1aff      	subs	r7, r7, r3
 800157e:	4014      	ands	r4, r2
 8001580:	0762      	lsls	r2, r4, #29
 8001582:	08e4      	lsrs	r4, r4, #3
 8001584:	e76a      	b.n	800145c <__aeabi_dadd+0x37c>
 8001586:	4a85      	ldr	r2, [pc, #532]	@ (800179c <__aeabi_dadd+0x6bc>)
 8001588:	4291      	cmp	r1, r2
 800158a:	d100      	bne.n	800158e <__aeabi_dadd+0x4ae>
 800158c:	e0e3      	b.n	8001756 <__aeabi_dadd+0x676>
 800158e:	4663      	mov	r3, ip
 8001590:	18c2      	adds	r2, r0, r3
 8001592:	4282      	cmp	r2, r0
 8001594:	4180      	sbcs	r0, r0
 8001596:	0023      	movs	r3, r4
 8001598:	4240      	negs	r0, r0
 800159a:	4453      	add	r3, sl
 800159c:	181b      	adds	r3, r3, r0
 800159e:	07dd      	lsls	r5, r3, #31
 80015a0:	085c      	lsrs	r4, r3, #1
 80015a2:	2307      	movs	r3, #7
 80015a4:	0852      	lsrs	r2, r2, #1
 80015a6:	4315      	orrs	r5, r2
 80015a8:	000f      	movs	r7, r1
 80015aa:	402b      	ands	r3, r5
 80015ac:	e700      	b.n	80013b0 <__aeabi_dadd+0x2d0>
 80015ae:	4663      	mov	r3, ip
 80015b0:	1a1d      	subs	r5, r3, r0
 80015b2:	45ac      	cmp	ip, r5
 80015b4:	4192      	sbcs	r2, r2
 80015b6:	4653      	mov	r3, sl
 80015b8:	4252      	negs	r2, r2
 80015ba:	1b1c      	subs	r4, r3, r4
 80015bc:	000e      	movs	r6, r1
 80015be:	4688      	mov	r8, r1
 80015c0:	1aa4      	subs	r4, r4, r2
 80015c2:	e5e5      	b.n	8001190 <__aeabi_dadd+0xb0>
 80015c4:	2d00      	cmp	r5, #0
 80015c6:	d000      	beq.n	80015ca <__aeabi_dadd+0x4ea>
 80015c8:	e091      	b.n	80016ee <__aeabi_dadd+0x60e>
 80015ca:	2a00      	cmp	r2, #0
 80015cc:	d138      	bne.n	8001640 <__aeabi_dadd+0x560>
 80015ce:	2480      	movs	r4, #128	@ 0x80
 80015d0:	2600      	movs	r6, #0
 80015d2:	0324      	lsls	r4, r4, #12
 80015d4:	e756      	b.n	8001484 <__aeabi_dadd+0x3a4>
 80015d6:	4663      	mov	r3, ip
 80015d8:	18c5      	adds	r5, r0, r3
 80015da:	4285      	cmp	r5, r0
 80015dc:	4180      	sbcs	r0, r0
 80015de:	4454      	add	r4, sl
 80015e0:	4240      	negs	r0, r0
 80015e2:	1824      	adds	r4, r4, r0
 80015e4:	2701      	movs	r7, #1
 80015e6:	0223      	lsls	r3, r4, #8
 80015e8:	d400      	bmi.n	80015ec <__aeabi_dadd+0x50c>
 80015ea:	e6df      	b.n	80013ac <__aeabi_dadd+0x2cc>
 80015ec:	2702      	movs	r7, #2
 80015ee:	e687      	b.n	8001300 <__aeabi_dadd+0x220>
 80015f0:	4663      	mov	r3, ip
 80015f2:	1ac5      	subs	r5, r0, r3
 80015f4:	42a8      	cmp	r0, r5
 80015f6:	4180      	sbcs	r0, r0
 80015f8:	4653      	mov	r3, sl
 80015fa:	4240      	negs	r0, r0
 80015fc:	1ae4      	subs	r4, r4, r3
 80015fe:	2701      	movs	r7, #1
 8001600:	1a24      	subs	r4, r4, r0
 8001602:	e5c0      	b.n	8001186 <__aeabi_dadd+0xa6>
 8001604:	0762      	lsls	r2, r4, #29
 8001606:	08c0      	lsrs	r0, r0, #3
 8001608:	4302      	orrs	r2, r0
 800160a:	08e4      	lsrs	r4, r4, #3
 800160c:	e736      	b.n	800147c <__aeabi_dadd+0x39c>
 800160e:	0011      	movs	r1, r2
 8001610:	4653      	mov	r3, sl
 8001612:	3920      	subs	r1, #32
 8001614:	40cb      	lsrs	r3, r1
 8001616:	4699      	mov	r9, r3
 8001618:	2a20      	cmp	r2, #32
 800161a:	d006      	beq.n	800162a <__aeabi_dadd+0x54a>
 800161c:	2140      	movs	r1, #64	@ 0x40
 800161e:	4653      	mov	r3, sl
 8001620:	1a8a      	subs	r2, r1, r2
 8001622:	4093      	lsls	r3, r2
 8001624:	4662      	mov	r2, ip
 8001626:	431a      	orrs	r2, r3
 8001628:	4694      	mov	ip, r2
 800162a:	4665      	mov	r5, ip
 800162c:	1e6b      	subs	r3, r5, #1
 800162e:	419d      	sbcs	r5, r3
 8001630:	464b      	mov	r3, r9
 8001632:	431d      	orrs	r5, r3
 8001634:	e659      	b.n	80012ea <__aeabi_dadd+0x20a>
 8001636:	0762      	lsls	r2, r4, #29
 8001638:	08c0      	lsrs	r0, r0, #3
 800163a:	4302      	orrs	r2, r0
 800163c:	08e4      	lsrs	r4, r4, #3
 800163e:	e70d      	b.n	800145c <__aeabi_dadd+0x37c>
 8001640:	4653      	mov	r3, sl
 8001642:	075a      	lsls	r2, r3, #29
 8001644:	4663      	mov	r3, ip
 8001646:	08d8      	lsrs	r0, r3, #3
 8001648:	4653      	mov	r3, sl
 800164a:	000e      	movs	r6, r1
 800164c:	4302      	orrs	r2, r0
 800164e:	08dc      	lsrs	r4, r3, #3
 8001650:	e714      	b.n	800147c <__aeabi_dadd+0x39c>
 8001652:	0015      	movs	r5, r2
 8001654:	0026      	movs	r6, r4
 8001656:	3d20      	subs	r5, #32
 8001658:	40ee      	lsrs	r6, r5
 800165a:	2a20      	cmp	r2, #32
 800165c:	d003      	beq.n	8001666 <__aeabi_dadd+0x586>
 800165e:	2540      	movs	r5, #64	@ 0x40
 8001660:	1aaa      	subs	r2, r5, r2
 8001662:	4094      	lsls	r4, r2
 8001664:	4320      	orrs	r0, r4
 8001666:	1e42      	subs	r2, r0, #1
 8001668:	4190      	sbcs	r0, r2
 800166a:	0005      	movs	r5, r0
 800166c:	4335      	orrs	r5, r6
 800166e:	e606      	b.n	800127e <__aeabi_dadd+0x19e>
 8001670:	2a00      	cmp	r2, #0
 8001672:	d07c      	beq.n	800176e <__aeabi_dadd+0x68e>
 8001674:	4662      	mov	r2, ip
 8001676:	4653      	mov	r3, sl
 8001678:	08c0      	lsrs	r0, r0, #3
 800167a:	431a      	orrs	r2, r3
 800167c:	d100      	bne.n	8001680 <__aeabi_dadd+0x5a0>
 800167e:	e6fa      	b.n	8001476 <__aeabi_dadd+0x396>
 8001680:	0762      	lsls	r2, r4, #29
 8001682:	4310      	orrs	r0, r2
 8001684:	2280      	movs	r2, #128	@ 0x80
 8001686:	08e4      	lsrs	r4, r4, #3
 8001688:	0312      	lsls	r2, r2, #12
 800168a:	4214      	tst	r4, r2
 800168c:	d008      	beq.n	80016a0 <__aeabi_dadd+0x5c0>
 800168e:	08d9      	lsrs	r1, r3, #3
 8001690:	4211      	tst	r1, r2
 8001692:	d105      	bne.n	80016a0 <__aeabi_dadd+0x5c0>
 8001694:	4663      	mov	r3, ip
 8001696:	08d8      	lsrs	r0, r3, #3
 8001698:	4653      	mov	r3, sl
 800169a:	000c      	movs	r4, r1
 800169c:	075b      	lsls	r3, r3, #29
 800169e:	4318      	orrs	r0, r3
 80016a0:	0f42      	lsrs	r2, r0, #29
 80016a2:	00c0      	lsls	r0, r0, #3
 80016a4:	08c0      	lsrs	r0, r0, #3
 80016a6:	0752      	lsls	r2, r2, #29
 80016a8:	4302      	orrs	r2, r0
 80016aa:	e6e7      	b.n	800147c <__aeabi_dadd+0x39c>
 80016ac:	2a00      	cmp	r2, #0
 80016ae:	d100      	bne.n	80016b2 <__aeabi_dadd+0x5d2>
 80016b0:	e72d      	b.n	800150e <__aeabi_dadd+0x42e>
 80016b2:	4663      	mov	r3, ip
 80016b4:	08d8      	lsrs	r0, r3, #3
 80016b6:	4653      	mov	r3, sl
 80016b8:	075a      	lsls	r2, r3, #29
 80016ba:	000e      	movs	r6, r1
 80016bc:	4302      	orrs	r2, r0
 80016be:	08dc      	lsrs	r4, r3, #3
 80016c0:	e6cc      	b.n	800145c <__aeabi_dadd+0x37c>
 80016c2:	4663      	mov	r3, ip
 80016c4:	1a1d      	subs	r5, r3, r0
 80016c6:	45ac      	cmp	ip, r5
 80016c8:	4192      	sbcs	r2, r2
 80016ca:	4653      	mov	r3, sl
 80016cc:	4252      	negs	r2, r2
 80016ce:	1b1c      	subs	r4, r3, r4
 80016d0:	000e      	movs	r6, r1
 80016d2:	4688      	mov	r8, r1
 80016d4:	1aa4      	subs	r4, r4, r2
 80016d6:	3701      	adds	r7, #1
 80016d8:	e555      	b.n	8001186 <__aeabi_dadd+0xa6>
 80016da:	4663      	mov	r3, ip
 80016dc:	08d9      	lsrs	r1, r3, #3
 80016de:	4653      	mov	r3, sl
 80016e0:	075a      	lsls	r2, r3, #29
 80016e2:	430a      	orrs	r2, r1
 80016e4:	08dc      	lsrs	r4, r3, #3
 80016e6:	e6c9      	b.n	800147c <__aeabi_dadd+0x39c>
 80016e8:	4660      	mov	r0, ip
 80016ea:	4654      	mov	r4, sl
 80016ec:	e6d4      	b.n	8001498 <__aeabi_dadd+0x3b8>
 80016ee:	08c0      	lsrs	r0, r0, #3
 80016f0:	2a00      	cmp	r2, #0
 80016f2:	d100      	bne.n	80016f6 <__aeabi_dadd+0x616>
 80016f4:	e6bf      	b.n	8001476 <__aeabi_dadd+0x396>
 80016f6:	0762      	lsls	r2, r4, #29
 80016f8:	4310      	orrs	r0, r2
 80016fa:	2280      	movs	r2, #128	@ 0x80
 80016fc:	08e4      	lsrs	r4, r4, #3
 80016fe:	0312      	lsls	r2, r2, #12
 8001700:	4214      	tst	r4, r2
 8001702:	d0cd      	beq.n	80016a0 <__aeabi_dadd+0x5c0>
 8001704:	08dd      	lsrs	r5, r3, #3
 8001706:	4215      	tst	r5, r2
 8001708:	d1ca      	bne.n	80016a0 <__aeabi_dadd+0x5c0>
 800170a:	4663      	mov	r3, ip
 800170c:	08d8      	lsrs	r0, r3, #3
 800170e:	4653      	mov	r3, sl
 8001710:	075b      	lsls	r3, r3, #29
 8001712:	000e      	movs	r6, r1
 8001714:	002c      	movs	r4, r5
 8001716:	4318      	orrs	r0, r3
 8001718:	e7c2      	b.n	80016a0 <__aeabi_dadd+0x5c0>
 800171a:	4663      	mov	r3, ip
 800171c:	08d9      	lsrs	r1, r3, #3
 800171e:	4653      	mov	r3, sl
 8001720:	075a      	lsls	r2, r3, #29
 8001722:	430a      	orrs	r2, r1
 8001724:	08dc      	lsrs	r4, r3, #3
 8001726:	e699      	b.n	800145c <__aeabi_dadd+0x37c>
 8001728:	4663      	mov	r3, ip
 800172a:	08d8      	lsrs	r0, r3, #3
 800172c:	4653      	mov	r3, sl
 800172e:	075a      	lsls	r2, r3, #29
 8001730:	000e      	movs	r6, r1
 8001732:	4302      	orrs	r2, r0
 8001734:	08dc      	lsrs	r4, r3, #3
 8001736:	e6a1      	b.n	800147c <__aeabi_dadd+0x39c>
 8001738:	0011      	movs	r1, r2
 800173a:	0027      	movs	r7, r4
 800173c:	3920      	subs	r1, #32
 800173e:	40cf      	lsrs	r7, r1
 8001740:	2a20      	cmp	r2, #32
 8001742:	d003      	beq.n	800174c <__aeabi_dadd+0x66c>
 8001744:	2140      	movs	r1, #64	@ 0x40
 8001746:	1a8a      	subs	r2, r1, r2
 8001748:	4094      	lsls	r4, r2
 800174a:	4320      	orrs	r0, r4
 800174c:	1e42      	subs	r2, r0, #1
 800174e:	4190      	sbcs	r0, r2
 8001750:	0005      	movs	r5, r0
 8001752:	433d      	orrs	r5, r7
 8001754:	e651      	b.n	80013fa <__aeabi_dadd+0x31a>
 8001756:	000c      	movs	r4, r1
 8001758:	2500      	movs	r5, #0
 800175a:	2200      	movs	r2, #0
 800175c:	e558      	b.n	8001210 <__aeabi_dadd+0x130>
 800175e:	4460      	add	r0, ip
 8001760:	4560      	cmp	r0, ip
 8001762:	4192      	sbcs	r2, r2
 8001764:	4454      	add	r4, sl
 8001766:	4252      	negs	r2, r2
 8001768:	0005      	movs	r5, r0
 800176a:	18a4      	adds	r4, r4, r2
 800176c:	e73a      	b.n	80015e4 <__aeabi_dadd+0x504>
 800176e:	4653      	mov	r3, sl
 8001770:	075a      	lsls	r2, r3, #29
 8001772:	4663      	mov	r3, ip
 8001774:	08d9      	lsrs	r1, r3, #3
 8001776:	4653      	mov	r3, sl
 8001778:	430a      	orrs	r2, r1
 800177a:	08dc      	lsrs	r4, r3, #3
 800177c:	e67e      	b.n	800147c <__aeabi_dadd+0x39c>
 800177e:	001a      	movs	r2, r3
 8001780:	001c      	movs	r4, r3
 8001782:	432a      	orrs	r2, r5
 8001784:	d000      	beq.n	8001788 <__aeabi_dadd+0x6a8>
 8001786:	e6ab      	b.n	80014e0 <__aeabi_dadd+0x400>
 8001788:	e6c1      	b.n	800150e <__aeabi_dadd+0x42e>
 800178a:	2120      	movs	r1, #32
 800178c:	2500      	movs	r5, #0
 800178e:	1a09      	subs	r1, r1, r0
 8001790:	e519      	b.n	80011c6 <__aeabi_dadd+0xe6>
 8001792:	2200      	movs	r2, #0
 8001794:	2500      	movs	r5, #0
 8001796:	4c01      	ldr	r4, [pc, #4]	@ (800179c <__aeabi_dadd+0x6bc>)
 8001798:	e53a      	b.n	8001210 <__aeabi_dadd+0x130>
 800179a:	46c0      	nop			@ (mov r8, r8)
 800179c:	000007ff 	.word	0x000007ff
 80017a0:	ff7fffff 	.word	0xff7fffff
 80017a4:	000007fe 	.word	0x000007fe

080017a8 <__aeabi_dmul>:
 80017a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017aa:	4657      	mov	r7, sl
 80017ac:	46de      	mov	lr, fp
 80017ae:	464e      	mov	r6, r9
 80017b0:	4645      	mov	r5, r8
 80017b2:	b5e0      	push	{r5, r6, r7, lr}
 80017b4:	001f      	movs	r7, r3
 80017b6:	030b      	lsls	r3, r1, #12
 80017b8:	0b1b      	lsrs	r3, r3, #12
 80017ba:	0016      	movs	r6, r2
 80017bc:	469a      	mov	sl, r3
 80017be:	0fca      	lsrs	r2, r1, #31
 80017c0:	004b      	lsls	r3, r1, #1
 80017c2:	0004      	movs	r4, r0
 80017c4:	4693      	mov	fp, r2
 80017c6:	b087      	sub	sp, #28
 80017c8:	0d5b      	lsrs	r3, r3, #21
 80017ca:	d100      	bne.n	80017ce <__aeabi_dmul+0x26>
 80017cc:	e0d5      	b.n	800197a <__aeabi_dmul+0x1d2>
 80017ce:	4abb      	ldr	r2, [pc, #748]	@ (8001abc <__aeabi_dmul+0x314>)
 80017d0:	4293      	cmp	r3, r2
 80017d2:	d100      	bne.n	80017d6 <__aeabi_dmul+0x2e>
 80017d4:	e0f8      	b.n	80019c8 <__aeabi_dmul+0x220>
 80017d6:	4651      	mov	r1, sl
 80017d8:	0f42      	lsrs	r2, r0, #29
 80017da:	00c9      	lsls	r1, r1, #3
 80017dc:	430a      	orrs	r2, r1
 80017de:	2180      	movs	r1, #128	@ 0x80
 80017e0:	0409      	lsls	r1, r1, #16
 80017e2:	4311      	orrs	r1, r2
 80017e4:	00c2      	lsls	r2, r0, #3
 80017e6:	4691      	mov	r9, r2
 80017e8:	4ab5      	ldr	r2, [pc, #724]	@ (8001ac0 <__aeabi_dmul+0x318>)
 80017ea:	468a      	mov	sl, r1
 80017ec:	189d      	adds	r5, r3, r2
 80017ee:	2300      	movs	r3, #0
 80017f0:	4698      	mov	r8, r3
 80017f2:	9302      	str	r3, [sp, #8]
 80017f4:	033c      	lsls	r4, r7, #12
 80017f6:	007b      	lsls	r3, r7, #1
 80017f8:	0ffa      	lsrs	r2, r7, #31
 80017fa:	0030      	movs	r0, r6
 80017fc:	0b24      	lsrs	r4, r4, #12
 80017fe:	0d5b      	lsrs	r3, r3, #21
 8001800:	9200      	str	r2, [sp, #0]
 8001802:	d100      	bne.n	8001806 <__aeabi_dmul+0x5e>
 8001804:	e096      	b.n	8001934 <__aeabi_dmul+0x18c>
 8001806:	4aad      	ldr	r2, [pc, #692]	@ (8001abc <__aeabi_dmul+0x314>)
 8001808:	4293      	cmp	r3, r2
 800180a:	d031      	beq.n	8001870 <__aeabi_dmul+0xc8>
 800180c:	0f72      	lsrs	r2, r6, #29
 800180e:	00e4      	lsls	r4, r4, #3
 8001810:	4322      	orrs	r2, r4
 8001812:	2480      	movs	r4, #128	@ 0x80
 8001814:	0424      	lsls	r4, r4, #16
 8001816:	4314      	orrs	r4, r2
 8001818:	4aa9      	ldr	r2, [pc, #676]	@ (8001ac0 <__aeabi_dmul+0x318>)
 800181a:	00f0      	lsls	r0, r6, #3
 800181c:	4694      	mov	ip, r2
 800181e:	4463      	add	r3, ip
 8001820:	195b      	adds	r3, r3, r5
 8001822:	1c5a      	adds	r2, r3, #1
 8001824:	9201      	str	r2, [sp, #4]
 8001826:	4642      	mov	r2, r8
 8001828:	2600      	movs	r6, #0
 800182a:	2a0a      	cmp	r2, #10
 800182c:	dc42      	bgt.n	80018b4 <__aeabi_dmul+0x10c>
 800182e:	465a      	mov	r2, fp
 8001830:	9900      	ldr	r1, [sp, #0]
 8001832:	404a      	eors	r2, r1
 8001834:	4693      	mov	fp, r2
 8001836:	4642      	mov	r2, r8
 8001838:	2a02      	cmp	r2, #2
 800183a:	dc32      	bgt.n	80018a2 <__aeabi_dmul+0xfa>
 800183c:	3a01      	subs	r2, #1
 800183e:	2a01      	cmp	r2, #1
 8001840:	d900      	bls.n	8001844 <__aeabi_dmul+0x9c>
 8001842:	e149      	b.n	8001ad8 <__aeabi_dmul+0x330>
 8001844:	2e02      	cmp	r6, #2
 8001846:	d100      	bne.n	800184a <__aeabi_dmul+0xa2>
 8001848:	e0ca      	b.n	80019e0 <__aeabi_dmul+0x238>
 800184a:	2e01      	cmp	r6, #1
 800184c:	d13d      	bne.n	80018ca <__aeabi_dmul+0x122>
 800184e:	2300      	movs	r3, #0
 8001850:	2400      	movs	r4, #0
 8001852:	2200      	movs	r2, #0
 8001854:	0010      	movs	r0, r2
 8001856:	465a      	mov	r2, fp
 8001858:	051b      	lsls	r3, r3, #20
 800185a:	4323      	orrs	r3, r4
 800185c:	07d2      	lsls	r2, r2, #31
 800185e:	4313      	orrs	r3, r2
 8001860:	0019      	movs	r1, r3
 8001862:	b007      	add	sp, #28
 8001864:	bcf0      	pop	{r4, r5, r6, r7}
 8001866:	46bb      	mov	fp, r7
 8001868:	46b2      	mov	sl, r6
 800186a:	46a9      	mov	r9, r5
 800186c:	46a0      	mov	r8, r4
 800186e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001870:	4b92      	ldr	r3, [pc, #584]	@ (8001abc <__aeabi_dmul+0x314>)
 8001872:	4326      	orrs	r6, r4
 8001874:	18eb      	adds	r3, r5, r3
 8001876:	2e00      	cmp	r6, #0
 8001878:	d100      	bne.n	800187c <__aeabi_dmul+0xd4>
 800187a:	e0bb      	b.n	80019f4 <__aeabi_dmul+0x24c>
 800187c:	2203      	movs	r2, #3
 800187e:	4641      	mov	r1, r8
 8001880:	4311      	orrs	r1, r2
 8001882:	465a      	mov	r2, fp
 8001884:	4688      	mov	r8, r1
 8001886:	9900      	ldr	r1, [sp, #0]
 8001888:	404a      	eors	r2, r1
 800188a:	2180      	movs	r1, #128	@ 0x80
 800188c:	0109      	lsls	r1, r1, #4
 800188e:	468c      	mov	ip, r1
 8001890:	0029      	movs	r1, r5
 8001892:	4461      	add	r1, ip
 8001894:	9101      	str	r1, [sp, #4]
 8001896:	4641      	mov	r1, r8
 8001898:	290a      	cmp	r1, #10
 800189a:	dd00      	ble.n	800189e <__aeabi_dmul+0xf6>
 800189c:	e233      	b.n	8001d06 <__aeabi_dmul+0x55e>
 800189e:	4693      	mov	fp, r2
 80018a0:	2603      	movs	r6, #3
 80018a2:	4642      	mov	r2, r8
 80018a4:	2701      	movs	r7, #1
 80018a6:	4097      	lsls	r7, r2
 80018a8:	21a6      	movs	r1, #166	@ 0xa6
 80018aa:	003a      	movs	r2, r7
 80018ac:	00c9      	lsls	r1, r1, #3
 80018ae:	400a      	ands	r2, r1
 80018b0:	420f      	tst	r7, r1
 80018b2:	d031      	beq.n	8001918 <__aeabi_dmul+0x170>
 80018b4:	9e02      	ldr	r6, [sp, #8]
 80018b6:	2e02      	cmp	r6, #2
 80018b8:	d100      	bne.n	80018bc <__aeabi_dmul+0x114>
 80018ba:	e235      	b.n	8001d28 <__aeabi_dmul+0x580>
 80018bc:	2e03      	cmp	r6, #3
 80018be:	d100      	bne.n	80018c2 <__aeabi_dmul+0x11a>
 80018c0:	e1d2      	b.n	8001c68 <__aeabi_dmul+0x4c0>
 80018c2:	4654      	mov	r4, sl
 80018c4:	4648      	mov	r0, r9
 80018c6:	2e01      	cmp	r6, #1
 80018c8:	d0c1      	beq.n	800184e <__aeabi_dmul+0xa6>
 80018ca:	9a01      	ldr	r2, [sp, #4]
 80018cc:	4b7d      	ldr	r3, [pc, #500]	@ (8001ac4 <__aeabi_dmul+0x31c>)
 80018ce:	4694      	mov	ip, r2
 80018d0:	4463      	add	r3, ip
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	dc00      	bgt.n	80018d8 <__aeabi_dmul+0x130>
 80018d6:	e0c0      	b.n	8001a5a <__aeabi_dmul+0x2b2>
 80018d8:	0742      	lsls	r2, r0, #29
 80018da:	d009      	beq.n	80018f0 <__aeabi_dmul+0x148>
 80018dc:	220f      	movs	r2, #15
 80018de:	4002      	ands	r2, r0
 80018e0:	2a04      	cmp	r2, #4
 80018e2:	d005      	beq.n	80018f0 <__aeabi_dmul+0x148>
 80018e4:	1d02      	adds	r2, r0, #4
 80018e6:	4282      	cmp	r2, r0
 80018e8:	4180      	sbcs	r0, r0
 80018ea:	4240      	negs	r0, r0
 80018ec:	1824      	adds	r4, r4, r0
 80018ee:	0010      	movs	r0, r2
 80018f0:	01e2      	lsls	r2, r4, #7
 80018f2:	d506      	bpl.n	8001902 <__aeabi_dmul+0x15a>
 80018f4:	4b74      	ldr	r3, [pc, #464]	@ (8001ac8 <__aeabi_dmul+0x320>)
 80018f6:	9a01      	ldr	r2, [sp, #4]
 80018f8:	401c      	ands	r4, r3
 80018fa:	2380      	movs	r3, #128	@ 0x80
 80018fc:	4694      	mov	ip, r2
 80018fe:	00db      	lsls	r3, r3, #3
 8001900:	4463      	add	r3, ip
 8001902:	4a72      	ldr	r2, [pc, #456]	@ (8001acc <__aeabi_dmul+0x324>)
 8001904:	4293      	cmp	r3, r2
 8001906:	dc6b      	bgt.n	80019e0 <__aeabi_dmul+0x238>
 8001908:	0762      	lsls	r2, r4, #29
 800190a:	08c0      	lsrs	r0, r0, #3
 800190c:	0264      	lsls	r4, r4, #9
 800190e:	055b      	lsls	r3, r3, #21
 8001910:	4302      	orrs	r2, r0
 8001912:	0b24      	lsrs	r4, r4, #12
 8001914:	0d5b      	lsrs	r3, r3, #21
 8001916:	e79d      	b.n	8001854 <__aeabi_dmul+0xac>
 8001918:	2190      	movs	r1, #144	@ 0x90
 800191a:	0089      	lsls	r1, r1, #2
 800191c:	420f      	tst	r7, r1
 800191e:	d163      	bne.n	80019e8 <__aeabi_dmul+0x240>
 8001920:	2288      	movs	r2, #136	@ 0x88
 8001922:	423a      	tst	r2, r7
 8001924:	d100      	bne.n	8001928 <__aeabi_dmul+0x180>
 8001926:	e0d7      	b.n	8001ad8 <__aeabi_dmul+0x330>
 8001928:	9b00      	ldr	r3, [sp, #0]
 800192a:	46a2      	mov	sl, r4
 800192c:	469b      	mov	fp, r3
 800192e:	4681      	mov	r9, r0
 8001930:	9602      	str	r6, [sp, #8]
 8001932:	e7bf      	b.n	80018b4 <__aeabi_dmul+0x10c>
 8001934:	0023      	movs	r3, r4
 8001936:	4333      	orrs	r3, r6
 8001938:	d100      	bne.n	800193c <__aeabi_dmul+0x194>
 800193a:	e07f      	b.n	8001a3c <__aeabi_dmul+0x294>
 800193c:	2c00      	cmp	r4, #0
 800193e:	d100      	bne.n	8001942 <__aeabi_dmul+0x19a>
 8001940:	e1ad      	b.n	8001c9e <__aeabi_dmul+0x4f6>
 8001942:	0020      	movs	r0, r4
 8001944:	f000 face 	bl	8001ee4 <__clzsi2>
 8001948:	0002      	movs	r2, r0
 800194a:	0003      	movs	r3, r0
 800194c:	3a0b      	subs	r2, #11
 800194e:	201d      	movs	r0, #29
 8001950:	0019      	movs	r1, r3
 8001952:	1a82      	subs	r2, r0, r2
 8001954:	0030      	movs	r0, r6
 8001956:	3908      	subs	r1, #8
 8001958:	40d0      	lsrs	r0, r2
 800195a:	408c      	lsls	r4, r1
 800195c:	4304      	orrs	r4, r0
 800195e:	0030      	movs	r0, r6
 8001960:	4088      	lsls	r0, r1
 8001962:	4a5b      	ldr	r2, [pc, #364]	@ (8001ad0 <__aeabi_dmul+0x328>)
 8001964:	1aeb      	subs	r3, r5, r3
 8001966:	4694      	mov	ip, r2
 8001968:	4463      	add	r3, ip
 800196a:	1c5a      	adds	r2, r3, #1
 800196c:	9201      	str	r2, [sp, #4]
 800196e:	4642      	mov	r2, r8
 8001970:	2600      	movs	r6, #0
 8001972:	2a0a      	cmp	r2, #10
 8001974:	dc00      	bgt.n	8001978 <__aeabi_dmul+0x1d0>
 8001976:	e75a      	b.n	800182e <__aeabi_dmul+0x86>
 8001978:	e79c      	b.n	80018b4 <__aeabi_dmul+0x10c>
 800197a:	4653      	mov	r3, sl
 800197c:	4303      	orrs	r3, r0
 800197e:	4699      	mov	r9, r3
 8001980:	d054      	beq.n	8001a2c <__aeabi_dmul+0x284>
 8001982:	4653      	mov	r3, sl
 8001984:	2b00      	cmp	r3, #0
 8001986:	d100      	bne.n	800198a <__aeabi_dmul+0x1e2>
 8001988:	e177      	b.n	8001c7a <__aeabi_dmul+0x4d2>
 800198a:	4650      	mov	r0, sl
 800198c:	f000 faaa 	bl	8001ee4 <__clzsi2>
 8001990:	230b      	movs	r3, #11
 8001992:	425b      	negs	r3, r3
 8001994:	469c      	mov	ip, r3
 8001996:	0002      	movs	r2, r0
 8001998:	4484      	add	ip, r0
 800199a:	0011      	movs	r1, r2
 800199c:	4650      	mov	r0, sl
 800199e:	3908      	subs	r1, #8
 80019a0:	4088      	lsls	r0, r1
 80019a2:	231d      	movs	r3, #29
 80019a4:	4680      	mov	r8, r0
 80019a6:	4660      	mov	r0, ip
 80019a8:	1a1b      	subs	r3, r3, r0
 80019aa:	0020      	movs	r0, r4
 80019ac:	40d8      	lsrs	r0, r3
 80019ae:	0003      	movs	r3, r0
 80019b0:	4640      	mov	r0, r8
 80019b2:	4303      	orrs	r3, r0
 80019b4:	469a      	mov	sl, r3
 80019b6:	0023      	movs	r3, r4
 80019b8:	408b      	lsls	r3, r1
 80019ba:	4699      	mov	r9, r3
 80019bc:	2300      	movs	r3, #0
 80019be:	4d44      	ldr	r5, [pc, #272]	@ (8001ad0 <__aeabi_dmul+0x328>)
 80019c0:	4698      	mov	r8, r3
 80019c2:	1aad      	subs	r5, r5, r2
 80019c4:	9302      	str	r3, [sp, #8]
 80019c6:	e715      	b.n	80017f4 <__aeabi_dmul+0x4c>
 80019c8:	4652      	mov	r2, sl
 80019ca:	4302      	orrs	r2, r0
 80019cc:	4691      	mov	r9, r2
 80019ce:	d126      	bne.n	8001a1e <__aeabi_dmul+0x276>
 80019d0:	2200      	movs	r2, #0
 80019d2:	001d      	movs	r5, r3
 80019d4:	2302      	movs	r3, #2
 80019d6:	4692      	mov	sl, r2
 80019d8:	3208      	adds	r2, #8
 80019da:	4690      	mov	r8, r2
 80019dc:	9302      	str	r3, [sp, #8]
 80019de:	e709      	b.n	80017f4 <__aeabi_dmul+0x4c>
 80019e0:	2400      	movs	r4, #0
 80019e2:	2200      	movs	r2, #0
 80019e4:	4b35      	ldr	r3, [pc, #212]	@ (8001abc <__aeabi_dmul+0x314>)
 80019e6:	e735      	b.n	8001854 <__aeabi_dmul+0xac>
 80019e8:	2300      	movs	r3, #0
 80019ea:	2480      	movs	r4, #128	@ 0x80
 80019ec:	469b      	mov	fp, r3
 80019ee:	0324      	lsls	r4, r4, #12
 80019f0:	4b32      	ldr	r3, [pc, #200]	@ (8001abc <__aeabi_dmul+0x314>)
 80019f2:	e72f      	b.n	8001854 <__aeabi_dmul+0xac>
 80019f4:	2202      	movs	r2, #2
 80019f6:	4641      	mov	r1, r8
 80019f8:	4311      	orrs	r1, r2
 80019fa:	2280      	movs	r2, #128	@ 0x80
 80019fc:	0112      	lsls	r2, r2, #4
 80019fe:	4694      	mov	ip, r2
 8001a00:	002a      	movs	r2, r5
 8001a02:	4462      	add	r2, ip
 8001a04:	4688      	mov	r8, r1
 8001a06:	9201      	str	r2, [sp, #4]
 8001a08:	290a      	cmp	r1, #10
 8001a0a:	dd00      	ble.n	8001a0e <__aeabi_dmul+0x266>
 8001a0c:	e752      	b.n	80018b4 <__aeabi_dmul+0x10c>
 8001a0e:	465a      	mov	r2, fp
 8001a10:	2000      	movs	r0, #0
 8001a12:	9900      	ldr	r1, [sp, #0]
 8001a14:	0004      	movs	r4, r0
 8001a16:	404a      	eors	r2, r1
 8001a18:	4693      	mov	fp, r2
 8001a1a:	2602      	movs	r6, #2
 8001a1c:	e70b      	b.n	8001836 <__aeabi_dmul+0x8e>
 8001a1e:	220c      	movs	r2, #12
 8001a20:	001d      	movs	r5, r3
 8001a22:	2303      	movs	r3, #3
 8001a24:	4681      	mov	r9, r0
 8001a26:	4690      	mov	r8, r2
 8001a28:	9302      	str	r3, [sp, #8]
 8001a2a:	e6e3      	b.n	80017f4 <__aeabi_dmul+0x4c>
 8001a2c:	2300      	movs	r3, #0
 8001a2e:	469a      	mov	sl, r3
 8001a30:	3304      	adds	r3, #4
 8001a32:	4698      	mov	r8, r3
 8001a34:	3b03      	subs	r3, #3
 8001a36:	2500      	movs	r5, #0
 8001a38:	9302      	str	r3, [sp, #8]
 8001a3a:	e6db      	b.n	80017f4 <__aeabi_dmul+0x4c>
 8001a3c:	4642      	mov	r2, r8
 8001a3e:	3301      	adds	r3, #1
 8001a40:	431a      	orrs	r2, r3
 8001a42:	002b      	movs	r3, r5
 8001a44:	4690      	mov	r8, r2
 8001a46:	1c5a      	adds	r2, r3, #1
 8001a48:	9201      	str	r2, [sp, #4]
 8001a4a:	4642      	mov	r2, r8
 8001a4c:	2400      	movs	r4, #0
 8001a4e:	2000      	movs	r0, #0
 8001a50:	2601      	movs	r6, #1
 8001a52:	2a0a      	cmp	r2, #10
 8001a54:	dc00      	bgt.n	8001a58 <__aeabi_dmul+0x2b0>
 8001a56:	e6ea      	b.n	800182e <__aeabi_dmul+0x86>
 8001a58:	e72c      	b.n	80018b4 <__aeabi_dmul+0x10c>
 8001a5a:	2201      	movs	r2, #1
 8001a5c:	1ad2      	subs	r2, r2, r3
 8001a5e:	2a38      	cmp	r2, #56	@ 0x38
 8001a60:	dd00      	ble.n	8001a64 <__aeabi_dmul+0x2bc>
 8001a62:	e6f4      	b.n	800184e <__aeabi_dmul+0xa6>
 8001a64:	2a1f      	cmp	r2, #31
 8001a66:	dc00      	bgt.n	8001a6a <__aeabi_dmul+0x2c2>
 8001a68:	e12a      	b.n	8001cc0 <__aeabi_dmul+0x518>
 8001a6a:	211f      	movs	r1, #31
 8001a6c:	4249      	negs	r1, r1
 8001a6e:	1acb      	subs	r3, r1, r3
 8001a70:	0021      	movs	r1, r4
 8001a72:	40d9      	lsrs	r1, r3
 8001a74:	000b      	movs	r3, r1
 8001a76:	2a20      	cmp	r2, #32
 8001a78:	d005      	beq.n	8001a86 <__aeabi_dmul+0x2de>
 8001a7a:	4a16      	ldr	r2, [pc, #88]	@ (8001ad4 <__aeabi_dmul+0x32c>)
 8001a7c:	9d01      	ldr	r5, [sp, #4]
 8001a7e:	4694      	mov	ip, r2
 8001a80:	4465      	add	r5, ip
 8001a82:	40ac      	lsls	r4, r5
 8001a84:	4320      	orrs	r0, r4
 8001a86:	1e42      	subs	r2, r0, #1
 8001a88:	4190      	sbcs	r0, r2
 8001a8a:	4318      	orrs	r0, r3
 8001a8c:	2307      	movs	r3, #7
 8001a8e:	0019      	movs	r1, r3
 8001a90:	2400      	movs	r4, #0
 8001a92:	4001      	ands	r1, r0
 8001a94:	4203      	tst	r3, r0
 8001a96:	d00c      	beq.n	8001ab2 <__aeabi_dmul+0x30a>
 8001a98:	230f      	movs	r3, #15
 8001a9a:	4003      	ands	r3, r0
 8001a9c:	2b04      	cmp	r3, #4
 8001a9e:	d100      	bne.n	8001aa2 <__aeabi_dmul+0x2fa>
 8001aa0:	e140      	b.n	8001d24 <__aeabi_dmul+0x57c>
 8001aa2:	1d03      	adds	r3, r0, #4
 8001aa4:	4283      	cmp	r3, r0
 8001aa6:	41a4      	sbcs	r4, r4
 8001aa8:	0018      	movs	r0, r3
 8001aaa:	4264      	negs	r4, r4
 8001aac:	0761      	lsls	r1, r4, #29
 8001aae:	0264      	lsls	r4, r4, #9
 8001ab0:	0b24      	lsrs	r4, r4, #12
 8001ab2:	08c2      	lsrs	r2, r0, #3
 8001ab4:	2300      	movs	r3, #0
 8001ab6:	430a      	orrs	r2, r1
 8001ab8:	e6cc      	b.n	8001854 <__aeabi_dmul+0xac>
 8001aba:	46c0      	nop			@ (mov r8, r8)
 8001abc:	000007ff 	.word	0x000007ff
 8001ac0:	fffffc01 	.word	0xfffffc01
 8001ac4:	000003ff 	.word	0x000003ff
 8001ac8:	feffffff 	.word	0xfeffffff
 8001acc:	000007fe 	.word	0x000007fe
 8001ad0:	fffffc0d 	.word	0xfffffc0d
 8001ad4:	0000043e 	.word	0x0000043e
 8001ad8:	4649      	mov	r1, r9
 8001ada:	464a      	mov	r2, r9
 8001adc:	0409      	lsls	r1, r1, #16
 8001ade:	0c09      	lsrs	r1, r1, #16
 8001ae0:	000d      	movs	r5, r1
 8001ae2:	0c16      	lsrs	r6, r2, #16
 8001ae4:	0c02      	lsrs	r2, r0, #16
 8001ae6:	0400      	lsls	r0, r0, #16
 8001ae8:	0c00      	lsrs	r0, r0, #16
 8001aea:	4345      	muls	r5, r0
 8001aec:	46ac      	mov	ip, r5
 8001aee:	0005      	movs	r5, r0
 8001af0:	4375      	muls	r5, r6
 8001af2:	46a8      	mov	r8, r5
 8001af4:	0015      	movs	r5, r2
 8001af6:	000f      	movs	r7, r1
 8001af8:	4375      	muls	r5, r6
 8001afa:	9200      	str	r2, [sp, #0]
 8001afc:	9502      	str	r5, [sp, #8]
 8001afe:	002a      	movs	r2, r5
 8001b00:	9d00      	ldr	r5, [sp, #0]
 8001b02:	436f      	muls	r7, r5
 8001b04:	4665      	mov	r5, ip
 8001b06:	0c2d      	lsrs	r5, r5, #16
 8001b08:	46a9      	mov	r9, r5
 8001b0a:	4447      	add	r7, r8
 8001b0c:	444f      	add	r7, r9
 8001b0e:	45b8      	cmp	r8, r7
 8001b10:	d905      	bls.n	8001b1e <__aeabi_dmul+0x376>
 8001b12:	0015      	movs	r5, r2
 8001b14:	2280      	movs	r2, #128	@ 0x80
 8001b16:	0252      	lsls	r2, r2, #9
 8001b18:	4690      	mov	r8, r2
 8001b1a:	4445      	add	r5, r8
 8001b1c:	9502      	str	r5, [sp, #8]
 8001b1e:	0c3d      	lsrs	r5, r7, #16
 8001b20:	9503      	str	r5, [sp, #12]
 8001b22:	4665      	mov	r5, ip
 8001b24:	042d      	lsls	r5, r5, #16
 8001b26:	043f      	lsls	r7, r7, #16
 8001b28:	0c2d      	lsrs	r5, r5, #16
 8001b2a:	46ac      	mov	ip, r5
 8001b2c:	003d      	movs	r5, r7
 8001b2e:	4465      	add	r5, ip
 8001b30:	9504      	str	r5, [sp, #16]
 8001b32:	0c25      	lsrs	r5, r4, #16
 8001b34:	0424      	lsls	r4, r4, #16
 8001b36:	0c24      	lsrs	r4, r4, #16
 8001b38:	46ac      	mov	ip, r5
 8001b3a:	0025      	movs	r5, r4
 8001b3c:	4375      	muls	r5, r6
 8001b3e:	46a8      	mov	r8, r5
 8001b40:	4665      	mov	r5, ip
 8001b42:	000f      	movs	r7, r1
 8001b44:	4369      	muls	r1, r5
 8001b46:	4441      	add	r1, r8
 8001b48:	4689      	mov	r9, r1
 8001b4a:	4367      	muls	r7, r4
 8001b4c:	0c39      	lsrs	r1, r7, #16
 8001b4e:	4449      	add	r1, r9
 8001b50:	436e      	muls	r6, r5
 8001b52:	4588      	cmp	r8, r1
 8001b54:	d903      	bls.n	8001b5e <__aeabi_dmul+0x3b6>
 8001b56:	2280      	movs	r2, #128	@ 0x80
 8001b58:	0252      	lsls	r2, r2, #9
 8001b5a:	4690      	mov	r8, r2
 8001b5c:	4446      	add	r6, r8
 8001b5e:	0c0d      	lsrs	r5, r1, #16
 8001b60:	46a8      	mov	r8, r5
 8001b62:	0035      	movs	r5, r6
 8001b64:	4445      	add	r5, r8
 8001b66:	9505      	str	r5, [sp, #20]
 8001b68:	9d03      	ldr	r5, [sp, #12]
 8001b6a:	043f      	lsls	r7, r7, #16
 8001b6c:	46a8      	mov	r8, r5
 8001b6e:	0c3f      	lsrs	r7, r7, #16
 8001b70:	0409      	lsls	r1, r1, #16
 8001b72:	19c9      	adds	r1, r1, r7
 8001b74:	4488      	add	r8, r1
 8001b76:	4645      	mov	r5, r8
 8001b78:	9503      	str	r5, [sp, #12]
 8001b7a:	4655      	mov	r5, sl
 8001b7c:	042e      	lsls	r6, r5, #16
 8001b7e:	0c36      	lsrs	r6, r6, #16
 8001b80:	0c2f      	lsrs	r7, r5, #16
 8001b82:	0035      	movs	r5, r6
 8001b84:	4345      	muls	r5, r0
 8001b86:	4378      	muls	r0, r7
 8001b88:	4681      	mov	r9, r0
 8001b8a:	0038      	movs	r0, r7
 8001b8c:	46a8      	mov	r8, r5
 8001b8e:	0c2d      	lsrs	r5, r5, #16
 8001b90:	46aa      	mov	sl, r5
 8001b92:	9a00      	ldr	r2, [sp, #0]
 8001b94:	4350      	muls	r0, r2
 8001b96:	4372      	muls	r2, r6
 8001b98:	444a      	add	r2, r9
 8001b9a:	4452      	add	r2, sl
 8001b9c:	4591      	cmp	r9, r2
 8001b9e:	d903      	bls.n	8001ba8 <__aeabi_dmul+0x400>
 8001ba0:	2580      	movs	r5, #128	@ 0x80
 8001ba2:	026d      	lsls	r5, r5, #9
 8001ba4:	46a9      	mov	r9, r5
 8001ba6:	4448      	add	r0, r9
 8001ba8:	0c15      	lsrs	r5, r2, #16
 8001baa:	46a9      	mov	r9, r5
 8001bac:	4645      	mov	r5, r8
 8001bae:	042d      	lsls	r5, r5, #16
 8001bb0:	0c2d      	lsrs	r5, r5, #16
 8001bb2:	46a8      	mov	r8, r5
 8001bb4:	4665      	mov	r5, ip
 8001bb6:	437d      	muls	r5, r7
 8001bb8:	0412      	lsls	r2, r2, #16
 8001bba:	4448      	add	r0, r9
 8001bbc:	4490      	add	r8, r2
 8001bbe:	46a9      	mov	r9, r5
 8001bc0:	0032      	movs	r2, r6
 8001bc2:	4665      	mov	r5, ip
 8001bc4:	4362      	muls	r2, r4
 8001bc6:	436e      	muls	r6, r5
 8001bc8:	437c      	muls	r4, r7
 8001bca:	0c17      	lsrs	r7, r2, #16
 8001bcc:	1936      	adds	r6, r6, r4
 8001bce:	19bf      	adds	r7, r7, r6
 8001bd0:	42bc      	cmp	r4, r7
 8001bd2:	d903      	bls.n	8001bdc <__aeabi_dmul+0x434>
 8001bd4:	2480      	movs	r4, #128	@ 0x80
 8001bd6:	0264      	lsls	r4, r4, #9
 8001bd8:	46a4      	mov	ip, r4
 8001bda:	44e1      	add	r9, ip
 8001bdc:	9c02      	ldr	r4, [sp, #8]
 8001bde:	9e03      	ldr	r6, [sp, #12]
 8001be0:	46a4      	mov	ip, r4
 8001be2:	9d05      	ldr	r5, [sp, #20]
 8001be4:	4466      	add	r6, ip
 8001be6:	428e      	cmp	r6, r1
 8001be8:	4189      	sbcs	r1, r1
 8001bea:	46ac      	mov	ip, r5
 8001bec:	0412      	lsls	r2, r2, #16
 8001bee:	043c      	lsls	r4, r7, #16
 8001bf0:	0c12      	lsrs	r2, r2, #16
 8001bf2:	18a2      	adds	r2, r4, r2
 8001bf4:	4462      	add	r2, ip
 8001bf6:	4249      	negs	r1, r1
 8001bf8:	1854      	adds	r4, r2, r1
 8001bfa:	4446      	add	r6, r8
 8001bfc:	46a4      	mov	ip, r4
 8001bfe:	4546      	cmp	r6, r8
 8001c00:	41a4      	sbcs	r4, r4
 8001c02:	4682      	mov	sl, r0
 8001c04:	4264      	negs	r4, r4
 8001c06:	46a0      	mov	r8, r4
 8001c08:	42aa      	cmp	r2, r5
 8001c0a:	4192      	sbcs	r2, r2
 8001c0c:	458c      	cmp	ip, r1
 8001c0e:	4189      	sbcs	r1, r1
 8001c10:	44e2      	add	sl, ip
 8001c12:	44d0      	add	r8, sl
 8001c14:	4249      	negs	r1, r1
 8001c16:	4252      	negs	r2, r2
 8001c18:	430a      	orrs	r2, r1
 8001c1a:	45a0      	cmp	r8, r4
 8001c1c:	41a4      	sbcs	r4, r4
 8001c1e:	4582      	cmp	sl, r0
 8001c20:	4189      	sbcs	r1, r1
 8001c22:	4264      	negs	r4, r4
 8001c24:	4249      	negs	r1, r1
 8001c26:	430c      	orrs	r4, r1
 8001c28:	4641      	mov	r1, r8
 8001c2a:	0c3f      	lsrs	r7, r7, #16
 8001c2c:	19d2      	adds	r2, r2, r7
 8001c2e:	1912      	adds	r2, r2, r4
 8001c30:	0dcc      	lsrs	r4, r1, #23
 8001c32:	9904      	ldr	r1, [sp, #16]
 8001c34:	0270      	lsls	r0, r6, #9
 8001c36:	4308      	orrs	r0, r1
 8001c38:	1e41      	subs	r1, r0, #1
 8001c3a:	4188      	sbcs	r0, r1
 8001c3c:	4641      	mov	r1, r8
 8001c3e:	444a      	add	r2, r9
 8001c40:	0df6      	lsrs	r6, r6, #23
 8001c42:	0252      	lsls	r2, r2, #9
 8001c44:	4330      	orrs	r0, r6
 8001c46:	0249      	lsls	r1, r1, #9
 8001c48:	4314      	orrs	r4, r2
 8001c4a:	4308      	orrs	r0, r1
 8001c4c:	01d2      	lsls	r2, r2, #7
 8001c4e:	d535      	bpl.n	8001cbc <__aeabi_dmul+0x514>
 8001c50:	2201      	movs	r2, #1
 8001c52:	0843      	lsrs	r3, r0, #1
 8001c54:	4002      	ands	r2, r0
 8001c56:	4313      	orrs	r3, r2
 8001c58:	07e0      	lsls	r0, r4, #31
 8001c5a:	4318      	orrs	r0, r3
 8001c5c:	0864      	lsrs	r4, r4, #1
 8001c5e:	e634      	b.n	80018ca <__aeabi_dmul+0x122>
 8001c60:	9b00      	ldr	r3, [sp, #0]
 8001c62:	46a2      	mov	sl, r4
 8001c64:	469b      	mov	fp, r3
 8001c66:	4681      	mov	r9, r0
 8001c68:	2480      	movs	r4, #128	@ 0x80
 8001c6a:	4653      	mov	r3, sl
 8001c6c:	0324      	lsls	r4, r4, #12
 8001c6e:	431c      	orrs	r4, r3
 8001c70:	0324      	lsls	r4, r4, #12
 8001c72:	464a      	mov	r2, r9
 8001c74:	4b2e      	ldr	r3, [pc, #184]	@ (8001d30 <__aeabi_dmul+0x588>)
 8001c76:	0b24      	lsrs	r4, r4, #12
 8001c78:	e5ec      	b.n	8001854 <__aeabi_dmul+0xac>
 8001c7a:	f000 f933 	bl	8001ee4 <__clzsi2>
 8001c7e:	2315      	movs	r3, #21
 8001c80:	469c      	mov	ip, r3
 8001c82:	4484      	add	ip, r0
 8001c84:	0002      	movs	r2, r0
 8001c86:	4663      	mov	r3, ip
 8001c88:	3220      	adds	r2, #32
 8001c8a:	2b1c      	cmp	r3, #28
 8001c8c:	dc00      	bgt.n	8001c90 <__aeabi_dmul+0x4e8>
 8001c8e:	e684      	b.n	800199a <__aeabi_dmul+0x1f2>
 8001c90:	2300      	movs	r3, #0
 8001c92:	4699      	mov	r9, r3
 8001c94:	0023      	movs	r3, r4
 8001c96:	3808      	subs	r0, #8
 8001c98:	4083      	lsls	r3, r0
 8001c9a:	469a      	mov	sl, r3
 8001c9c:	e68e      	b.n	80019bc <__aeabi_dmul+0x214>
 8001c9e:	f000 f921 	bl	8001ee4 <__clzsi2>
 8001ca2:	0002      	movs	r2, r0
 8001ca4:	0003      	movs	r3, r0
 8001ca6:	3215      	adds	r2, #21
 8001ca8:	3320      	adds	r3, #32
 8001caa:	2a1c      	cmp	r2, #28
 8001cac:	dc00      	bgt.n	8001cb0 <__aeabi_dmul+0x508>
 8001cae:	e64e      	b.n	800194e <__aeabi_dmul+0x1a6>
 8001cb0:	0002      	movs	r2, r0
 8001cb2:	0034      	movs	r4, r6
 8001cb4:	3a08      	subs	r2, #8
 8001cb6:	2000      	movs	r0, #0
 8001cb8:	4094      	lsls	r4, r2
 8001cba:	e652      	b.n	8001962 <__aeabi_dmul+0x1ba>
 8001cbc:	9301      	str	r3, [sp, #4]
 8001cbe:	e604      	b.n	80018ca <__aeabi_dmul+0x122>
 8001cc0:	4b1c      	ldr	r3, [pc, #112]	@ (8001d34 <__aeabi_dmul+0x58c>)
 8001cc2:	0021      	movs	r1, r4
 8001cc4:	469c      	mov	ip, r3
 8001cc6:	0003      	movs	r3, r0
 8001cc8:	9d01      	ldr	r5, [sp, #4]
 8001cca:	40d3      	lsrs	r3, r2
 8001ccc:	4465      	add	r5, ip
 8001cce:	40a9      	lsls	r1, r5
 8001cd0:	4319      	orrs	r1, r3
 8001cd2:	0003      	movs	r3, r0
 8001cd4:	40ab      	lsls	r3, r5
 8001cd6:	1e58      	subs	r0, r3, #1
 8001cd8:	4183      	sbcs	r3, r0
 8001cda:	4319      	orrs	r1, r3
 8001cdc:	0008      	movs	r0, r1
 8001cde:	40d4      	lsrs	r4, r2
 8001ce0:	074b      	lsls	r3, r1, #29
 8001ce2:	d009      	beq.n	8001cf8 <__aeabi_dmul+0x550>
 8001ce4:	230f      	movs	r3, #15
 8001ce6:	400b      	ands	r3, r1
 8001ce8:	2b04      	cmp	r3, #4
 8001cea:	d005      	beq.n	8001cf8 <__aeabi_dmul+0x550>
 8001cec:	1d0b      	adds	r3, r1, #4
 8001cee:	428b      	cmp	r3, r1
 8001cf0:	4180      	sbcs	r0, r0
 8001cf2:	4240      	negs	r0, r0
 8001cf4:	1824      	adds	r4, r4, r0
 8001cf6:	0018      	movs	r0, r3
 8001cf8:	0223      	lsls	r3, r4, #8
 8001cfa:	d400      	bmi.n	8001cfe <__aeabi_dmul+0x556>
 8001cfc:	e6d6      	b.n	8001aac <__aeabi_dmul+0x304>
 8001cfe:	2301      	movs	r3, #1
 8001d00:	2400      	movs	r4, #0
 8001d02:	2200      	movs	r2, #0
 8001d04:	e5a6      	b.n	8001854 <__aeabi_dmul+0xac>
 8001d06:	290f      	cmp	r1, #15
 8001d08:	d1aa      	bne.n	8001c60 <__aeabi_dmul+0x4b8>
 8001d0a:	2380      	movs	r3, #128	@ 0x80
 8001d0c:	4652      	mov	r2, sl
 8001d0e:	031b      	lsls	r3, r3, #12
 8001d10:	421a      	tst	r2, r3
 8001d12:	d0a9      	beq.n	8001c68 <__aeabi_dmul+0x4c0>
 8001d14:	421c      	tst	r4, r3
 8001d16:	d1a7      	bne.n	8001c68 <__aeabi_dmul+0x4c0>
 8001d18:	431c      	orrs	r4, r3
 8001d1a:	9b00      	ldr	r3, [sp, #0]
 8001d1c:	0002      	movs	r2, r0
 8001d1e:	469b      	mov	fp, r3
 8001d20:	4b03      	ldr	r3, [pc, #12]	@ (8001d30 <__aeabi_dmul+0x588>)
 8001d22:	e597      	b.n	8001854 <__aeabi_dmul+0xac>
 8001d24:	2400      	movs	r4, #0
 8001d26:	e6c1      	b.n	8001aac <__aeabi_dmul+0x304>
 8001d28:	2400      	movs	r4, #0
 8001d2a:	4b01      	ldr	r3, [pc, #4]	@ (8001d30 <__aeabi_dmul+0x588>)
 8001d2c:	0022      	movs	r2, r4
 8001d2e:	e591      	b.n	8001854 <__aeabi_dmul+0xac>
 8001d30:	000007ff 	.word	0x000007ff
 8001d34:	0000041e 	.word	0x0000041e

08001d38 <__aeabi_i2d>:
 8001d38:	b570      	push	{r4, r5, r6, lr}
 8001d3a:	2800      	cmp	r0, #0
 8001d3c:	d016      	beq.n	8001d6c <__aeabi_i2d+0x34>
 8001d3e:	17c3      	asrs	r3, r0, #31
 8001d40:	18c5      	adds	r5, r0, r3
 8001d42:	405d      	eors	r5, r3
 8001d44:	0fc4      	lsrs	r4, r0, #31
 8001d46:	0028      	movs	r0, r5
 8001d48:	f000 f8cc 	bl	8001ee4 <__clzsi2>
 8001d4c:	4b10      	ldr	r3, [pc, #64]	@ (8001d90 <__aeabi_i2d+0x58>)
 8001d4e:	1a1b      	subs	r3, r3, r0
 8001d50:	055b      	lsls	r3, r3, #21
 8001d52:	0d5b      	lsrs	r3, r3, #21
 8001d54:	280a      	cmp	r0, #10
 8001d56:	dc14      	bgt.n	8001d82 <__aeabi_i2d+0x4a>
 8001d58:	0002      	movs	r2, r0
 8001d5a:	002e      	movs	r6, r5
 8001d5c:	3215      	adds	r2, #21
 8001d5e:	4096      	lsls	r6, r2
 8001d60:	220b      	movs	r2, #11
 8001d62:	1a12      	subs	r2, r2, r0
 8001d64:	40d5      	lsrs	r5, r2
 8001d66:	032d      	lsls	r5, r5, #12
 8001d68:	0b2d      	lsrs	r5, r5, #12
 8001d6a:	e003      	b.n	8001d74 <__aeabi_i2d+0x3c>
 8001d6c:	2400      	movs	r4, #0
 8001d6e:	2300      	movs	r3, #0
 8001d70:	2500      	movs	r5, #0
 8001d72:	2600      	movs	r6, #0
 8001d74:	051b      	lsls	r3, r3, #20
 8001d76:	432b      	orrs	r3, r5
 8001d78:	07e4      	lsls	r4, r4, #31
 8001d7a:	4323      	orrs	r3, r4
 8001d7c:	0030      	movs	r0, r6
 8001d7e:	0019      	movs	r1, r3
 8001d80:	bd70      	pop	{r4, r5, r6, pc}
 8001d82:	380b      	subs	r0, #11
 8001d84:	4085      	lsls	r5, r0
 8001d86:	032d      	lsls	r5, r5, #12
 8001d88:	2600      	movs	r6, #0
 8001d8a:	0b2d      	lsrs	r5, r5, #12
 8001d8c:	e7f2      	b.n	8001d74 <__aeabi_i2d+0x3c>
 8001d8e:	46c0      	nop			@ (mov r8, r8)
 8001d90:	0000041e 	.word	0x0000041e

08001d94 <__aeabi_ui2d>:
 8001d94:	b510      	push	{r4, lr}
 8001d96:	1e04      	subs	r4, r0, #0
 8001d98:	d010      	beq.n	8001dbc <__aeabi_ui2d+0x28>
 8001d9a:	f000 f8a3 	bl	8001ee4 <__clzsi2>
 8001d9e:	4b0e      	ldr	r3, [pc, #56]	@ (8001dd8 <__aeabi_ui2d+0x44>)
 8001da0:	1a1b      	subs	r3, r3, r0
 8001da2:	055b      	lsls	r3, r3, #21
 8001da4:	0d5b      	lsrs	r3, r3, #21
 8001da6:	280a      	cmp	r0, #10
 8001da8:	dc0f      	bgt.n	8001dca <__aeabi_ui2d+0x36>
 8001daa:	220b      	movs	r2, #11
 8001dac:	0021      	movs	r1, r4
 8001dae:	1a12      	subs	r2, r2, r0
 8001db0:	40d1      	lsrs	r1, r2
 8001db2:	3015      	adds	r0, #21
 8001db4:	030a      	lsls	r2, r1, #12
 8001db6:	4084      	lsls	r4, r0
 8001db8:	0b12      	lsrs	r2, r2, #12
 8001dba:	e001      	b.n	8001dc0 <__aeabi_ui2d+0x2c>
 8001dbc:	2300      	movs	r3, #0
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	051b      	lsls	r3, r3, #20
 8001dc2:	4313      	orrs	r3, r2
 8001dc4:	0020      	movs	r0, r4
 8001dc6:	0019      	movs	r1, r3
 8001dc8:	bd10      	pop	{r4, pc}
 8001dca:	0022      	movs	r2, r4
 8001dcc:	380b      	subs	r0, #11
 8001dce:	4082      	lsls	r2, r0
 8001dd0:	0312      	lsls	r2, r2, #12
 8001dd2:	2400      	movs	r4, #0
 8001dd4:	0b12      	lsrs	r2, r2, #12
 8001dd6:	e7f3      	b.n	8001dc0 <__aeabi_ui2d+0x2c>
 8001dd8:	0000041e 	.word	0x0000041e

08001ddc <__aeabi_d2f>:
 8001ddc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dde:	004b      	lsls	r3, r1, #1
 8001de0:	030f      	lsls	r7, r1, #12
 8001de2:	0d5b      	lsrs	r3, r3, #21
 8001de4:	4c3b      	ldr	r4, [pc, #236]	@ (8001ed4 <__aeabi_d2f+0xf8>)
 8001de6:	0f45      	lsrs	r5, r0, #29
 8001de8:	b083      	sub	sp, #12
 8001dea:	0a7f      	lsrs	r7, r7, #9
 8001dec:	1c5e      	adds	r6, r3, #1
 8001dee:	432f      	orrs	r7, r5
 8001df0:	9000      	str	r0, [sp, #0]
 8001df2:	9101      	str	r1, [sp, #4]
 8001df4:	0fca      	lsrs	r2, r1, #31
 8001df6:	00c5      	lsls	r5, r0, #3
 8001df8:	4226      	tst	r6, r4
 8001dfa:	d00b      	beq.n	8001e14 <__aeabi_d2f+0x38>
 8001dfc:	4936      	ldr	r1, [pc, #216]	@ (8001ed8 <__aeabi_d2f+0xfc>)
 8001dfe:	185c      	adds	r4, r3, r1
 8001e00:	2cfe      	cmp	r4, #254	@ 0xfe
 8001e02:	dd13      	ble.n	8001e2c <__aeabi_d2f+0x50>
 8001e04:	20ff      	movs	r0, #255	@ 0xff
 8001e06:	2300      	movs	r3, #0
 8001e08:	05c0      	lsls	r0, r0, #23
 8001e0a:	4318      	orrs	r0, r3
 8001e0c:	07d2      	lsls	r2, r2, #31
 8001e0e:	4310      	orrs	r0, r2
 8001e10:	b003      	add	sp, #12
 8001e12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e14:	2b00      	cmp	r3, #0
 8001e16:	d102      	bne.n	8001e1e <__aeabi_d2f+0x42>
 8001e18:	2000      	movs	r0, #0
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	e7f4      	b.n	8001e08 <__aeabi_d2f+0x2c>
 8001e1e:	433d      	orrs	r5, r7
 8001e20:	d0f0      	beq.n	8001e04 <__aeabi_d2f+0x28>
 8001e22:	2380      	movs	r3, #128	@ 0x80
 8001e24:	03db      	lsls	r3, r3, #15
 8001e26:	20ff      	movs	r0, #255	@ 0xff
 8001e28:	433b      	orrs	r3, r7
 8001e2a:	e7ed      	b.n	8001e08 <__aeabi_d2f+0x2c>
 8001e2c:	2c00      	cmp	r4, #0
 8001e2e:	dd14      	ble.n	8001e5a <__aeabi_d2f+0x7e>
 8001e30:	9b00      	ldr	r3, [sp, #0]
 8001e32:	00ff      	lsls	r7, r7, #3
 8001e34:	019b      	lsls	r3, r3, #6
 8001e36:	1e58      	subs	r0, r3, #1
 8001e38:	4183      	sbcs	r3, r0
 8001e3a:	0f69      	lsrs	r1, r5, #29
 8001e3c:	433b      	orrs	r3, r7
 8001e3e:	430b      	orrs	r3, r1
 8001e40:	0759      	lsls	r1, r3, #29
 8001e42:	d041      	beq.n	8001ec8 <__aeabi_d2f+0xec>
 8001e44:	210f      	movs	r1, #15
 8001e46:	4019      	ands	r1, r3
 8001e48:	2904      	cmp	r1, #4
 8001e4a:	d028      	beq.n	8001e9e <__aeabi_d2f+0xc2>
 8001e4c:	3304      	adds	r3, #4
 8001e4e:	0159      	lsls	r1, r3, #5
 8001e50:	d525      	bpl.n	8001e9e <__aeabi_d2f+0xc2>
 8001e52:	3401      	adds	r4, #1
 8001e54:	2300      	movs	r3, #0
 8001e56:	b2e0      	uxtb	r0, r4
 8001e58:	e7d6      	b.n	8001e08 <__aeabi_d2f+0x2c>
 8001e5a:	0021      	movs	r1, r4
 8001e5c:	3117      	adds	r1, #23
 8001e5e:	dbdb      	blt.n	8001e18 <__aeabi_d2f+0x3c>
 8001e60:	2180      	movs	r1, #128	@ 0x80
 8001e62:	201e      	movs	r0, #30
 8001e64:	0409      	lsls	r1, r1, #16
 8001e66:	4339      	orrs	r1, r7
 8001e68:	1b00      	subs	r0, r0, r4
 8001e6a:	281f      	cmp	r0, #31
 8001e6c:	dd1b      	ble.n	8001ea6 <__aeabi_d2f+0xca>
 8001e6e:	2602      	movs	r6, #2
 8001e70:	4276      	negs	r6, r6
 8001e72:	1b34      	subs	r4, r6, r4
 8001e74:	000e      	movs	r6, r1
 8001e76:	40e6      	lsrs	r6, r4
 8001e78:	0034      	movs	r4, r6
 8001e7a:	2820      	cmp	r0, #32
 8001e7c:	d004      	beq.n	8001e88 <__aeabi_d2f+0xac>
 8001e7e:	4817      	ldr	r0, [pc, #92]	@ (8001edc <__aeabi_d2f+0x100>)
 8001e80:	4684      	mov	ip, r0
 8001e82:	4463      	add	r3, ip
 8001e84:	4099      	lsls	r1, r3
 8001e86:	430d      	orrs	r5, r1
 8001e88:	002b      	movs	r3, r5
 8001e8a:	1e59      	subs	r1, r3, #1
 8001e8c:	418b      	sbcs	r3, r1
 8001e8e:	4323      	orrs	r3, r4
 8001e90:	0759      	lsls	r1, r3, #29
 8001e92:	d015      	beq.n	8001ec0 <__aeabi_d2f+0xe4>
 8001e94:	210f      	movs	r1, #15
 8001e96:	2400      	movs	r4, #0
 8001e98:	4019      	ands	r1, r3
 8001e9a:	2904      	cmp	r1, #4
 8001e9c:	d117      	bne.n	8001ece <__aeabi_d2f+0xf2>
 8001e9e:	019b      	lsls	r3, r3, #6
 8001ea0:	0a5b      	lsrs	r3, r3, #9
 8001ea2:	b2e0      	uxtb	r0, r4
 8001ea4:	e7b0      	b.n	8001e08 <__aeabi_d2f+0x2c>
 8001ea6:	4c0e      	ldr	r4, [pc, #56]	@ (8001ee0 <__aeabi_d2f+0x104>)
 8001ea8:	191c      	adds	r4, r3, r4
 8001eaa:	002b      	movs	r3, r5
 8001eac:	40a5      	lsls	r5, r4
 8001eae:	40c3      	lsrs	r3, r0
 8001eb0:	40a1      	lsls	r1, r4
 8001eb2:	1e68      	subs	r0, r5, #1
 8001eb4:	4185      	sbcs	r5, r0
 8001eb6:	4329      	orrs	r1, r5
 8001eb8:	430b      	orrs	r3, r1
 8001eba:	2400      	movs	r4, #0
 8001ebc:	0759      	lsls	r1, r3, #29
 8001ebe:	d1c1      	bne.n	8001e44 <__aeabi_d2f+0x68>
 8001ec0:	019b      	lsls	r3, r3, #6
 8001ec2:	2000      	movs	r0, #0
 8001ec4:	0a5b      	lsrs	r3, r3, #9
 8001ec6:	e79f      	b.n	8001e08 <__aeabi_d2f+0x2c>
 8001ec8:	08db      	lsrs	r3, r3, #3
 8001eca:	b2e0      	uxtb	r0, r4
 8001ecc:	e79c      	b.n	8001e08 <__aeabi_d2f+0x2c>
 8001ece:	3304      	adds	r3, #4
 8001ed0:	e7e5      	b.n	8001e9e <__aeabi_d2f+0xc2>
 8001ed2:	46c0      	nop			@ (mov r8, r8)
 8001ed4:	000007fe 	.word	0x000007fe
 8001ed8:	fffffc80 	.word	0xfffffc80
 8001edc:	fffffca2 	.word	0xfffffca2
 8001ee0:	fffffc82 	.word	0xfffffc82

08001ee4 <__clzsi2>:
 8001ee4:	211c      	movs	r1, #28
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	041b      	lsls	r3, r3, #16
 8001eea:	4298      	cmp	r0, r3
 8001eec:	d301      	bcc.n	8001ef2 <__clzsi2+0xe>
 8001eee:	0c00      	lsrs	r0, r0, #16
 8001ef0:	3910      	subs	r1, #16
 8001ef2:	0a1b      	lsrs	r3, r3, #8
 8001ef4:	4298      	cmp	r0, r3
 8001ef6:	d301      	bcc.n	8001efc <__clzsi2+0x18>
 8001ef8:	0a00      	lsrs	r0, r0, #8
 8001efa:	3908      	subs	r1, #8
 8001efc:	091b      	lsrs	r3, r3, #4
 8001efe:	4298      	cmp	r0, r3
 8001f00:	d301      	bcc.n	8001f06 <__clzsi2+0x22>
 8001f02:	0900      	lsrs	r0, r0, #4
 8001f04:	3904      	subs	r1, #4
 8001f06:	a202      	add	r2, pc, #8	@ (adr r2, 8001f10 <__clzsi2+0x2c>)
 8001f08:	5c10      	ldrb	r0, [r2, r0]
 8001f0a:	1840      	adds	r0, r0, r1
 8001f0c:	4770      	bx	lr
 8001f0e:	46c0      	nop			@ (mov r8, r8)
 8001f10:	02020304 	.word	0x02020304
 8001f14:	01010101 	.word	0x01010101
	...

08001f20 <LCD_Write>:
#include "string.h"
#include "stdio.h"
#include "math.h"

void LCD_Write(uint8_t data)
{
 8001f20:	b570      	push	{r4, r5, r6, lr}
	HAL_GPIO_WritePin(LCD_PORT, LCD_D4, ((data >> 0) & 0x01));
 8001f22:	2590      	movs	r5, #144	@ 0x90
 8001f24:	2601      	movs	r6, #1
 8001f26:	0002      	movs	r2, r0
{
 8001f28:	0004      	movs	r4, r0
	HAL_GPIO_WritePin(LCD_PORT, LCD_D4, ((data >> 0) & 0x01));
 8001f2a:	05ed      	lsls	r5, r5, #23
 8001f2c:	0028      	movs	r0, r5
 8001f2e:	4032      	ands	r2, r6
 8001f30:	2104      	movs	r1, #4
 8001f32:	f000 fce7 	bl	8002904 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LCD_PORT, LCD_D5, ((data >> 1) & 0x01));
 8001f36:	0862      	lsrs	r2, r4, #1
 8001f38:	0028      	movs	r0, r5
 8001f3a:	4032      	ands	r2, r6
 8001f3c:	2108      	movs	r1, #8
 8001f3e:	f000 fce1 	bl	8002904 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LCD_PORT, LCD_D6, ((data >> 2) & 0x01));
 8001f42:	08a2      	lsrs	r2, r4, #2
 8001f44:	0028      	movs	r0, r5
 8001f46:	4032      	ands	r2, r6
 8001f48:	2110      	movs	r1, #16
 8001f4a:	f000 fcdb 	bl	8002904 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LCD_PORT, LCD_D7, ((data >> 3) & 0x01));
 8001f4e:	08e2      	lsrs	r2, r4, #3
 8001f50:	0028      	movs	r0, r5
 8001f52:	4032      	ands	r2, r6
 8001f54:	2120      	movs	r1, #32
 8001f56:	f000 fcd5 	bl	8002904 <HAL_GPIO_WritePin>

// kich hoat chan enable
	HAL_GPIO_WritePin(LCD_PORT,LCD_E, 1);
 8001f5a:	0032      	movs	r2, r6
 8001f5c:	0028      	movs	r0, r5
 8001f5e:	2102      	movs	r1, #2
 8001f60:	f000 fcd0 	bl	8002904 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8001f64:	0030      	movs	r0, r6
 8001f66:	f000 fbb9 	bl	80026dc <HAL_Delay>
	HAL_GPIO_WritePin(LCD_PORT,LCD_E, 0);
 8001f6a:	0028      	movs	r0, r5
 8001f6c:	2200      	movs	r2, #0
 8001f6e:	2102      	movs	r1, #2
 8001f70:	f000 fcc8 	bl	8002904 <HAL_GPIO_WritePin>
}
 8001f74:	bd70      	pop	{r4, r5, r6, pc}

08001f76 <LCD_Send>:
void LCD_Send(uint8_t Reg, uint8_t data)
{
 8001f76:	0002      	movs	r2, r0
	HAL_GPIO_WritePin(LCD_PORT, LCD_RS, Reg);   // Reg = 0 : thanh ghi data ; Reg = 1 : thanh ghi lenh
 8001f78:	2090      	movs	r0, #144	@ 0x90
{
 8001f7a:	b510      	push	{r4, lr}
 8001f7c:	000c      	movs	r4, r1
	HAL_GPIO_WritePin(LCD_PORT, LCD_RS, Reg);   // Reg = 0 : thanh ghi data ; Reg = 1 : thanh ghi lenh
 8001f7e:	2101      	movs	r1, #1
 8001f80:	05c0      	lsls	r0, r0, #23
 8001f82:	f000 fcbf 	bl	8002904 <HAL_GPIO_WritePin>
	LCD_Write(data >> 4);
 8001f86:	0920      	lsrs	r0, r4, #4
 8001f88:	f7ff ffca 	bl	8001f20 <LCD_Write>
	LCD_Write(data);
 8001f8c:	0020      	movs	r0, r4
 8001f8e:	f7ff ffc7 	bl	8001f20 <LCD_Write>
}
 8001f92:	bd10      	pop	{r4, pc}

08001f94 <LCD_Init>:
void LCD_Init()
{
 8001f94:	b510      	push	{r4, lr}
	LCD_Send(cmd_reg, 0x33);                   // lenh de khoi tao
 8001f96:	2133      	movs	r1, #51	@ 0x33
 8001f98:	2000      	movs	r0, #0
 8001f9a:	f7ff ffec 	bl	8001f76 <LCD_Send>
	LCD_Send(cmd_reg, 0x32);                  // lenh de khoi tao
 8001f9e:	2132      	movs	r1, #50	@ 0x32
 8001fa0:	2000      	movs	r0, #0
 8001fa2:	f7ff ffe8 	bl	8001f76 <LCD_Send>
	LCD_Send(cmd_reg, 0x28);                   // che do 4 bit, 2 hang, 5x7
 8001fa6:	2128      	movs	r1, #40	@ 0x28
 8001fa8:	2000      	movs	r0, #0
 8001faa:	f7ff ffe4 	bl	8001f76 <LCD_Send>
	LCD_Send(cmd_reg, 0x0E);                   // hien thi man hinh va chop con tro
 8001fae:	210e      	movs	r1, #14
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	f7ff ffe0 	bl	8001f76 <LCD_Send>
	LCD_Send(cmd_reg, 0x06);                  // tang con tro
 8001fb6:	2106      	movs	r1, #6
 8001fb8:	2000      	movs	r0, #0
 8001fba:	f7ff ffdc 	bl	8001f76 <LCD_Send>
	LCD_Send(cmd_reg, 0x01);                   // xoa toan man hinh
 8001fbe:	2101      	movs	r1, #1
 8001fc0:	2000      	movs	r0, #0
 8001fc2:	f7ff ffd8 	bl	8001f76 <LCD_Send>
}
 8001fc6:	bd10      	pop	{r4, pc}

08001fc8 <LCD_Clear>:
void LCD_Clear()                                //xoa toan man hinh
{
 8001fc8:	b510      	push	{r4, lr}
	LCD_Send(cmd_reg, 0x01);
 8001fca:	2101      	movs	r1, #1
 8001fcc:	2000      	movs	r0, #0
 8001fce:	f7ff ffd2 	bl	8001f76 <LCD_Send>
}
 8001fd2:	bd10      	pop	{r4, pc}

08001fd4 <LCD_Location>:
void LCD_Location(uint8_t x, uint8_t y)         // chon vi tri
{
 8001fd4:	b510      	push	{r4, lr}
  if(x == 0)
 8001fd6:	2800      	cmp	r0, #0
 8001fd8:	d104      	bne.n	8001fe4 <LCD_Location+0x10>
	  LCD_Send(cmd_reg, 0x80 + y);
 8001fda:	3980      	subs	r1, #128	@ 0x80
 8001fdc:	b2c9      	uxtb	r1, r1
  else if(x == 1)
	  LCD_Send(cmd_reg, 0xC0 + y);
 8001fde:	f7ff ffca 	bl	8001f76 <LCD_Send>
}
 8001fe2:	bd10      	pop	{r4, pc}
  else if(x == 1)
 8001fe4:	2801      	cmp	r0, #1
 8001fe6:	d1fc      	bne.n	8001fe2 <LCD_Location+0xe>
	  LCD_Send(cmd_reg, 0xC0 + y);
 8001fe8:	3940      	subs	r1, #64	@ 0x40
 8001fea:	2000      	movs	r0, #0
 8001fec:	b2c9      	uxtb	r1, r1
 8001fee:	e7f6      	b.n	8001fde <LCD_Location+0xa>

08001ff0 <LCD_Write_String>:
void LCD_Write_String(char* string)              // ghi chuoi ki tu
{
 8001ff0:	b570      	push	{r4, r5, r6, lr}
 8001ff2:	0005      	movs	r5, r0
	for(uint8_t i = 0; i < strlen(string); i++)
 8001ff4:	2400      	movs	r4, #0
 8001ff6:	0028      	movs	r0, r5
 8001ff8:	f7fe f886 	bl	8000108 <strlen>
 8001ffc:	4284      	cmp	r4, r0
 8001ffe:	d300      	bcc.n	8002002 <LCD_Write_String+0x12>
	{
		LCD_Send(data_reg, string[i]);
	}
}
 8002000:	bd70      	pop	{r4, r5, r6, pc}
		LCD_Send(data_reg, string[i]);
 8002002:	5d29      	ldrb	r1, [r5, r4]
 8002004:	2001      	movs	r0, #1
	for(uint8_t i = 0; i < strlen(string); i++)
 8002006:	3401      	adds	r4, #1
		LCD_Send(data_reg, string[i]);
 8002008:	f7ff ffb5 	bl	8001f76 <LCD_Send>
	for(uint8_t i = 0; i < strlen(string); i++)
 800200c:	b2e4      	uxtb	r4, r4
 800200e:	e7f2      	b.n	8001ff6 <LCD_Write_String+0x6>

08002010 <LCD_Write_Number>:
void LCD_Write_Number(int number)                 // ghi chu so
{
 8002010:	b507      	push	{r0, r1, r2, lr}
 8002012:	0002      	movs	r2, r0
	char buffer[8];
	sprintf(buffer, "%d", number);
 8002014:	4903      	ldr	r1, [pc, #12]	@ (8002024 <LCD_Write_Number+0x14>)
 8002016:	4668      	mov	r0, sp
 8002018:	f000 ff22 	bl	8002e60 <siprintf>
	LCD_Write_String(buffer);
 800201c:	4668      	mov	r0, sp
 800201e:	f7ff ffe7 	bl	8001ff0 <LCD_Write_String>
}
 8002022:	bd07      	pop	{r0, r1, r2, pc}
 8002024:	08003830 	.word	0x08003830

08002028 <floatToStr>:
{
	char buffer[16];
	floatToStr(number,buffer,3);
	LCD_Write_String(buffer);
}
void floatToStr(float num, char *str, int8_t precision) {
 8002028:	b5f0      	push	{r4, r5, r6, r7, lr}
 800202a:	b087      	sub	sp, #28
 800202c:	9101      	str	r1, [sp, #4]
 800202e:	9204      	str	r2, [sp, #16]
 8002030:	1c04      	adds	r4, r0, #0
    int intPart = (int)num;  // L?y ph?n nguyên
 8002032:	f7fe ffe9 	bl	8001008 <__aeabi_f2iz>
 8002036:	0005      	movs	r5, r0
    float decimalPart = num - (float)intPart;  // L?y ph?n th?p phân
 8002038:	f7ff f806 	bl	8001048 <__aeabi_i2f>
 800203c:	1c01      	adds	r1, r0, #0
 800203e:	1c20      	adds	r0, r4, #0
 8002040:	f7fe fe3e 	bl	8000cc0 <__aeabi_fsub>
 8002044:	9002      	str	r0, [sp, #8]
    int i = 0;

    // X? lý ph?n nguyên
    if (intPart == 0) {
 8002046:	2d00      	cmp	r5, #0
 8002048:	d126      	bne.n	8002098 <floatToStr+0x70>
        str[i++] = '0';
 800204a:	2330      	movs	r3, #48	@ 0x30
 800204c:	2401      	movs	r4, #1
 800204e:	9a01      	ldr	r2, [sp, #4]
 8002050:	7013      	strb	r3, [r2, #0]
        }
        i += len;
    }

    // Thêm d?u ch?m th?p phân
    str[i++] = '.';
 8002052:	1c63      	adds	r3, r4, #1
 8002054:	9303      	str	r3, [sp, #12]
 8002056:	9b01      	ldr	r3, [sp, #4]

    // Tính luy th?a c?a 10 th? công d? thay cho pow(10, precision)
    int factor = 1;
 8002058:	2001      	movs	r0, #1
    str[i++] = '.';
 800205a:	191c      	adds	r4, r3, r4
 800205c:	232e      	movs	r3, #46	@ 0x2e
    for (int j = 0; j < precision; j++) {
        factor *= 10;
 800205e:	220a      	movs	r2, #10
    str[i++] = '.';
 8002060:	7023      	strb	r3, [r4, #0]
    for (int j = 0; j < precision; j++) {
 8002062:	2300      	movs	r3, #0
 8002064:	9904      	ldr	r1, [sp, #16]
 8002066:	4299      	cmp	r1, r3
 8002068:	dc45      	bgt.n	80020f6 <floatToStr+0xce>
    }

    // X? lý ph?n th?p phân
    int decPartInt = (int)(decimalPart * factor);  // Chuy?n ph?n th?p phân thành s? nguyên v?i d? chính xác
 800206a:	f7fe ffed 	bl	8001048 <__aeabi_i2f>
 800206e:	9902      	ldr	r1, [sp, #8]
 8002070:	f7fe fce8 	bl	8000a44 <__aeabi_fmul>
 8002074:	f7fe ffc8 	bl	8001008 <__aeabi_f2iz>

    // Chuy?n ph?n th?p phân thành chu?i
    for (int j = precision - 1; j >= 0; j--) {
        str[i + j] = (decPartInt % 10) + '0';
 8002078:	270a      	movs	r7, #10
    int decPartInt = (int)(decimalPart * factor);  // Chuy?n ph?n th?p phân thành s? nguyên v?i d? chính xác
 800207a:	0005      	movs	r5, r0
    for (int j = precision - 1; j >= 0; j--) {
 800207c:	9b04      	ldr	r3, [sp, #16]
        str[i + j] = (decPartInt % 10) + '0';
 800207e:	3401      	adds	r4, #1
    for (int j = precision - 1; j >= 0; j--) {
 8002080:	1e5e      	subs	r6, r3, #1
 8002082:	2e00      	cmp	r6, #0
 8002084:	da3a      	bge.n	80020fc <floatToStr+0xd4>
        decPartInt /= 10;
    }

    // K?t thúc chu?i
    i += precision;
    str[i] = '\0';
 8002086:	9a04      	ldr	r2, [sp, #16]
 8002088:	9b01      	ldr	r3, [sp, #4]
 800208a:	4694      	mov	ip, r2
 800208c:	2200      	movs	r2, #0
 800208e:	9903      	ldr	r1, [sp, #12]
 8002090:	4463      	add	r3, ip
 8002092:	545a      	strb	r2, [r3, r1]
}
 8002094:	b007      	add	sp, #28
 8002096:	bdf0      	pop	{r4, r5, r6, r7, pc}
    int i = 0;
 8002098:	2700      	movs	r7, #0
        if (intPart < 0) {
 800209a:	42bd      	cmp	r5, r7
 800209c:	da0a      	bge.n	80020b4 <floatToStr+0x8c>
            str[i++] = '-';
 800209e:	232d      	movs	r3, #45	@ 0x2d
 80020a0:	9a01      	ldr	r2, [sp, #4]
            intPart = -intPart;
 80020a2:	426d      	negs	r5, r5
            str[i++] = '-';
 80020a4:	7013      	strb	r3, [r2, #0]
            decimalPart = -decimalPart;  // C?p nh?t ph?n th?p phân theo d?u
 80020a6:	2280      	movs	r2, #128	@ 0x80
 80020a8:	0612      	lsls	r2, r2, #24
 80020aa:	4694      	mov	ip, r2
 80020ac:	9b02      	ldr	r3, [sp, #8]
            str[i++] = '-';
 80020ae:	3701      	adds	r7, #1
            decimalPart = -decimalPart;  // C?p nh?t ph?n th?p phân theo d?u
 80020b0:	4463      	add	r3, ip
 80020b2:	9302      	str	r3, [sp, #8]
        int tempInt = intPart;
 80020b4:	0028      	movs	r0, r5
        int len = 0;
 80020b6:	2400      	movs	r4, #0
            tempInt /= 10;
 80020b8:	260a      	movs	r6, #10
 80020ba:	0031      	movs	r1, r6
 80020bc:	9403      	str	r4, [sp, #12]
            len++;
 80020be:	3401      	adds	r4, #1
            tempInt /= 10;
 80020c0:	f7fe f8c8 	bl	8000254 <__divsi3>
        while (tempInt > 0) {
 80020c4:	2800      	cmp	r0, #0
 80020c6:	d1f8      	bne.n	80020ba <floatToStr+0x92>
            str[j + i] = (intPart % 10) + '0';
 80020c8:	260a      	movs	r6, #10
 80020ca:	9b01      	ldr	r3, [sp, #4]
 80020cc:	19db      	adds	r3, r3, r7
 80020ce:	9305      	str	r3, [sp, #20]
 80020d0:	0028      	movs	r0, r5
 80020d2:	0031      	movs	r1, r6
 80020d4:	f7fe f9a4 	bl	8000420 <__aeabi_idivmod>
 80020d8:	9b05      	ldr	r3, [sp, #20]
 80020da:	9a03      	ldr	r2, [sp, #12]
 80020dc:	3130      	adds	r1, #48	@ 0x30
 80020de:	5499      	strb	r1, [r3, r2]
            intPart /= 10;
 80020e0:	0028      	movs	r0, r5
 80020e2:	0031      	movs	r1, r6
 80020e4:	f7fe f8b6 	bl	8000254 <__divsi3>
        for (int j = len - 1; j >= 0; j--) {
 80020e8:	9b03      	ldr	r3, [sp, #12]
            intPart /= 10;
 80020ea:	0005      	movs	r5, r0
        for (int j = len - 1; j >= 0; j--) {
 80020ec:	1e5a      	subs	r2, r3, #1
 80020ee:	9203      	str	r2, [sp, #12]
 80020f0:	d2ee      	bcs.n	80020d0 <floatToStr+0xa8>
        i += len;
 80020f2:	193c      	adds	r4, r7, r4
 80020f4:	e7ad      	b.n	8002052 <floatToStr+0x2a>
        factor *= 10;
 80020f6:	4350      	muls	r0, r2
    for (int j = 0; j < precision; j++) {
 80020f8:	3301      	adds	r3, #1
 80020fa:	e7b3      	b.n	8002064 <floatToStr+0x3c>
        str[i + j] = (decPartInt % 10) + '0';
 80020fc:	0028      	movs	r0, r5
 80020fe:	0039      	movs	r1, r7
 8002100:	f7fe f98e 	bl	8000420 <__aeabi_idivmod>
 8002104:	3130      	adds	r1, #48	@ 0x30
 8002106:	55a1      	strb	r1, [r4, r6]
        decPartInt /= 10;
 8002108:	0028      	movs	r0, r5
 800210a:	0039      	movs	r1, r7
 800210c:	f7fe f8a2 	bl	8000254 <__divsi3>
    for (int j = precision - 1; j >= 0; j--) {
 8002110:	3e01      	subs	r6, #1
        decPartInt /= 10;
 8002112:	0005      	movs	r5, r0
    for (int j = precision - 1; j >= 0; j--) {
 8002114:	e7b5      	b.n	8002082 <floatToStr+0x5a>

08002116 <LCD_Write_Float>:
{
 8002116:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	floatToStr(number,buffer,3);
 8002118:	2203      	movs	r2, #3
 800211a:	4669      	mov	r1, sp
 800211c:	f7ff ff84 	bl	8002028 <floatToStr>
	LCD_Write_String(buffer);
 8002120:	4668      	mov	r0, sp
 8002122:	f7ff ff65 	bl	8001ff0 <LCD_Write_String>
}
 8002126:	b005      	add	sp, #20
 8002128:	bd00      	pop	{pc}

0800212a <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800212a:	b570      	push	{r4, r5, r6, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800212c:	2610      	movs	r6, #16
{
 800212e:	b090      	sub	sp, #64	@ 0x40
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002130:	222c      	movs	r2, #44	@ 0x2c
 8002132:	2100      	movs	r1, #0
 8002134:	a805      	add	r0, sp, #20
 8002136:	f000 feb3 	bl	8002ea0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800213a:	0032      	movs	r2, r6
 800213c:	2100      	movs	r1, #0
 800213e:	4668      	mov	r0, sp
 8002140:	f000 feae 	bl	8002ea0 <memset>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 8002144:	23c0      	movs	r3, #192	@ 0xc0
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002146:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002148:	2501      	movs	r5, #1
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 800214a:	035b      	lsls	r3, r3, #13
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800214c:	a804      	add	r0, sp, #16
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800214e:	9404      	str	r4, [sp, #16]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002150:	9507      	str	r5, [sp, #28]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002152:	9608      	str	r6, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002154:	940c      	str	r4, [sp, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 8002156:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002158:	f000 fbda 	bl	8002910 <HAL_RCC_OscConfig>
 800215c:	2800      	cmp	r0, #0
 800215e:	d001      	beq.n	8002164 <SystemClock_Config+0x3a>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002160:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002162:	e7fe      	b.n	8002162 <SystemClock_Config+0x38>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002164:	2307      	movs	r3, #7
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002166:	9002      	str	r0, [sp, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002168:	9003      	str	r0, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800216a:	0029      	movs	r1, r5
 800216c:	4668      	mov	r0, sp
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800216e:	9300      	str	r3, [sp, #0]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002170:	9401      	str	r4, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8002172:	f000 fdf1 	bl	8002d58 <HAL_RCC_ClockConfig>
 8002176:	2800      	cmp	r0, #0
 8002178:	d001      	beq.n	800217e <SystemClock_Config+0x54>
 800217a:	b672      	cpsid	i
  while (1)
 800217c:	e7fe      	b.n	800217c <SystemClock_Config+0x52>
}
 800217e:	b010      	add	sp, #64	@ 0x40
 8002180:	bd70      	pop	{r4, r5, r6, pc}
	...

08002184 <selectRow>:
{
 8002184:	b510      	push	{r4, lr}
	switch (row){
 8002186:	2807      	cmp	r0, #7
 8002188:	d816      	bhi.n	80021b8 <selectRow+0x34>
 800218a:	f7fd ffc5 	bl	8000118 <__gnu_thumb1_case_uqi>
 800218e:	1604      	.short	0x1604
 8002190:	36342c24 	.word	0x36342c24
 8002194:	3a38      	.short	0x3a38
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, RESET);
 8002196:	2200      	movs	r2, #0
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 8002198:	2090      	movs	r0, #144	@ 0x90
 800219a:	2140      	movs	r1, #64	@ 0x40
 800219c:	05c0      	lsls	r0, r0, #23
 800219e:	f000 fbb1 	bl	8002904 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, RESET);
 80021a2:	2200      	movs	r2, #0
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, SET);
 80021a4:	2090      	movs	r0, #144	@ 0x90
 80021a6:	2180      	movs	r1, #128	@ 0x80
 80021a8:	05c0      	lsls	r0, r0, #23
 80021aa:	f000 fbab 	bl	8002904 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, RESET);
 80021ae:	2200      	movs	r2, #0
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, SET);
 80021b0:	2102      	movs	r1, #2
 80021b2:	4815      	ldr	r0, [pc, #84]	@ (8002208 <selectRow+0x84>)
 80021b4:	f000 fba6 	bl	8002904 <HAL_GPIO_WritePin>
};
 80021b8:	bd10      	pop	{r4, pc}
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, RESET);
 80021ba:	2200      	movs	r2, #0
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 80021bc:	2090      	movs	r0, #144	@ 0x90
 80021be:	2140      	movs	r1, #64	@ 0x40
 80021c0:	05c0      	lsls	r0, r0, #23
 80021c2:	f000 fb9f 	bl	8002904 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, RESET);
 80021c6:	2200      	movs	r2, #0
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, SET);
 80021c8:	2090      	movs	r0, #144	@ 0x90
 80021ca:	2180      	movs	r1, #128	@ 0x80
 80021cc:	05c0      	lsls	r0, r0, #23
 80021ce:	f000 fb99 	bl	8002904 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, SET);
 80021d2:	2201      	movs	r2, #1
 80021d4:	e7ec      	b.n	80021b0 <selectRow+0x2c>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, RESET);
 80021d6:	2200      	movs	r2, #0
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 80021d8:	2090      	movs	r0, #144	@ 0x90
 80021da:	2140      	movs	r1, #64	@ 0x40
 80021dc:	05c0      	lsls	r0, r0, #23
 80021de:	f000 fb91 	bl	8002904 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, SET);
 80021e2:	2201      	movs	r2, #1
 80021e4:	e7de      	b.n	80021a4 <selectRow+0x20>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, RESET);
 80021e6:	2200      	movs	r2, #0
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 80021e8:	2090      	movs	r0, #144	@ 0x90
 80021ea:	2140      	movs	r1, #64	@ 0x40
 80021ec:	05c0      	lsls	r0, r0, #23
 80021ee:	f000 fb89 	bl	8002904 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, SET);
 80021f2:	2201      	movs	r2, #1
 80021f4:	e7e8      	b.n	80021c8 <selectRow+0x44>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 80021f6:	2201      	movs	r2, #1
 80021f8:	e7ce      	b.n	8002198 <selectRow+0x14>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 80021fa:	2201      	movs	r2, #1
 80021fc:	e7de      	b.n	80021bc <selectRow+0x38>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 80021fe:	2201      	movs	r2, #1
 8002200:	e7ea      	b.n	80021d8 <selectRow+0x54>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, SET);
 8002202:	2201      	movs	r2, #1
 8002204:	e7f0      	b.n	80021e8 <selectRow+0x64>
 8002206:	46c0      	nop			@ (mov r8, r8)
 8002208:	48000400 	.word	0x48000400

0800220c <Keypad_Getkey>:
{
 800220c:	b570      	push	{r4, r5, r6, lr}
			if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)
 800220e:	2580      	movs	r5, #128	@ 0x80
 8002210:	2490      	movs	r4, #144	@ 0x90
	for (row=0 ; row<8 ; row ++)
 8002212:	2000      	movs	r0, #0
			if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)
 8002214:	00ed      	lsls	r5, r5, #3
 8002216:	05e4      	lsls	r4, r4, #23
	for (row=0 ; row<8 ; row ++)
 8002218:	4e1c      	ldr	r6, [pc, #112]	@ (800228c <Keypad_Getkey+0x80>)
 800221a:	7030      	strb	r0, [r6, #0]
 800221c:	2807      	cmp	r0, #7
 800221e:	d901      	bls.n	8002224 <Keypad_Getkey+0x18>
	return 0;
 8002220:	2000      	movs	r0, #0
 8002222:	e017      	b.n	8002254 <Keypad_Getkey+0x48>
		selectRow(row);
 8002224:	f7ff ffae 	bl	8002184 <selectRow>
		HAL_Delay(2);
 8002228:	2002      	movs	r0, #2
 800222a:	f000 fa57 	bl	80026dc <HAL_Delay>
			if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)
 800222e:	0029      	movs	r1, r5
 8002230:	0020      	movs	r0, r4
 8002232:	f000 fb61 	bl	80028f8 <HAL_GPIO_ReadPin>
 8002236:	2800      	cmp	r0, #0
 8002238:	d10d      	bne.n	8002256 <Keypad_Getkey+0x4a>
				HAL_Delay(50);
 800223a:	3032      	adds	r0, #50	@ 0x32
 800223c:	f000 fa4e 	bl	80026dc <HAL_Delay>
				if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)
 8002240:	0029      	movs	r1, r5
 8002242:	0020      	movs	r0, r4
 8002244:	f000 fb58 	bl	80028f8 <HAL_GPIO_ReadPin>
 8002248:	2800      	cmp	r0, #0
 800224a:	d11b      	bne.n	8002284 <Keypad_Getkey+0x78>
				return key_code[row][0];
 800224c:	7832      	ldrb	r2, [r6, #0]
 800224e:	4b10      	ldr	r3, [pc, #64]	@ (8002290 <Keypad_Getkey+0x84>)
 8002250:	0052      	lsls	r2, r2, #1
 8002252:	5cd0      	ldrb	r0, [r2, r3]
}
 8002254:	bd70      	pop	{r4, r5, r6, pc}
			else if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == 0)
 8002256:	2180      	movs	r1, #128	@ 0x80
 8002258:	0020      	movs	r0, r4
 800225a:	0089      	lsls	r1, r1, #2
 800225c:	f000 fb4c 	bl	80028f8 <HAL_GPIO_ReadPin>
 8002260:	2800      	cmp	r0, #0
 8002262:	d10f      	bne.n	8002284 <Keypad_Getkey+0x78>
				HAL_Delay(50);
 8002264:	3032      	adds	r0, #50	@ 0x32
 8002266:	f000 fa39 	bl	80026dc <HAL_Delay>
				if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == 0)
 800226a:	2180      	movs	r1, #128	@ 0x80
 800226c:	0020      	movs	r0, r4
 800226e:	0089      	lsls	r1, r1, #2
 8002270:	f000 fb42 	bl	80028f8 <HAL_GPIO_ReadPin>
 8002274:	2800      	cmp	r0, #0
 8002276:	d105      	bne.n	8002284 <Keypad_Getkey+0x78>
				return key_code[row][1];
 8002278:	7832      	ldrb	r2, [r6, #0]
 800227a:	4b05      	ldr	r3, [pc, #20]	@ (8002290 <Keypad_Getkey+0x84>)
 800227c:	0052      	lsls	r2, r2, #1
 800227e:	189b      	adds	r3, r3, r2
 8002280:	7858      	ldrb	r0, [r3, #1]
 8002282:	e7e7      	b.n	8002254 <Keypad_Getkey+0x48>
	for (row=0 ; row<8 ; row ++)
 8002284:	7830      	ldrb	r0, [r6, #0]
 8002286:	3001      	adds	r0, #1
 8002288:	b2c0      	uxtb	r0, r0
 800228a:	e7c5      	b.n	8002218 <Keypad_Getkey+0xc>
 800228c:	2000007c 	.word	0x2000007c
 8002290:	0800384b 	.word	0x0800384b

08002294 <Press>:
	if ((key==1) || (key==2) || (key==3) || (key==4) || (key==5) || (key==6) || (key==7) || (key==8) || (key==9) || (key==ko))
 8002294:	1e43      	subs	r3, r0, #1
{
 8002296:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	if ((key==1) || (key==2) || (key==3) || (key==4) || (key==5) || (key==6) || (key==7) || (key==8) || (key==9) || (key==ko))
 8002298:	2b08      	cmp	r3, #8
 800229a:	d902      	bls.n	80022a2 <Press+0xe>
 800229c:	2810      	cmp	r0, #16
 800229e:	d103      	bne.n	80022a8 <Press+0x14>
			key=0;
 80022a0:	2000      	movs	r0, #0
			LCD_Write_Number(key);
 80022a2:	f7ff feb5 	bl	8002010 <LCD_Write_Number>
}
 80022a6:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
	if ((key==cong))
 80022a8:	280b      	cmp	r0, #11
 80022aa:	d108      	bne.n	80022be <Press+0x2a>
		LCD_Write_String("+");
 80022ac:	4843      	ldr	r0, [pc, #268]	@ (80023bc <Press+0x128>)
 80022ae:	f7ff fe9f 	bl	8001ff0 <LCD_Write_String>
		equaltion[pos] = 1;
 80022b2:	2101      	movs	r1, #1
 80022b4:	4a42      	ldr	r2, [pc, #264]	@ (80023c0 <Press+0x12c>)
 80022b6:	4b43      	ldr	r3, [pc, #268]	@ (80023c4 <Press+0x130>)
 80022b8:	7812      	ldrb	r2, [r2, #0]
		equaltion[pos] = 2;
 80022ba:	5499      	strb	r1, [r3, r2]
	if (key==DEL)
 80022bc:	e7f3      	b.n	80022a6 <Press+0x12>
	else if ((key==tru))
 80022be:	280c      	cmp	r0, #12
 80022c0:	d107      	bne.n	80022d2 <Press+0x3e>
		LCD_Write_String("-");
 80022c2:	4841      	ldr	r0, [pc, #260]	@ (80023c8 <Press+0x134>)
 80022c4:	f7ff fe94 	bl	8001ff0 <LCD_Write_String>
		equaltion[pos] = 2;
 80022c8:	4a3d      	ldr	r2, [pc, #244]	@ (80023c0 <Press+0x12c>)
 80022ca:	2102      	movs	r1, #2
 80022cc:	4b3d      	ldr	r3, [pc, #244]	@ (80023c4 <Press+0x130>)
 80022ce:	7812      	ldrb	r2, [r2, #0]
 80022d0:	e7f3      	b.n	80022ba <Press+0x26>
	else if ((key==nhan))
 80022d2:	280d      	cmp	r0, #13
 80022d4:	d107      	bne.n	80022e6 <Press+0x52>
		LCD_Write_String("x");
 80022d6:	483d      	ldr	r0, [pc, #244]	@ (80023cc <Press+0x138>)
 80022d8:	f7ff fe8a 	bl	8001ff0 <LCD_Write_String>
		equaltion[pos] = 3;
 80022dc:	4a38      	ldr	r2, [pc, #224]	@ (80023c0 <Press+0x12c>)
 80022de:	2103      	movs	r1, #3
 80022e0:	4b38      	ldr	r3, [pc, #224]	@ (80023c4 <Press+0x130>)
 80022e2:	7812      	ldrb	r2, [r2, #0]
 80022e4:	e7e9      	b.n	80022ba <Press+0x26>
	else if ((key==chia))
 80022e6:	280e      	cmp	r0, #14
 80022e8:	d107      	bne.n	80022fa <Press+0x66>
		LCD_Write_String(":");
 80022ea:	4839      	ldr	r0, [pc, #228]	@ (80023d0 <Press+0x13c>)
 80022ec:	f7ff fe80 	bl	8001ff0 <LCD_Write_String>
		equaltion[pos] = 4;
 80022f0:	4a33      	ldr	r2, [pc, #204]	@ (80023c0 <Press+0x12c>)
 80022f2:	2104      	movs	r1, #4
 80022f4:	4b33      	ldr	r3, [pc, #204]	@ (80023c4 <Press+0x130>)
 80022f6:	7812      	ldrb	r2, [r2, #0]
 80022f8:	e7df      	b.n	80022ba <Press+0x26>
	if (key==bang)
 80022fa:	280f      	cmp	r0, #15
 80022fc:	d153      	bne.n	80023a6 <Press+0x112>
		num[pos] = num1;
 80022fe:	4b35      	ldr	r3, [pc, #212]	@ (80023d4 <Press+0x140>)
		for(uint8_t i = 0; i < 9; i++)
 8002300:	2600      	movs	r6, #0
		num[pos] = num1;
 8002302:	9300      	str	r3, [sp, #0]
 8002304:	4b2e      	ldr	r3, [pc, #184]	@ (80023c0 <Press+0x12c>)
 8002306:	781c      	ldrb	r4, [r3, #0]
 8002308:	4b33      	ldr	r3, [pc, #204]	@ (80023d8 <Press+0x144>)
 800230a:	00a4      	lsls	r4, r4, #2
 800230c:	6818      	ldr	r0, [r3, #0]
 800230e:	6859      	ldr	r1, [r3, #4]
 8002310:	f7fe f8ba 	bl	8000488 <__aeabi_l2f>
 8002314:	9b00      	ldr	r3, [sp, #0]
 8002316:	4f31      	ldr	r7, [pc, #196]	@ (80023dc <Press+0x148>)
 8002318:	5118      	str	r0, [r3, r4]
		for(uint8_t i = 0; i < 9; i++)
 800231a:	001d      	movs	r5, r3
		num[pos] = num1;
 800231c:	001c      	movs	r4, r3
				else equaltion[i] = 1;
 800231e:	4b29      	ldr	r3, [pc, #164]	@ (80023c4 <Press+0x130>)
 8002320:	9301      	str	r3, [sp, #4]
			if (equaltion[i] == 3)
 8002322:	787b      	ldrb	r3, [r7, #1]
 8002324:	2b03      	cmp	r3, #3
 8002326:	d121      	bne.n	800236c <Press+0xd8>
				num[i+1] = num[i] * num[i+1];
 8002328:	6821      	ldr	r1, [r4, #0]
 800232a:	6860      	ldr	r0, [r4, #4]
 800232c:	f7fe fb8a 	bl	8000a44 <__aeabi_fmul>
				num[i] = 0;
 8002330:	2300      	movs	r3, #0
				num[i+1] = num[i] / num[i+1];
 8002332:	6060      	str	r0, [r4, #4]
				num[i] = 0;
 8002334:	6023      	str	r3, [r4, #0]
				if (i>0)
 8002336:	2e00      	cmp	r6, #0
 8002338:	d002      	beq.n	8002340 <Press+0xac>
					equaltion[i] = equaltion[i-1];
 800233a:	783b      	ldrb	r3, [r7, #0]
 800233c:	707b      	strb	r3, [r7, #1]
 800233e:	e002      	b.n	8002346 <Press+0xb2>
				else equaltion[i] = 1;
 8002340:	2201      	movs	r2, #1
 8002342:	9b01      	ldr	r3, [sp, #4]
 8002344:	701a      	strb	r2, [r3, #0]
		for(uint8_t i = 0; i < 9; i++)
 8002346:	3601      	adds	r6, #1
 8002348:	b2f6      	uxtb	r6, r6
 800234a:	3404      	adds	r4, #4
 800234c:	3701      	adds	r7, #1
 800234e:	2e09      	cmp	r6, #9
 8002350:	d1e7      	bne.n	8002322 <Press+0x8e>
 8002352:	2400      	movs	r4, #0
			if (equaltion[i] == 1)
 8002354:	4e1b      	ldr	r6, [pc, #108]	@ (80023c4 <Press+0x130>)
 8002356:	5d31      	ldrb	r1, [r6, r4]
 8002358:	2901      	cmp	r1, #1
 800235a:	d10e      	bne.n	800237a <Press+0xe6>
				num[i+1] = num[i] + num[i+1];
 800235c:	6829      	ldr	r1, [r5, #0]
 800235e:	6868      	ldr	r0, [r5, #4]
 8002360:	f7fe f8c6 	bl	80004f0 <__aeabi_fadd>
				num[i+1] = num[i] - num[i+1];
 8002364:	6068      	str	r0, [r5, #4]
		for(uint8_t i = 0; i < 10; i++)
 8002366:	3401      	adds	r4, #1
 8002368:	3504      	adds	r5, #4
 800236a:	e7f4      	b.n	8002356 <Press+0xc2>
			else if (equaltion[i] == 4)
 800236c:	2b04      	cmp	r3, #4
 800236e:	d1ea      	bne.n	8002346 <Press+0xb2>
				num[i+1] = num[i] / num[i+1];
 8002370:	6861      	ldr	r1, [r4, #4]
 8002372:	6820      	ldr	r0, [r4, #0]
 8002374:	f7fe fa46 	bl	8000804 <__aeabi_fdiv>
 8002378:	e7da      	b.n	8002330 <Press+0x9c>
			else if (equaltion[i] == 2)
 800237a:	2902      	cmp	r1, #2
 800237c:	d104      	bne.n	8002388 <Press+0xf4>
				num[i+1] = num[i] - num[i+1];
 800237e:	6869      	ldr	r1, [r5, #4]
 8002380:	6828      	ldr	r0, [r5, #0]
 8002382:	f7fe fc9d 	bl	8000cc0 <__aeabi_fsub>
 8002386:	e7ed      	b.n	8002364 <Press+0xd0>
			else if (equaltion[i] == 0) {
 8002388:	2900      	cmp	r1, #0
 800238a:	d1ec      	bne.n	8002366 <Press+0xd2>
				kq = num[i];
 800238c:	4b14      	ldr	r3, [pc, #80]	@ (80023e0 <Press+0x14c>)
 800238e:	9a00      	ldr	r2, [sp, #0]
 8002390:	00a4      	lsls	r4, r4, #2
 8002392:	5912      	ldr	r2, [r2, r4]
 8002394:	001c      	movs	r4, r3
		LCD_Location(1, 0);
 8002396:	2001      	movs	r0, #1
				kq = num[i];
 8002398:	601a      	str	r2, [r3, #0]
		LCD_Location(1, 0);
 800239a:	f7ff fe1b 	bl	8001fd4 <LCD_Location>
		LCD_Write_Float(kq);
 800239e:	6820      	ldr	r0, [r4, #0]
 80023a0:	f7ff feb9 	bl	8002116 <LCD_Write_Float>
	if (key==DEL)
 80023a4:	e77f      	b.n	80022a6 <Press+0x12>
 80023a6:	280a      	cmp	r0, #10
 80023a8:	d000      	beq.n	80023ac <Press+0x118>
 80023aa:	e77c      	b.n	80022a6 <Press+0x12>
		LCD_Clear();
 80023ac:	f7ff fe0c 	bl	8001fc8 <LCD_Clear>
		LCD_Location(0, 0);
 80023b0:	2100      	movs	r1, #0
 80023b2:	0008      	movs	r0, r1
 80023b4:	f7ff fe0e 	bl	8001fd4 <LCD_Location>
}
 80023b8:	e775      	b.n	80022a6 <Press+0x12>
 80023ba:	46c0      	nop			@ (mov r8, r8)
 80023bc:	08003833 	.word	0x08003833
 80023c0:	2000008e 	.word	0x2000008e
 80023c4:	2000008f 	.word	0x2000008f
 80023c8:	08003835 	.word	0x08003835
 80023cc:	08003837 	.word	0x08003837
 80023d0:	08003839 	.word	0x08003839
 80023d4:	20000098 	.word	0x20000098
 80023d8:	20000080 	.word	0x20000080
 80023dc:	2000008e 	.word	0x2000008e
 80023e0:	20000088 	.word	0x20000088

080023e4 <Release>:
{
 80023e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	  if ((key==1) || (key==2) || (key==3) || (key==4) || (key==5) || (key==6) || (key==7) || (key==8) || (key==9) || (key==ko))
 80023e6:	1e43      	subs	r3, r0, #1
{
 80023e8:	0005      	movs	r5, r0
	  if ((key==1) || (key==2) || (key==3) || (key==4) || (key==5) || (key==6) || (key==7) || (key==8) || (key==9) || (key==ko))
 80023ea:	2b08      	cmp	r3, #8
 80023ec:	d902      	bls.n	80023f4 <Release+0x10>
 80023ee:	2810      	cmp	r0, #16
 80023f0:	d10e      	bne.n	8002410 <Release+0x2c>
			  key=0;
 80023f2:	2500      	movs	r5, #0
	 	  num1 = num1*10 + key;
 80023f4:	4c1b      	ldr	r4, [pc, #108]	@ (8002464 <Release+0x80>)
 80023f6:	220a      	movs	r2, #10
 80023f8:	6820      	ldr	r0, [r4, #0]
 80023fa:	6861      	ldr	r1, [r4, #4]
 80023fc:	2300      	movs	r3, #0
 80023fe:	f7fe f815 	bl	800042c <__aeabi_lmul>
 8002402:	002a      	movs	r2, r5
 8002404:	2300      	movs	r3, #0
 8002406:	1880      	adds	r0, r0, r2
 8002408:	4159      	adcs	r1, r3
 800240a:	6020      	str	r0, [r4, #0]
 800240c:	6061      	str	r1, [r4, #4]
}
 800240e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	  if ((key==cong) || (key==tru) || (key==nhan) || (key==chia))
 8002410:	0003      	movs	r3, r0
 8002412:	3b0b      	subs	r3, #11
 8002414:	2b03      	cmp	r3, #3
 8002416:	d810      	bhi.n	800243a <Release+0x56>
		  num[pos] = num1;
 8002418:	4d12      	ldr	r5, [pc, #72]	@ (8002464 <Release+0x80>)
 800241a:	4e13      	ldr	r6, [pc, #76]	@ (8002468 <Release+0x84>)
 800241c:	6828      	ldr	r0, [r5, #0]
 800241e:	6869      	ldr	r1, [r5, #4]
 8002420:	f7fe f832 	bl	8000488 <__aeabi_l2f>
 8002424:	7834      	ldrb	r4, [r6, #0]
 8002426:	4f11      	ldr	r7, [pc, #68]	@ (800246c <Release+0x88>)
 8002428:	00a3      	lsls	r3, r4, #2
		  num1 = 0; //reset num1
 800242a:	2200      	movs	r2, #0
		  num[pos] = num1;
 800242c:	50f8      	str	r0, [r7, r3]
		  num1 = 0; //reset num1
 800242e:	2300      	movs	r3, #0
		  pos++;
 8002430:	3401      	adds	r4, #1
		  num1 = 0; //reset num1
 8002432:	602a      	str	r2, [r5, #0]
 8002434:	606b      	str	r3, [r5, #4]
		  pos++;
 8002436:	7034      	strb	r4, [r6, #0]
	  if (key==DEL)
 8002438:	e7e9      	b.n	800240e <Release+0x2a>
 800243a:	280a      	cmp	r0, #10
 800243c:	d1e7      	bne.n	800240e <Release+0x2a>
		  num1=0;
 800243e:	2000      	movs	r0, #0
 8002440:	2100      	movs	r1, #0
		  pos=0;
 8002442:	2400      	movs	r4, #0
		  num1=0;
 8002444:	4b07      	ldr	r3, [pc, #28]	@ (8002464 <Release+0x80>)
		      equaltion[i] = 0;
 8002446:	2209      	movs	r2, #9
		  num1=0;
 8002448:	6018      	str	r0, [r3, #0]
 800244a:	6059      	str	r1, [r3, #4]
		  pos=0;
 800244c:	4b06      	ldr	r3, [pc, #24]	@ (8002468 <Release+0x84>)
		      equaltion[i] = 0;
 800244e:	0021      	movs	r1, r4
 8002450:	4807      	ldr	r0, [pc, #28]	@ (8002470 <Release+0x8c>)
		  pos=0;
 8002452:	701c      	strb	r4, [r3, #0]
		      equaltion[i] = 0;
 8002454:	f000 fd24 	bl	8002ea0 <memset>
		      num[i] = 0;
 8002458:	2228      	movs	r2, #40	@ 0x28
 800245a:	0021      	movs	r1, r4
 800245c:	4803      	ldr	r0, [pc, #12]	@ (800246c <Release+0x88>)
 800245e:	f000 fd1f 	bl	8002ea0 <memset>
}
 8002462:	e7d4      	b.n	800240e <Release+0x2a>
 8002464:	20000080 	.word	0x20000080
 8002468:	2000008e 	.word	0x2000008e
 800246c:	20000098 	.word	0x20000098
 8002470:	2000008f 	.word	0x2000008f

08002474 <Keypad_handle>:
{
 8002474:	b570      	push	{r4, r5, r6, lr}
	if ( key_current != key_last )
 8002476:	4d08      	ldr	r5, [pc, #32]	@ (8002498 <Keypad_handle+0x24>)
 8002478:	4c08      	ldr	r4, [pc, #32]	@ (800249c <Keypad_handle+0x28>)
 800247a:	782b      	ldrb	r3, [r5, #0]
 800247c:	7820      	ldrb	r0, [r4, #0]
 800247e:	4283      	cmp	r3, r0
 8002480:	d006      	beq.n	8002490 <Keypad_handle+0x1c>
		if ( key_current !=0 ) Press(key_current);
 8002482:	2b00      	cmp	r3, #0
 8002484:	d005      	beq.n	8002492 <Keypad_handle+0x1e>
 8002486:	0018      	movs	r0, r3
 8002488:	f7ff ff04 	bl	8002294 <Press>
		key_last = key_current;
 800248c:	782b      	ldrb	r3, [r5, #0]
 800248e:	7023      	strb	r3, [r4, #0]
}
 8002490:	bd70      	pop	{r4, r5, r6, pc}
		else Release (key_last);
 8002492:	f7ff ffa7 	bl	80023e4 <Release>
 8002496:	e7f9      	b.n	800248c <Keypad_handle+0x18>
 8002498:	2000008d 	.word	0x2000008d
 800249c:	2000008c 	.word	0x2000008c

080024a0 <main>:
{
 80024a0:	b530      	push	{r4, r5, lr}
 80024a2:	b089      	sub	sp, #36	@ 0x24
  HAL_Init();
 80024a4:	f000 f8f8 	bl	8002698 <HAL_Init>
  SystemClock_Config();
 80024a8:	f7ff fe3f 	bl	800212a <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ac:	2214      	movs	r2, #20
 80024ae:	2100      	movs	r1, #0
 80024b0:	a803      	add	r0, sp, #12
 80024b2:	f000 fcf5 	bl	8002ea0 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80024b6:	2180      	movs	r1, #128	@ 0x80
 80024b8:	4b2b      	ldr	r3, [pc, #172]	@ (8002568 <main+0xc8>)
 80024ba:	03c9      	lsls	r1, r1, #15
 80024bc:	695a      	ldr	r2, [r3, #20]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80024be:	2090      	movs	r0, #144	@ 0x90
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80024c0:	430a      	orrs	r2, r1
 80024c2:	615a      	str	r2, [r3, #20]
 80024c4:	695a      	ldr	r2, [r3, #20]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80024c6:	05c0      	lsls	r0, r0, #23
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80024c8:	400a      	ands	r2, r1
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80024ca:	2180      	movs	r1, #128	@ 0x80
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80024cc:	9200      	str	r2, [sp, #0]
 80024ce:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80024d0:	695a      	ldr	r2, [r3, #20]
 80024d2:	0289      	lsls	r1, r1, #10
 80024d4:	430a      	orrs	r2, r1
 80024d6:	615a      	str	r2, [r3, #20]
 80024d8:	695a      	ldr	r2, [r3, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024da:	2400      	movs	r4, #0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80024dc:	400a      	ands	r2, r1
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80024de:	2180      	movs	r1, #128	@ 0x80
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80024e0:	9201      	str	r2, [sp, #4]
 80024e2:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80024e4:	695a      	ldr	r2, [r3, #20]
 80024e6:	02c9      	lsls	r1, r1, #11
 80024e8:	430a      	orrs	r2, r1
 80024ea:	615a      	str	r2, [r3, #20]
 80024ec:	695b      	ldr	r3, [r3, #20]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80024ee:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80024f0:	400b      	ands	r3, r1
 80024f2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80024f4:	21ff      	movs	r1, #255	@ 0xff
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80024f6:	9b02      	ldr	r3, [sp, #8]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80024f8:	f000 fa04 	bl	8002904 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 80024fc:	2200      	movs	r2, #0
 80024fe:	2102      	movs	r1, #2
 8002500:	481a      	ldr	r0, [pc, #104]	@ (800256c <main+0xcc>)
 8002502:	f000 f9ff 	bl	8002904 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002506:	2090      	movs	r0, #144	@ 0x90
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002508:	23ff      	movs	r3, #255	@ 0xff
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800250a:	2501      	movs	r5, #1
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800250c:	a903      	add	r1, sp, #12
 800250e:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002510:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002512:	9504      	str	r5, [sp, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002514:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002516:	9406      	str	r4, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002518:	f000 f936 	bl	8002788 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 800251c:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800251e:	4813      	ldr	r0, [pc, #76]	@ (800256c <main+0xcc>)
 8002520:	a903      	add	r1, sp, #12
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002522:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002524:	9504      	str	r5, [sp, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002526:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002528:	9406      	str	r4, [sp, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800252a:	f000 f92d 	bl	8002788 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800252e:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002530:	2090      	movs	r0, #144	@ 0x90
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002532:	00db      	lsls	r3, r3, #3
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002534:	a903      	add	r1, sp, #12
 8002536:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002538:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800253a:	9404      	str	r4, [sp, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800253c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800253e:	f000 f923 	bl	8002788 <HAL_GPIO_Init>
  LCD_Init();
 8002542:	f7ff fd27 	bl	8001f94 <LCD_Init>
  LCD_Write_String("BTL ESD Nhom 18");
 8002546:	480a      	ldr	r0, [pc, #40]	@ (8002570 <main+0xd0>)
 8002548:	f7ff fd52 	bl	8001ff0 <LCD_Write_String>
  HAL_Delay(2000);
 800254c:	20fa      	movs	r0, #250	@ 0xfa
 800254e:	00c0      	lsls	r0, r0, #3
 8002550:	f000 f8c4 	bl	80026dc <HAL_Delay>
  LCD_Clear();
 8002554:	f7ff fd38 	bl	8001fc8 <LCD_Clear>
	  key_current = Keypad_Getkey();
 8002558:	f7ff fe58 	bl	800220c <Keypad_Getkey>
 800255c:	4b05      	ldr	r3, [pc, #20]	@ (8002574 <main+0xd4>)
 800255e:	7018      	strb	r0, [r3, #0]
	  Keypad_handle();
 8002560:	f7ff ff88 	bl	8002474 <Keypad_handle>
  while (1)
 8002564:	e7f8      	b.n	8002558 <main+0xb8>
 8002566:	46c0      	nop			@ (mov r8, r8)
 8002568:	40021000 	.word	0x40021000
 800256c:	48000400 	.word	0x48000400
 8002570:	0800383b 	.word	0x0800383b
 8002574:	2000008d 	.word	0x2000008d

08002578 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002578:	2101      	movs	r1, #1
 800257a:	4b0a      	ldr	r3, [pc, #40]	@ (80025a4 <HAL_MspInit+0x2c>)
{
 800257c:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800257e:	699a      	ldr	r2, [r3, #24]
 8002580:	430a      	orrs	r2, r1
 8002582:	619a      	str	r2, [r3, #24]
 8002584:	699a      	ldr	r2, [r3, #24]
 8002586:	400a      	ands	r2, r1
  __HAL_RCC_PWR_CLK_ENABLE();
 8002588:	2180      	movs	r1, #128	@ 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800258a:	9200      	str	r2, [sp, #0]
 800258c:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800258e:	69da      	ldr	r2, [r3, #28]
 8002590:	0549      	lsls	r1, r1, #21
 8002592:	430a      	orrs	r2, r1
 8002594:	61da      	str	r2, [r3, #28]
 8002596:	69db      	ldr	r3, [r3, #28]
 8002598:	400b      	ands	r3, r1
 800259a:	9301      	str	r3, [sp, #4]
 800259c:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800259e:	b002      	add	sp, #8
 80025a0:	4770      	bx	lr
 80025a2:	46c0      	nop			@ (mov r8, r8)
 80025a4:	40021000 	.word	0x40021000

080025a8 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80025a8:	e7fe      	b.n	80025a8 <NMI_Handler>

080025aa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80025aa:	e7fe      	b.n	80025aa <HardFault_Handler>

080025ac <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80025ac:	4770      	bx	lr

080025ae <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 80025ae:	4770      	bx	lr

080025b0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80025b0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80025b2:	f000 f881 	bl	80026b8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80025b6:	bd10      	pop	{r4, pc}

080025b8 <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80025b8:	490b      	ldr	r1, [pc, #44]	@ (80025e8 <_sbrk+0x30>)
 80025ba:	4a0c      	ldr	r2, [pc, #48]	@ (80025ec <_sbrk+0x34>)
{
 80025bc:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80025be:	1a52      	subs	r2, r2, r1
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80025c0:	490b      	ldr	r1, [pc, #44]	@ (80025f0 <_sbrk+0x38>)
{
 80025c2:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80025c4:	6808      	ldr	r0, [r1, #0]
 80025c6:	2800      	cmp	r0, #0
 80025c8:	d101      	bne.n	80025ce <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 80025ca:	480a      	ldr	r0, [pc, #40]	@ (80025f4 <_sbrk+0x3c>)
 80025cc:	6008      	str	r0, [r1, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80025ce:	6808      	ldr	r0, [r1, #0]
 80025d0:	18c3      	adds	r3, r0, r3
 80025d2:	4293      	cmp	r3, r2
 80025d4:	d906      	bls.n	80025e4 <_sbrk+0x2c>
  {
    errno = ENOMEM;
 80025d6:	f000 fc6b 	bl	8002eb0 <__errno>
 80025da:	230c      	movs	r3, #12
 80025dc:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80025de:	2001      	movs	r0, #1
 80025e0:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80025e2:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80025e4:	600b      	str	r3, [r1, #0]
  return (void *)prev_heap_end;
 80025e6:	e7fc      	b.n	80025e2 <_sbrk+0x2a>
 80025e8:	00000400 	.word	0x00000400
 80025ec:	20001000 	.word	0x20001000
 80025f0:	200000c0 	.word	0x200000c0
 80025f4:	20000210 	.word	0x20000210

080025f8 <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80025f8:	4770      	bx	lr
	...

080025fc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80025fc:	480d      	ldr	r0, [pc, #52]	@ (8002634 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80025fe:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002600:	f7ff fffa 	bl	80025f8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002604:	480c      	ldr	r0, [pc, #48]	@ (8002638 <LoopForever+0x6>)
  ldr r1, =_edata
 8002606:	490d      	ldr	r1, [pc, #52]	@ (800263c <LoopForever+0xa>)
  ldr r2, =_sidata
 8002608:	4a0d      	ldr	r2, [pc, #52]	@ (8002640 <LoopForever+0xe>)
  movs r3, #0
 800260a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800260c:	e002      	b.n	8002614 <LoopCopyDataInit>

0800260e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800260e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002610:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002612:	3304      	adds	r3, #4

08002614 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002614:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002616:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002618:	d3f9      	bcc.n	800260e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800261a:	4a0a      	ldr	r2, [pc, #40]	@ (8002644 <LoopForever+0x12>)
  ldr r4, =_ebss
 800261c:	4c0a      	ldr	r4, [pc, #40]	@ (8002648 <LoopForever+0x16>)
  movs r3, #0
 800261e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002620:	e001      	b.n	8002626 <LoopFillZerobss>

08002622 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002622:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002624:	3204      	adds	r2, #4

08002626 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002626:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002628:	d3fb      	bcc.n	8002622 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800262a:	f000 fc47 	bl	8002ebc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800262e:	f7ff ff37 	bl	80024a0 <main>

08002632 <LoopForever>:

LoopForever:
    b LoopForever
 8002632:	e7fe      	b.n	8002632 <LoopForever>
  ldr   r0, =_estack
 8002634:	20001000 	.word	0x20001000
  ldr r0, =_sdata
 8002638:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800263c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8002640:	080038c8 	.word	0x080038c8
  ldr r2, =_sbss
 8002644:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8002648:	20000210 	.word	0x20000210

0800264c <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800264c:	e7fe      	b.n	800264c <ADC1_IRQHandler>
	...

08002650 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002650:	b570      	push	{r4, r5, r6, lr}
 8002652:	0005      	movs	r5, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002654:	20fa      	movs	r0, #250	@ 0xfa
 8002656:	4b0d      	ldr	r3, [pc, #52]	@ (800268c <HAL_InitTick+0x3c>)
 8002658:	0080      	lsls	r0, r0, #2
 800265a:	7819      	ldrb	r1, [r3, #0]
 800265c:	f7fd fd70 	bl	8000140 <__udivsi3>
 8002660:	4c0b      	ldr	r4, [pc, #44]	@ (8002690 <HAL_InitTick+0x40>)
 8002662:	0001      	movs	r1, r0
 8002664:	6820      	ldr	r0, [r4, #0]
 8002666:	f7fd fd6b 	bl	8000140 <__udivsi3>
 800266a:	f000 f873 	bl	8002754 <HAL_SYSTICK_Config>
 800266e:	0004      	movs	r4, r0
  {
    return HAL_ERROR;
 8002670:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002672:	2c00      	cmp	r4, #0
 8002674:	d109      	bne.n	800268a <HAL_InitTick+0x3a>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002676:	2d03      	cmp	r5, #3
 8002678:	d807      	bhi.n	800268a <HAL_InitTick+0x3a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800267a:	3802      	subs	r0, #2
 800267c:	0022      	movs	r2, r4
 800267e:	0029      	movs	r1, r5
 8002680:	f000 f83e 	bl	8002700 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002684:	0020      	movs	r0, r4
 8002686:	4b03      	ldr	r3, [pc, #12]	@ (8002694 <HAL_InitTick+0x44>)
 8002688:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
}
 800268a:	bd70      	pop	{r4, r5, r6, pc}
 800268c:	20000004 	.word	0x20000004
 8002690:	20000000 	.word	0x20000000
 8002694:	20000008 	.word	0x20000008

08002698 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002698:	2310      	movs	r3, #16
 800269a:	4a06      	ldr	r2, [pc, #24]	@ (80026b4 <HAL_Init+0x1c>)
{
 800269c:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800269e:	6811      	ldr	r1, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 80026a0:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80026a2:	430b      	orrs	r3, r1
 80026a4:	6013      	str	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 80026a6:	f7ff ffd3 	bl	8002650 <HAL_InitTick>
  HAL_MspInit();
 80026aa:	f7ff ff65 	bl	8002578 <HAL_MspInit>
}
 80026ae:	2000      	movs	r0, #0
 80026b0:	bd10      	pop	{r4, pc}
 80026b2:	46c0      	nop			@ (mov r8, r8)
 80026b4:	40022000 	.word	0x40022000

080026b8 <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80026b8:	4a03      	ldr	r2, [pc, #12]	@ (80026c8 <HAL_IncTick+0x10>)
 80026ba:	4b04      	ldr	r3, [pc, #16]	@ (80026cc <HAL_IncTick+0x14>)
 80026bc:	6811      	ldr	r1, [r2, #0]
 80026be:	781b      	ldrb	r3, [r3, #0]
 80026c0:	185b      	adds	r3, r3, r1
 80026c2:	6013      	str	r3, [r2, #0]
}
 80026c4:	4770      	bx	lr
 80026c6:	46c0      	nop			@ (mov r8, r8)
 80026c8:	200000c4 	.word	0x200000c4
 80026cc:	20000004 	.word	0x20000004

080026d0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80026d0:	4b01      	ldr	r3, [pc, #4]	@ (80026d8 <HAL_GetTick+0x8>)
 80026d2:	6818      	ldr	r0, [r3, #0]
}
 80026d4:	4770      	bx	lr
 80026d6:	46c0      	nop			@ (mov r8, r8)
 80026d8:	200000c4 	.word	0x200000c4

080026dc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80026dc:	b570      	push	{r4, r5, r6, lr}
 80026de:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80026e0:	f7ff fff6 	bl	80026d0 <HAL_GetTick>
 80026e4:	0005      	movs	r5, r0
  uint32_t wait = Delay;
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80026e6:	1c63      	adds	r3, r4, #1
 80026e8:	d002      	beq.n	80026f0 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80026ea:	4b04      	ldr	r3, [pc, #16]	@ (80026fc <HAL_Delay+0x20>)
 80026ec:	781b      	ldrb	r3, [r3, #0]
 80026ee:	18e4      	adds	r4, r4, r3
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 80026f0:	f7ff ffee 	bl	80026d0 <HAL_GetTick>
 80026f4:	1b40      	subs	r0, r0, r5
 80026f6:	42a0      	cmp	r0, r4
 80026f8:	d3fa      	bcc.n	80026f0 <HAL_Delay+0x14>
  {
  }
}
 80026fa:	bd70      	pop	{r4, r5, r6, pc}
 80026fc:	20000004 	.word	0x20000004

08002700 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002700:	b510      	push	{r4, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002702:	24ff      	movs	r4, #255	@ 0xff
 8002704:	2203      	movs	r2, #3
 8002706:	000b      	movs	r3, r1
 8002708:	0021      	movs	r1, r4
 800270a:	4002      	ands	r2, r0
 800270c:	00d2      	lsls	r2, r2, #3
 800270e:	4091      	lsls	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002710:	019b      	lsls	r3, r3, #6
 8002712:	4023      	ands	r3, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002714:	43c9      	mvns	r1, r1
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002716:	4093      	lsls	r3, r2
  if ((int32_t)(IRQn) >= 0)
 8002718:	2800      	cmp	r0, #0
 800271a:	db0a      	blt.n	8002732 <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800271c:	24c0      	movs	r4, #192	@ 0xc0
 800271e:	4a0b      	ldr	r2, [pc, #44]	@ (800274c <HAL_NVIC_SetPriority+0x4c>)
 8002720:	0880      	lsrs	r0, r0, #2
 8002722:	0080      	lsls	r0, r0, #2
 8002724:	1880      	adds	r0, r0, r2
 8002726:	00a4      	lsls	r4, r4, #2
 8002728:	5902      	ldr	r2, [r0, r4]
 800272a:	400a      	ands	r2, r1
 800272c:	4313      	orrs	r3, r2
 800272e:	5103      	str	r3, [r0, r4]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
}
 8002730:	bd10      	pop	{r4, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002732:	220f      	movs	r2, #15
 8002734:	4010      	ands	r0, r2
 8002736:	3808      	subs	r0, #8
 8002738:	4a05      	ldr	r2, [pc, #20]	@ (8002750 <HAL_NVIC_SetPriority+0x50>)
 800273a:	0880      	lsrs	r0, r0, #2
 800273c:	0080      	lsls	r0, r0, #2
 800273e:	1880      	adds	r0, r0, r2
 8002740:	69c2      	ldr	r2, [r0, #28]
 8002742:	4011      	ands	r1, r2
 8002744:	4319      	orrs	r1, r3
 8002746:	61c1      	str	r1, [r0, #28]
 8002748:	e7f2      	b.n	8002730 <HAL_NVIC_SetPriority+0x30>
 800274a:	46c0      	nop			@ (mov r8, r8)
 800274c:	e000e100 	.word	0xe000e100
 8002750:	e000ed00 	.word	0xe000ed00

08002754 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002754:	2280      	movs	r2, #128	@ 0x80
 8002756:	1e43      	subs	r3, r0, #1
 8002758:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 800275a:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800275c:	4293      	cmp	r3, r2
 800275e:	d20d      	bcs.n	800277c <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002760:	21c0      	movs	r1, #192	@ 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002762:	4a07      	ldr	r2, [pc, #28]	@ (8002780 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002764:	4807      	ldr	r0, [pc, #28]	@ (8002784 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002766:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002768:	6a03      	ldr	r3, [r0, #32]
 800276a:	0609      	lsls	r1, r1, #24
 800276c:	021b      	lsls	r3, r3, #8
 800276e:	0a1b      	lsrs	r3, r3, #8
 8002770:	430b      	orrs	r3, r1
 8002772:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002774:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002776:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002778:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800277a:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 800277c:	4770      	bx	lr
 800277e:	46c0      	nop			@ (mov r8, r8)
 8002780:	e000e010 	.word	0xe000e010
 8002784:	e000ed00 	.word	0xe000ed00

08002788 <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 8002788:	2300      	movs	r3, #0
{
 800278a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800278c:	b087      	sub	sp, #28
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800278e:	680a      	ldr	r2, [r1, #0]
 8002790:	0014      	movs	r4, r2
 8002792:	40dc      	lsrs	r4, r3
 8002794:	d101      	bne.n	800279a <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  } 
}
 8002796:	b007      	add	sp, #28
 8002798:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 800279a:	2501      	movs	r5, #1
 800279c:	0014      	movs	r4, r2
 800279e:	409d      	lsls	r5, r3
 80027a0:	402c      	ands	r4, r5
 80027a2:	9400      	str	r4, [sp, #0]
    if (iocurrent != 0x00u)
 80027a4:	422a      	tst	r2, r5
 80027a6:	d100      	bne.n	80027aa <HAL_GPIO_Init+0x22>
 80027a8:	e098      	b.n	80028dc <HAL_GPIO_Init+0x154>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80027aa:	684a      	ldr	r2, [r1, #4]
 80027ac:	005f      	lsls	r7, r3, #1
 80027ae:	4694      	mov	ip, r2
 80027b0:	2203      	movs	r2, #3
 80027b2:	4664      	mov	r4, ip
 80027b4:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 80027b6:	2403      	movs	r4, #3
 80027b8:	40bc      	lsls	r4, r7
 80027ba:	43e4      	mvns	r4, r4
 80027bc:	9401      	str	r4, [sp, #4]
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80027be:	1e54      	subs	r4, r2, #1
 80027c0:	2c01      	cmp	r4, #1
 80027c2:	d82e      	bhi.n	8002822 <HAL_GPIO_Init+0x9a>
        temp = GPIOx->OSPEEDR;
 80027c4:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 80027c6:	9c01      	ldr	r4, [sp, #4]
 80027c8:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 80027ca:	68cc      	ldr	r4, [r1, #12]
 80027cc:	40bc      	lsls	r4, r7
 80027ce:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 80027d0:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 80027d2:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80027d4:	2601      	movs	r6, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80027d6:	43ac      	bics	r4, r5
 80027d8:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80027da:	4664      	mov	r4, ip
 80027dc:	0924      	lsrs	r4, r4, #4
 80027de:	4034      	ands	r4, r6
 80027e0:	409c      	lsls	r4, r3
 80027e2:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 80027e4:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 80027e6:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 80027e8:	9c01      	ldr	r4, [sp, #4]
 80027ea:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 80027ec:	688c      	ldr	r4, [r1, #8]
 80027ee:	40bc      	lsls	r4, r7
 80027f0:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 80027f2:	60c4      	str	r4, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80027f4:	2a02      	cmp	r2, #2
 80027f6:	d116      	bne.n	8002826 <HAL_GPIO_Init+0x9e>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80027f8:	2507      	movs	r5, #7
 80027fa:	260f      	movs	r6, #15
 80027fc:	401d      	ands	r5, r3
 80027fe:	00ad      	lsls	r5, r5, #2
 8002800:	40ae      	lsls	r6, r5
        temp = GPIOx->AFR[position >> 3u];
 8002802:	08dc      	lsrs	r4, r3, #3
 8002804:	00a4      	lsls	r4, r4, #2
 8002806:	1904      	adds	r4, r0, r4
 8002808:	9402      	str	r4, [sp, #8]
 800280a:	6a24      	ldr	r4, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 800280c:	9603      	str	r6, [sp, #12]
 800280e:	0026      	movs	r6, r4
 8002810:	9c03      	ldr	r4, [sp, #12]
 8002812:	43a6      	bics	r6, r4
 8002814:	0034      	movs	r4, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8002816:	690e      	ldr	r6, [r1, #16]
 8002818:	40ae      	lsls	r6, r5
 800281a:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3u] = temp;
 800281c:	9c02      	ldr	r4, [sp, #8]
 800281e:	6226      	str	r6, [r4, #32]
 8002820:	e001      	b.n	8002826 <HAL_GPIO_Init+0x9e>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002822:	2a03      	cmp	r2, #3
 8002824:	d1df      	bne.n	80027e6 <HAL_GPIO_Init+0x5e>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8002826:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
 8002828:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 800282a:	9d01      	ldr	r5, [sp, #4]
 800282c:	4025      	ands	r5, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800282e:	432a      	orrs	r2, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8002830:	24c0      	movs	r4, #192	@ 0xc0
      GPIOx->MODER = temp;
 8002832:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8002834:	4662      	mov	r2, ip
 8002836:	02a4      	lsls	r4, r4, #10
 8002838:	4222      	tst	r2, r4
 800283a:	d04f      	beq.n	80028dc <HAL_GPIO_Init+0x154>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800283c:	2501      	movs	r5, #1
 800283e:	4a28      	ldr	r2, [pc, #160]	@ (80028e0 <HAL_GPIO_Init+0x158>)
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002840:	2790      	movs	r7, #144	@ 0x90
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002842:	6994      	ldr	r4, [r2, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002844:	05ff      	lsls	r7, r7, #23
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002846:	432c      	orrs	r4, r5
 8002848:	6194      	str	r4, [r2, #24]
 800284a:	6992      	ldr	r2, [r2, #24]
        temp = SYSCFG->EXTICR[position >> 2u];
 800284c:	089c      	lsrs	r4, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800284e:	402a      	ands	r2, r5
 8002850:	9205      	str	r2, [sp, #20]
 8002852:	9a05      	ldr	r2, [sp, #20]
        temp = SYSCFG->EXTICR[position >> 2u];
 8002854:	4a23      	ldr	r2, [pc, #140]	@ (80028e4 <HAL_GPIO_Init+0x15c>)
 8002856:	00a4      	lsls	r4, r4, #2
 8002858:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 800285a:	220f      	movs	r2, #15
 800285c:	3502      	adds	r5, #2
 800285e:	401d      	ands	r5, r3
 8002860:	00ad      	lsls	r5, r5, #2
 8002862:	40aa      	lsls	r2, r5
        temp = SYSCFG->EXTICR[position >> 2u];
 8002864:	68a6      	ldr	r6, [r4, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8002866:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002868:	2200      	movs	r2, #0
 800286a:	42b8      	cmp	r0, r7
 800286c:	d00c      	beq.n	8002888 <HAL_GPIO_Init+0x100>
 800286e:	4f1e      	ldr	r7, [pc, #120]	@ (80028e8 <HAL_GPIO_Init+0x160>)
 8002870:	3201      	adds	r2, #1
 8002872:	42b8      	cmp	r0, r7
 8002874:	d008      	beq.n	8002888 <HAL_GPIO_Init+0x100>
 8002876:	4f1d      	ldr	r7, [pc, #116]	@ (80028ec <HAL_GPIO_Init+0x164>)
 8002878:	3201      	adds	r2, #1
 800287a:	42b8      	cmp	r0, r7
 800287c:	d004      	beq.n	8002888 <HAL_GPIO_Init+0x100>
 800287e:	4f1c      	ldr	r7, [pc, #112]	@ (80028f0 <HAL_GPIO_Init+0x168>)
 8002880:	3203      	adds	r2, #3
 8002882:	42b8      	cmp	r0, r7
 8002884:	d100      	bne.n	8002888 <HAL_GPIO_Init+0x100>
 8002886:	3a02      	subs	r2, #2
 8002888:	40aa      	lsls	r2, r5
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 800288a:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 800288c:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2u] = temp;
 800288e:	60a2      	str	r2, [r4, #8]
        temp = EXTI->RTSR;
 8002890:	4a18      	ldr	r2, [pc, #96]	@ (80028f4 <HAL_GPIO_Init+0x16c>)
        temp &= ~(iocurrent);
 8002892:	9c00      	ldr	r4, [sp, #0]
        temp = EXTI->RTSR;
 8002894:	6896      	ldr	r6, [r2, #8]
          temp |= iocurrent;
 8002896:	9d00      	ldr	r5, [sp, #0]
        temp &= ~(iocurrent);
 8002898:	43e4      	mvns	r4, r4
          temp |= iocurrent;
 800289a:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 800289c:	02ff      	lsls	r7, r7, #11
 800289e:	d401      	bmi.n	80028a4 <HAL_GPIO_Init+0x11c>
        temp &= ~(iocurrent);
 80028a0:	0035      	movs	r5, r6
 80028a2:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80028a4:	4667      	mov	r7, ip
        EXTI->RTSR = temp;
 80028a6:	6095      	str	r5, [r2, #8]
        temp = EXTI->FTSR;
 80028a8:	68d6      	ldr	r6, [r2, #12]
          temp |= iocurrent;
 80028aa:	9d00      	ldr	r5, [sp, #0]
 80028ac:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80028ae:	02bf      	lsls	r7, r7, #10
 80028b0:	d401      	bmi.n	80028b6 <HAL_GPIO_Init+0x12e>
        temp &= ~(iocurrent);
 80028b2:	0035      	movs	r5, r6
 80028b4:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80028b6:	4667      	mov	r7, ip
        EXTI->FTSR = temp;
 80028b8:	60d5      	str	r5, [r2, #12]
        temp = EXTI->EMR;
 80028ba:	6856      	ldr	r6, [r2, #4]
          temp |= iocurrent;
 80028bc:	9d00      	ldr	r5, [sp, #0]
 80028be:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80028c0:	03bf      	lsls	r7, r7, #14
 80028c2:	d401      	bmi.n	80028c8 <HAL_GPIO_Init+0x140>
        temp &= ~(iocurrent);
 80028c4:	0035      	movs	r5, r6
 80028c6:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80028c8:	4667      	mov	r7, ip
        EXTI->EMR = temp;
 80028ca:	6055      	str	r5, [r2, #4]
        temp = EXTI->IMR;
 80028cc:	6815      	ldr	r5, [r2, #0]
          temp |= iocurrent;
 80028ce:	9e00      	ldr	r6, [sp, #0]
 80028d0:	432e      	orrs	r6, r5
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80028d2:	03ff      	lsls	r7, r7, #15
 80028d4:	d401      	bmi.n	80028da <HAL_GPIO_Init+0x152>
        temp &= ~(iocurrent);
 80028d6:	4025      	ands	r5, r4
 80028d8:	002e      	movs	r6, r5
        EXTI->IMR = temp;
 80028da:	6016      	str	r6, [r2, #0]
    position++;
 80028dc:	3301      	adds	r3, #1
 80028de:	e756      	b.n	800278e <HAL_GPIO_Init+0x6>
 80028e0:	40021000 	.word	0x40021000
 80028e4:	40010000 	.word	0x40010000
 80028e8:	48000400 	.word	0x48000400
 80028ec:	48000800 	.word	0x48000800
 80028f0:	48000c00 	.word	0x48000c00
 80028f4:	40010400 	.word	0x40010400

080028f8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80028f8:	6900      	ldr	r0, [r0, #16]
 80028fa:	4008      	ands	r0, r1
 80028fc:	1e43      	subs	r3, r0, #1
 80028fe:	4198      	sbcs	r0, r3
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
 8002900:	b2c0      	uxtb	r0, r0
  }
 8002902:	4770      	bx	lr

08002904 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002904:	2a00      	cmp	r2, #0
 8002906:	d001      	beq.n	800290c <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8002908:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 800290a:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 800290c:	6281      	str	r1, [r0, #40]	@ 0x28
}
 800290e:	e7fc      	b.n	800290a <HAL_GPIO_WritePin+0x6>

08002910 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002910:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002912:	0004      	movs	r4, r0
 8002914:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8002916:	2800      	cmp	r0, #0
 8002918:	d045      	beq.n	80029a6 <HAL_RCC_OscConfig+0x96>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800291a:	6803      	ldr	r3, [r0, #0]
 800291c:	07db      	lsls	r3, r3, #31
 800291e:	d42f      	bmi.n	8002980 <HAL_RCC_OscConfig+0x70>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002920:	6823      	ldr	r3, [r4, #0]
 8002922:	079b      	lsls	r3, r3, #30
 8002924:	d500      	bpl.n	8002928 <HAL_RCC_OscConfig+0x18>
 8002926:	e081      	b.n	8002a2c <HAL_RCC_OscConfig+0x11c>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002928:	6823      	ldr	r3, [r4, #0]
 800292a:	071b      	lsls	r3, r3, #28
 800292c:	d500      	bpl.n	8002930 <HAL_RCC_OscConfig+0x20>
 800292e:	e0bc      	b.n	8002aaa <HAL_RCC_OscConfig+0x19a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002930:	6823      	ldr	r3, [r4, #0]
 8002932:	075b      	lsls	r3, r3, #29
 8002934:	d500      	bpl.n	8002938 <HAL_RCC_OscConfig+0x28>
 8002936:	e0df      	b.n	8002af8 <HAL_RCC_OscConfig+0x1e8>
      __HAL_RCC_PWR_CLK_DISABLE();
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8002938:	6823      	ldr	r3, [r4, #0]
 800293a:	06db      	lsls	r3, r3, #27
 800293c:	d51a      	bpl.n	8002974 <HAL_RCC_OscConfig+0x64>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 800293e:	6962      	ldr	r2, [r4, #20]
 8002940:	2304      	movs	r3, #4
 8002942:	4db4      	ldr	r5, [pc, #720]	@ (8002c14 <HAL_RCC_OscConfig+0x304>)
 8002944:	2a01      	cmp	r2, #1
 8002946:	d000      	beq.n	800294a <HAL_RCC_OscConfig+0x3a>
 8002948:	e148      	b.n	8002bdc <HAL_RCC_OscConfig+0x2cc>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 800294a:	6b69      	ldr	r1, [r5, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800294c:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 800294e:	430b      	orrs	r3, r1
 8002950:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_ENABLE();
 8002952:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8002954:	431a      	orrs	r2, r3
 8002956:	636a      	str	r2, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 8002958:	f7ff feba 	bl	80026d0 <HAL_GetTick>
 800295c:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800295e:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8002960:	423b      	tst	r3, r7
 8002962:	d100      	bne.n	8002966 <HAL_RCC_OscConfig+0x56>
 8002964:	e133      	b.n	8002bce <HAL_RCC_OscConfig+0x2be>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8002966:	21f8      	movs	r1, #248	@ 0xf8
 8002968:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 800296a:	69a3      	ldr	r3, [r4, #24]
 800296c:	438a      	bics	r2, r1
 800296e:	00db      	lsls	r3, r3, #3
 8002970:	4313      	orrs	r3, r2
 8002972:	636b      	str	r3, [r5, #52]	@ 0x34
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002974:	6a23      	ldr	r3, [r4, #32]
 8002976:	2b00      	cmp	r3, #0
 8002978:	d000      	beq.n	800297c <HAL_RCC_OscConfig+0x6c>
 800297a:	e157      	b.n	8002c2c <HAL_RCC_OscConfig+0x31c>
        }
      }
    }
  }

  return HAL_OK;
 800297c:	2000      	movs	r0, #0
 800297e:	e02a      	b.n	80029d6 <HAL_RCC_OscConfig+0xc6>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8002980:	220c      	movs	r2, #12
 8002982:	4da4      	ldr	r5, [pc, #656]	@ (8002c14 <HAL_RCC_OscConfig+0x304>)
 8002984:	686b      	ldr	r3, [r5, #4]
 8002986:	4013      	ands	r3, r2
 8002988:	2b04      	cmp	r3, #4
 800298a:	d006      	beq.n	800299a <HAL_RCC_OscConfig+0x8a>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800298c:	686b      	ldr	r3, [r5, #4]
 800298e:	4013      	ands	r3, r2
 8002990:	2b08      	cmp	r3, #8
 8002992:	d10a      	bne.n	80029aa <HAL_RCC_OscConfig+0x9a>
 8002994:	686b      	ldr	r3, [r5, #4]
 8002996:	03db      	lsls	r3, r3, #15
 8002998:	d507      	bpl.n	80029aa <HAL_RCC_OscConfig+0x9a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800299a:	682b      	ldr	r3, [r5, #0]
 800299c:	039b      	lsls	r3, r3, #14
 800299e:	d5bf      	bpl.n	8002920 <HAL_RCC_OscConfig+0x10>
 80029a0:	6863      	ldr	r3, [r4, #4]
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	d1bc      	bne.n	8002920 <HAL_RCC_OscConfig+0x10>
    return HAL_ERROR;
 80029a6:	2001      	movs	r0, #1
 80029a8:	e015      	b.n	80029d6 <HAL_RCC_OscConfig+0xc6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80029aa:	6863      	ldr	r3, [r4, #4]
 80029ac:	2b01      	cmp	r3, #1
 80029ae:	d114      	bne.n	80029da <HAL_RCC_OscConfig+0xca>
 80029b0:	2380      	movs	r3, #128	@ 0x80
 80029b2:	682a      	ldr	r2, [r5, #0]
 80029b4:	025b      	lsls	r3, r3, #9
 80029b6:	4313      	orrs	r3, r2
 80029b8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80029ba:	f7ff fe89 	bl	80026d0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80029be:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 80029c0:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80029c2:	02bf      	lsls	r7, r7, #10
 80029c4:	682b      	ldr	r3, [r5, #0]
 80029c6:	423b      	tst	r3, r7
 80029c8:	d1aa      	bne.n	8002920 <HAL_RCC_OscConfig+0x10>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80029ca:	f7ff fe81 	bl	80026d0 <HAL_GetTick>
 80029ce:	1b80      	subs	r0, r0, r6
 80029d0:	2864      	cmp	r0, #100	@ 0x64
 80029d2:	d9f7      	bls.n	80029c4 <HAL_RCC_OscConfig+0xb4>
            return HAL_TIMEOUT;
 80029d4:	2003      	movs	r0, #3
}
 80029d6:	b005      	add	sp, #20
 80029d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d116      	bne.n	8002a0c <HAL_RCC_OscConfig+0xfc>
 80029de:	682b      	ldr	r3, [r5, #0]
 80029e0:	4a8d      	ldr	r2, [pc, #564]	@ (8002c18 <HAL_RCC_OscConfig+0x308>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80029e2:	2780      	movs	r7, #128	@ 0x80
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80029e4:	4013      	ands	r3, r2
 80029e6:	602b      	str	r3, [r5, #0]
 80029e8:	682b      	ldr	r3, [r5, #0]
 80029ea:	4a8c      	ldr	r2, [pc, #560]	@ (8002c1c <HAL_RCC_OscConfig+0x30c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80029ec:	02bf      	lsls	r7, r7, #10
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80029ee:	4013      	ands	r3, r2
 80029f0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80029f2:	f7ff fe6d 	bl	80026d0 <HAL_GetTick>
 80029f6:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80029f8:	682b      	ldr	r3, [r5, #0]
 80029fa:	423b      	tst	r3, r7
 80029fc:	d100      	bne.n	8002a00 <HAL_RCC_OscConfig+0xf0>
 80029fe:	e78f      	b.n	8002920 <HAL_RCC_OscConfig+0x10>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002a00:	f7ff fe66 	bl	80026d0 <HAL_GetTick>
 8002a04:	1b80      	subs	r0, r0, r6
 8002a06:	2864      	cmp	r0, #100	@ 0x64
 8002a08:	d9f6      	bls.n	80029f8 <HAL_RCC_OscConfig+0xe8>
 8002a0a:	e7e3      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002a0c:	2b05      	cmp	r3, #5
 8002a0e:	d105      	bne.n	8002a1c <HAL_RCC_OscConfig+0x10c>
 8002a10:	2380      	movs	r3, #128	@ 0x80
 8002a12:	682a      	ldr	r2, [r5, #0]
 8002a14:	02db      	lsls	r3, r3, #11
 8002a16:	4313      	orrs	r3, r2
 8002a18:	602b      	str	r3, [r5, #0]
 8002a1a:	e7c9      	b.n	80029b0 <HAL_RCC_OscConfig+0xa0>
 8002a1c:	682b      	ldr	r3, [r5, #0]
 8002a1e:	4a7e      	ldr	r2, [pc, #504]	@ (8002c18 <HAL_RCC_OscConfig+0x308>)
 8002a20:	4013      	ands	r3, r2
 8002a22:	602b      	str	r3, [r5, #0]
 8002a24:	682b      	ldr	r3, [r5, #0]
 8002a26:	4a7d      	ldr	r2, [pc, #500]	@ (8002c1c <HAL_RCC_OscConfig+0x30c>)
 8002a28:	4013      	ands	r3, r2
 8002a2a:	e7c5      	b.n	80029b8 <HAL_RCC_OscConfig+0xa8>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8002a2c:	220c      	movs	r2, #12
 8002a2e:	4d79      	ldr	r5, [pc, #484]	@ (8002c14 <HAL_RCC_OscConfig+0x304>)
 8002a30:	686b      	ldr	r3, [r5, #4]
 8002a32:	4213      	tst	r3, r2
 8002a34:	d006      	beq.n	8002a44 <HAL_RCC_OscConfig+0x134>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8002a36:	686b      	ldr	r3, [r5, #4]
 8002a38:	4013      	ands	r3, r2
 8002a3a:	2b08      	cmp	r3, #8
 8002a3c:	d110      	bne.n	8002a60 <HAL_RCC_OscConfig+0x150>
 8002a3e:	686b      	ldr	r3, [r5, #4]
 8002a40:	03db      	lsls	r3, r3, #15
 8002a42:	d40d      	bmi.n	8002a60 <HAL_RCC_OscConfig+0x150>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002a44:	682b      	ldr	r3, [r5, #0]
 8002a46:	079b      	lsls	r3, r3, #30
 8002a48:	d502      	bpl.n	8002a50 <HAL_RCC_OscConfig+0x140>
 8002a4a:	68e3      	ldr	r3, [r4, #12]
 8002a4c:	2b01      	cmp	r3, #1
 8002a4e:	d1aa      	bne.n	80029a6 <HAL_RCC_OscConfig+0x96>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002a50:	21f8      	movs	r1, #248	@ 0xf8
 8002a52:	682a      	ldr	r2, [r5, #0]
 8002a54:	6923      	ldr	r3, [r4, #16]
 8002a56:	438a      	bics	r2, r1
 8002a58:	00db      	lsls	r3, r3, #3
 8002a5a:	4313      	orrs	r3, r2
 8002a5c:	602b      	str	r3, [r5, #0]
 8002a5e:	e763      	b.n	8002928 <HAL_RCC_OscConfig+0x18>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8002a60:	68e2      	ldr	r2, [r4, #12]
 8002a62:	2301      	movs	r3, #1
 8002a64:	2a00      	cmp	r2, #0
 8002a66:	d00f      	beq.n	8002a88 <HAL_RCC_OscConfig+0x178>
        __HAL_RCC_HSI_ENABLE();
 8002a68:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002a6a:	2702      	movs	r7, #2
        __HAL_RCC_HSI_ENABLE();
 8002a6c:	4313      	orrs	r3, r2
 8002a6e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002a70:	f7ff fe2e 	bl	80026d0 <HAL_GetTick>
 8002a74:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002a76:	682b      	ldr	r3, [r5, #0]
 8002a78:	423b      	tst	r3, r7
 8002a7a:	d1e9      	bne.n	8002a50 <HAL_RCC_OscConfig+0x140>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002a7c:	f7ff fe28 	bl	80026d0 <HAL_GetTick>
 8002a80:	1b80      	subs	r0, r0, r6
 8002a82:	2802      	cmp	r0, #2
 8002a84:	d9f7      	bls.n	8002a76 <HAL_RCC_OscConfig+0x166>
 8002a86:	e7a5      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
        __HAL_RCC_HSI_DISABLE();
 8002a88:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002a8a:	2702      	movs	r7, #2
        __HAL_RCC_HSI_DISABLE();
 8002a8c:	439a      	bics	r2, r3
 8002a8e:	602a      	str	r2, [r5, #0]
        tickstart = HAL_GetTick();
 8002a90:	f7ff fe1e 	bl	80026d0 <HAL_GetTick>
 8002a94:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002a96:	682b      	ldr	r3, [r5, #0]
 8002a98:	423b      	tst	r3, r7
 8002a9a:	d100      	bne.n	8002a9e <HAL_RCC_OscConfig+0x18e>
 8002a9c:	e744      	b.n	8002928 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002a9e:	f7ff fe17 	bl	80026d0 <HAL_GetTick>
 8002aa2:	1b80      	subs	r0, r0, r6
 8002aa4:	2802      	cmp	r0, #2
 8002aa6:	d9f6      	bls.n	8002a96 <HAL_RCC_OscConfig+0x186>
 8002aa8:	e794      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002aaa:	69e2      	ldr	r2, [r4, #28]
 8002aac:	2301      	movs	r3, #1
 8002aae:	4d59      	ldr	r5, [pc, #356]	@ (8002c14 <HAL_RCC_OscConfig+0x304>)
 8002ab0:	2a00      	cmp	r2, #0
 8002ab2:	d010      	beq.n	8002ad6 <HAL_RCC_OscConfig+0x1c6>
      __HAL_RCC_LSI_ENABLE();
 8002ab4:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002ab6:	2702      	movs	r7, #2
      __HAL_RCC_LSI_ENABLE();
 8002ab8:	4313      	orrs	r3, r2
 8002aba:	626b      	str	r3, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 8002abc:	f7ff fe08 	bl	80026d0 <HAL_GetTick>
 8002ac0:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002ac2:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8002ac4:	423b      	tst	r3, r7
 8002ac6:	d000      	beq.n	8002aca <HAL_RCC_OscConfig+0x1ba>
 8002ac8:	e732      	b.n	8002930 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002aca:	f7ff fe01 	bl	80026d0 <HAL_GetTick>
 8002ace:	1b80      	subs	r0, r0, r6
 8002ad0:	2802      	cmp	r0, #2
 8002ad2:	d9f6      	bls.n	8002ac2 <HAL_RCC_OscConfig+0x1b2>
 8002ad4:	e77e      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
      __HAL_RCC_LSI_DISABLE();
 8002ad6:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002ad8:	2702      	movs	r7, #2
      __HAL_RCC_LSI_DISABLE();
 8002ada:	439a      	bics	r2, r3
 8002adc:	626a      	str	r2, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 8002ade:	f7ff fdf7 	bl	80026d0 <HAL_GetTick>
 8002ae2:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002ae4:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8002ae6:	423b      	tst	r3, r7
 8002ae8:	d100      	bne.n	8002aec <HAL_RCC_OscConfig+0x1dc>
 8002aea:	e721      	b.n	8002930 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002aec:	f7ff fdf0 	bl	80026d0 <HAL_GetTick>
 8002af0:	1b80      	subs	r0, r0, r6
 8002af2:	2802      	cmp	r0, #2
 8002af4:	d9f6      	bls.n	8002ae4 <HAL_RCC_OscConfig+0x1d4>
 8002af6:	e76d      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002af8:	2280      	movs	r2, #128	@ 0x80
    FlagStatus       pwrclkchanged = RESET;
 8002afa:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002afc:	4d45      	ldr	r5, [pc, #276]	@ (8002c14 <HAL_RCC_OscConfig+0x304>)
 8002afe:	0552      	lsls	r2, r2, #21
 8002b00:	69eb      	ldr	r3, [r5, #28]
    FlagStatus       pwrclkchanged = RESET;
 8002b02:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002b04:	4213      	tst	r3, r2
 8002b06:	d108      	bne.n	8002b1a <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 8002b08:	69eb      	ldr	r3, [r5, #28]
 8002b0a:	4313      	orrs	r3, r2
 8002b0c:	61eb      	str	r3, [r5, #28]
 8002b0e:	69eb      	ldr	r3, [r5, #28]
 8002b10:	4013      	ands	r3, r2
 8002b12:	9303      	str	r3, [sp, #12]
 8002b14:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8002b16:	2301      	movs	r3, #1
 8002b18:	9300      	str	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002b1a:	2780      	movs	r7, #128	@ 0x80
 8002b1c:	4e40      	ldr	r6, [pc, #256]	@ (8002c20 <HAL_RCC_OscConfig+0x310>)
 8002b1e:	007f      	lsls	r7, r7, #1
 8002b20:	6833      	ldr	r3, [r6, #0]
 8002b22:	423b      	tst	r3, r7
 8002b24:	d015      	beq.n	8002b52 <HAL_RCC_OscConfig+0x242>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002b26:	68a3      	ldr	r3, [r4, #8]
 8002b28:	2b01      	cmp	r3, #1
 8002b2a:	d122      	bne.n	8002b72 <HAL_RCC_OscConfig+0x262>
 8002b2c:	6a2a      	ldr	r2, [r5, #32]
 8002b2e:	4313      	orrs	r3, r2
 8002b30:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 8002b32:	f7ff fdcd 	bl	80026d0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002b36:	2702      	movs	r7, #2
      tickstart = HAL_GetTick();
 8002b38:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002b3a:	6a2b      	ldr	r3, [r5, #32]
 8002b3c:	423b      	tst	r3, r7
 8002b3e:	d03f      	beq.n	8002bc0 <HAL_RCC_OscConfig+0x2b0>
    if(pwrclkchanged == SET)
 8002b40:	9b00      	ldr	r3, [sp, #0]
 8002b42:	2b01      	cmp	r3, #1
 8002b44:	d000      	beq.n	8002b48 <HAL_RCC_OscConfig+0x238>
 8002b46:	e6f7      	b.n	8002938 <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 8002b48:	69eb      	ldr	r3, [r5, #28]
 8002b4a:	4a36      	ldr	r2, [pc, #216]	@ (8002c24 <HAL_RCC_OscConfig+0x314>)
 8002b4c:	4013      	ands	r3, r2
 8002b4e:	61eb      	str	r3, [r5, #28]
 8002b50:	e6f2      	b.n	8002938 <HAL_RCC_OscConfig+0x28>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002b52:	6833      	ldr	r3, [r6, #0]
 8002b54:	433b      	orrs	r3, r7
 8002b56:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8002b58:	f7ff fdba 	bl	80026d0 <HAL_GetTick>
 8002b5c:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002b5e:	6833      	ldr	r3, [r6, #0]
 8002b60:	423b      	tst	r3, r7
 8002b62:	d1e0      	bne.n	8002b26 <HAL_RCC_OscConfig+0x216>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002b64:	f7ff fdb4 	bl	80026d0 <HAL_GetTick>
 8002b68:	9b01      	ldr	r3, [sp, #4]
 8002b6a:	1ac0      	subs	r0, r0, r3
 8002b6c:	2864      	cmp	r0, #100	@ 0x64
 8002b6e:	d9f6      	bls.n	8002b5e <HAL_RCC_OscConfig+0x24e>
 8002b70:	e730      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002b72:	2201      	movs	r2, #1
 8002b74:	2b00      	cmp	r3, #0
 8002b76:	d114      	bne.n	8002ba2 <HAL_RCC_OscConfig+0x292>
 8002b78:	6a2b      	ldr	r3, [r5, #32]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002b7a:	2702      	movs	r7, #2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002b7c:	4393      	bics	r3, r2
 8002b7e:	622b      	str	r3, [r5, #32]
 8002b80:	6a2b      	ldr	r3, [r5, #32]
 8002b82:	3203      	adds	r2, #3
 8002b84:	4393      	bics	r3, r2
 8002b86:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 8002b88:	f7ff fda2 	bl	80026d0 <HAL_GetTick>
 8002b8c:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002b8e:	6a2b      	ldr	r3, [r5, #32]
 8002b90:	423b      	tst	r3, r7
 8002b92:	d0d5      	beq.n	8002b40 <HAL_RCC_OscConfig+0x230>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002b94:	f7ff fd9c 	bl	80026d0 <HAL_GetTick>
 8002b98:	4b23      	ldr	r3, [pc, #140]	@ (8002c28 <HAL_RCC_OscConfig+0x318>)
 8002b9a:	1b80      	subs	r0, r0, r6
 8002b9c:	4298      	cmp	r0, r3
 8002b9e:	d9f6      	bls.n	8002b8e <HAL_RCC_OscConfig+0x27e>
 8002ba0:	e718      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002ba2:	2b05      	cmp	r3, #5
 8002ba4:	d105      	bne.n	8002bb2 <HAL_RCC_OscConfig+0x2a2>
 8002ba6:	6a29      	ldr	r1, [r5, #32]
 8002ba8:	3b01      	subs	r3, #1
 8002baa:	430b      	orrs	r3, r1
 8002bac:	622b      	str	r3, [r5, #32]
 8002bae:	6a2b      	ldr	r3, [r5, #32]
 8002bb0:	e7bd      	b.n	8002b2e <HAL_RCC_OscConfig+0x21e>
 8002bb2:	6a2b      	ldr	r3, [r5, #32]
 8002bb4:	4393      	bics	r3, r2
 8002bb6:	2204      	movs	r2, #4
 8002bb8:	622b      	str	r3, [r5, #32]
 8002bba:	6a2b      	ldr	r3, [r5, #32]
 8002bbc:	4393      	bics	r3, r2
 8002bbe:	e7b7      	b.n	8002b30 <HAL_RCC_OscConfig+0x220>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002bc0:	f7ff fd86 	bl	80026d0 <HAL_GetTick>
 8002bc4:	4b18      	ldr	r3, [pc, #96]	@ (8002c28 <HAL_RCC_OscConfig+0x318>)
 8002bc6:	1b80      	subs	r0, r0, r6
 8002bc8:	4298      	cmp	r0, r3
 8002bca:	d9b6      	bls.n	8002b3a <HAL_RCC_OscConfig+0x22a>
 8002bcc:	e702      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8002bce:	f7ff fd7f 	bl	80026d0 <HAL_GetTick>
 8002bd2:	1b80      	subs	r0, r0, r6
 8002bd4:	2802      	cmp	r0, #2
 8002bd6:	d800      	bhi.n	8002bda <HAL_RCC_OscConfig+0x2ca>
 8002bd8:	e6c1      	b.n	800295e <HAL_RCC_OscConfig+0x4e>
 8002bda:	e6fb      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8002bdc:	3205      	adds	r2, #5
 8002bde:	d103      	bne.n	8002be8 <HAL_RCC_OscConfig+0x2d8>
      __HAL_RCC_HSI14ADC_ENABLE();
 8002be0:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8002be2:	439a      	bics	r2, r3
 8002be4:	636a      	str	r2, [r5, #52]	@ 0x34
 8002be6:	e6be      	b.n	8002966 <HAL_RCC_OscConfig+0x56>
      __HAL_RCC_HSI14ADC_DISABLE();
 8002be8:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8002bea:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8002bec:	4313      	orrs	r3, r2
      __HAL_RCC_HSI14_DISABLE();
 8002bee:	2201      	movs	r2, #1
      __HAL_RCC_HSI14ADC_DISABLE();
 8002bf0:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_DISABLE();
 8002bf2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8002bf4:	4393      	bics	r3, r2
 8002bf6:	636b      	str	r3, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 8002bf8:	f7ff fd6a 	bl	80026d0 <HAL_GetTick>
 8002bfc:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8002bfe:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8002c00:	423b      	tst	r3, r7
 8002c02:	d100      	bne.n	8002c06 <HAL_RCC_OscConfig+0x2f6>
 8002c04:	e6b6      	b.n	8002974 <HAL_RCC_OscConfig+0x64>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8002c06:	f7ff fd63 	bl	80026d0 <HAL_GetTick>
 8002c0a:	1b80      	subs	r0, r0, r6
 8002c0c:	2802      	cmp	r0, #2
 8002c0e:	d9f6      	bls.n	8002bfe <HAL_RCC_OscConfig+0x2ee>
 8002c10:	e6e0      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
 8002c12:	46c0      	nop			@ (mov r8, r8)
 8002c14:	40021000 	.word	0x40021000
 8002c18:	fffeffff 	.word	0xfffeffff
 8002c1c:	fffbffff 	.word	0xfffbffff
 8002c20:	40007000 	.word	0x40007000
 8002c24:	efffffff 	.word	0xefffffff
 8002c28:	00001388 	.word	0x00001388
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002c2c:	210c      	movs	r1, #12
 8002c2e:	4d34      	ldr	r5, [pc, #208]	@ (8002d00 <HAL_RCC_OscConfig+0x3f0>)
 8002c30:	686a      	ldr	r2, [r5, #4]
 8002c32:	400a      	ands	r2, r1
 8002c34:	2a08      	cmp	r2, #8
 8002c36:	d047      	beq.n	8002cc8 <HAL_RCC_OscConfig+0x3b8>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002c38:	4a32      	ldr	r2, [pc, #200]	@ (8002d04 <HAL_RCC_OscConfig+0x3f4>)
 8002c3a:	2b02      	cmp	r3, #2
 8002c3c:	d132      	bne.n	8002ca4 <HAL_RCC_OscConfig+0x394>
        __HAL_RCC_PLL_DISABLE();
 8002c3e:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002c40:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 8002c42:	4013      	ands	r3, r2
 8002c44:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002c46:	f7ff fd43 	bl	80026d0 <HAL_GetTick>
 8002c4a:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002c4c:	04bf      	lsls	r7, r7, #18
 8002c4e:	682b      	ldr	r3, [r5, #0]
 8002c50:	423b      	tst	r3, r7
 8002c52:	d121      	bne.n	8002c98 <HAL_RCC_OscConfig+0x388>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002c54:	220f      	movs	r2, #15
 8002c56:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8002c58:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002c5a:	4393      	bics	r3, r2
 8002c5c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8002c5e:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002c60:	4313      	orrs	r3, r2
 8002c62:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8002c64:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8002c66:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8002c68:	686a      	ldr	r2, [r5, #4]
 8002c6a:	430b      	orrs	r3, r1
 8002c6c:	4926      	ldr	r1, [pc, #152]	@ (8002d08 <HAL_RCC_OscConfig+0x3f8>)
 8002c6e:	400a      	ands	r2, r1
 8002c70:	4313      	orrs	r3, r2
 8002c72:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8002c74:	2380      	movs	r3, #128	@ 0x80
 8002c76:	682a      	ldr	r2, [r5, #0]
 8002c78:	045b      	lsls	r3, r3, #17
 8002c7a:	4313      	orrs	r3, r2
 8002c7c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002c7e:	f7ff fd27 	bl	80026d0 <HAL_GetTick>
 8002c82:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8002c84:	682b      	ldr	r3, [r5, #0]
 8002c86:	4233      	tst	r3, r6
 8002c88:	d000      	beq.n	8002c8c <HAL_RCC_OscConfig+0x37c>
 8002c8a:	e677      	b.n	800297c <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002c8c:	f7ff fd20 	bl	80026d0 <HAL_GetTick>
 8002c90:	1b00      	subs	r0, r0, r4
 8002c92:	2802      	cmp	r0, #2
 8002c94:	d9f6      	bls.n	8002c84 <HAL_RCC_OscConfig+0x374>
 8002c96:	e69d      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002c98:	f7ff fd1a 	bl	80026d0 <HAL_GetTick>
 8002c9c:	1b80      	subs	r0, r0, r6
 8002c9e:	2802      	cmp	r0, #2
 8002ca0:	d9d5      	bls.n	8002c4e <HAL_RCC_OscConfig+0x33e>
 8002ca2:	e697      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
        __HAL_RCC_PLL_DISABLE();
 8002ca4:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002ca6:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 8002ca8:	4013      	ands	r3, r2
 8002caa:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002cac:	f7ff fd10 	bl	80026d0 <HAL_GetTick>
 8002cb0:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002cb2:	04b6      	lsls	r6, r6, #18
 8002cb4:	682b      	ldr	r3, [r5, #0]
 8002cb6:	4233      	tst	r3, r6
 8002cb8:	d100      	bne.n	8002cbc <HAL_RCC_OscConfig+0x3ac>
 8002cba:	e65f      	b.n	800297c <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002cbc:	f7ff fd08 	bl	80026d0 <HAL_GetTick>
 8002cc0:	1b00      	subs	r0, r0, r4
 8002cc2:	2802      	cmp	r0, #2
 8002cc4:	d9f6      	bls.n	8002cb4 <HAL_RCC_OscConfig+0x3a4>
 8002cc6:	e685      	b.n	80029d4 <HAL_RCC_OscConfig+0xc4>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002cc8:	2b01      	cmp	r3, #1
 8002cca:	d100      	bne.n	8002cce <HAL_RCC_OscConfig+0x3be>
 8002ccc:	e66b      	b.n	80029a6 <HAL_RCC_OscConfig+0x96>
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002cce:	2280      	movs	r2, #128	@ 0x80
        pll_config  = RCC->CFGR;
 8002cd0:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002cd2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8002cd4:	0252      	lsls	r2, r2, #9
        pll_config2 = RCC->CFGR2;
 8002cd6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002cd8:	4002      	ands	r2, r0
 8002cda:	428a      	cmp	r2, r1
 8002cdc:	d000      	beq.n	8002ce0 <HAL_RCC_OscConfig+0x3d0>
 8002cde:	e662      	b.n	80029a6 <HAL_RCC_OscConfig+0x96>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8002ce0:	220f      	movs	r2, #15
 8002ce2:	4013      	ands	r3, r2
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002ce4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8002ce6:	4293      	cmp	r3, r2
 8002ce8:	d000      	beq.n	8002cec <HAL_RCC_OscConfig+0x3dc>
 8002cea:	e65c      	b.n	80029a6 <HAL_RCC_OscConfig+0x96>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8002cec:	23f0      	movs	r3, #240	@ 0xf0
 8002cee:	039b      	lsls	r3, r3, #14
 8002cf0:	4018      	ands	r0, r3
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8002cf2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8002cf4:	1ac0      	subs	r0, r0, r3
 8002cf6:	1e43      	subs	r3, r0, #1
 8002cf8:	4198      	sbcs	r0, r3
 8002cfa:	b2c0      	uxtb	r0, r0
 8002cfc:	e66b      	b.n	80029d6 <HAL_RCC_OscConfig+0xc6>
 8002cfe:	46c0      	nop			@ (mov r8, r8)
 8002d00:	40021000 	.word	0x40021000
 8002d04:	feffffff 	.word	0xfeffffff
 8002d08:	ffc2ffff 	.word	0xffc2ffff

08002d0c <HAL_RCC_GetSysClockFreq>:
  uint32_t sysclockfreq = 0U;
  
  tmpreg = RCC->CFGR;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8002d0c:	220c      	movs	r2, #12
{
 8002d0e:	b570      	push	{r4, r5, r6, lr}
  tmpreg = RCC->CFGR;
 8002d10:	4d0c      	ldr	r5, [pc, #48]	@ (8002d44 <HAL_RCC_GetSysClockFreq+0x38>)
 8002d12:	686b      	ldr	r3, [r5, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 8002d14:	401a      	ands	r2, r3
 8002d16:	2a08      	cmp	r2, #8
 8002d18:	d111      	bne.n	8002d3e <HAL_RCC_GetSysClockFreq+0x32>
      sysclockfreq = HSE_VALUE;
      break;
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8002d1a:	200f      	movs	r0, #15
 8002d1c:	490a      	ldr	r1, [pc, #40]	@ (8002d48 <HAL_RCC_GetSysClockFreq+0x3c>)
 8002d1e:	0c9a      	lsrs	r2, r3, #18
 8002d20:	4002      	ands	r2, r0
 8002d22:	5c8c      	ldrb	r4, [r1, r2]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8002d24:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8002d26:	03db      	lsls	r3, r3, #15
 8002d28:	d507      	bpl.n	8002d3a <HAL_RCC_GetSysClockFreq+0x2e>
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8002d2a:	4908      	ldr	r1, [pc, #32]	@ (8002d4c <HAL_RCC_GetSysClockFreq+0x40>)
 8002d2c:	4002      	ands	r2, r0
 8002d2e:	5c89      	ldrb	r1, [r1, r2]
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8002d30:	4807      	ldr	r0, [pc, #28]	@ (8002d50 <HAL_RCC_GetSysClockFreq+0x44>)
 8002d32:	f7fd fa05 	bl	8000140 <__udivsi3>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8002d36:	4360      	muls	r0, r4
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8002d38:	bd70      	pop	{r4, r5, r6, pc}
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8002d3a:	4806      	ldr	r0, [pc, #24]	@ (8002d54 <HAL_RCC_GetSysClockFreq+0x48>)
 8002d3c:	e7fb      	b.n	8002d36 <HAL_RCC_GetSysClockFreq+0x2a>
      sysclockfreq = HSE_VALUE;
 8002d3e:	4804      	ldr	r0, [pc, #16]	@ (8002d50 <HAL_RCC_GetSysClockFreq+0x44>)
  return sysclockfreq;
 8002d40:	e7fa      	b.n	8002d38 <HAL_RCC_GetSysClockFreq+0x2c>
 8002d42:	46c0      	nop			@ (mov r8, r8)
 8002d44:	40021000 	.word	0x40021000
 8002d48:	0800387b 	.word	0x0800387b
 8002d4c:	0800386b 	.word	0x0800386b
 8002d50:	007a1200 	.word	0x007a1200
 8002d54:	003d0900 	.word	0x003d0900

08002d58 <HAL_RCC_ClockConfig>:
{
 8002d58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002d5a:	0004      	movs	r4, r0
 8002d5c:	000e      	movs	r6, r1
  if(RCC_ClkInitStruct == NULL)
 8002d5e:	2800      	cmp	r0, #0
 8002d60:	d101      	bne.n	8002d66 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 8002d62:	2001      	movs	r0, #1
}
 8002d64:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002d66:	2201      	movs	r2, #1
 8002d68:	4d37      	ldr	r5, [pc, #220]	@ (8002e48 <HAL_RCC_ClockConfig+0xf0>)
 8002d6a:	682b      	ldr	r3, [r5, #0]
 8002d6c:	4013      	ands	r3, r2
 8002d6e:	428b      	cmp	r3, r1
 8002d70:	d31c      	bcc.n	8002dac <HAL_RCC_ClockConfig+0x54>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002d72:	6822      	ldr	r2, [r4, #0]
 8002d74:	0793      	lsls	r3, r2, #30
 8002d76:	d422      	bmi.n	8002dbe <HAL_RCC_ClockConfig+0x66>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002d78:	07d2      	lsls	r2, r2, #31
 8002d7a:	d42f      	bmi.n	8002ddc <HAL_RCC_ClockConfig+0x84>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002d7c:	2301      	movs	r3, #1
 8002d7e:	682a      	ldr	r2, [r5, #0]
 8002d80:	401a      	ands	r2, r3
 8002d82:	42b2      	cmp	r2, r6
 8002d84:	d851      	bhi.n	8002e2a <HAL_RCC_ClockConfig+0xd2>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002d86:	6823      	ldr	r3, [r4, #0]
 8002d88:	4d30      	ldr	r5, [pc, #192]	@ (8002e4c <HAL_RCC_ClockConfig+0xf4>)
 8002d8a:	075b      	lsls	r3, r3, #29
 8002d8c:	d454      	bmi.n	8002e38 <HAL_RCC_ClockConfig+0xe0>
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8002d8e:	f7ff ffbd 	bl	8002d0c <HAL_RCC_GetSysClockFreq>
 8002d92:	686b      	ldr	r3, [r5, #4]
 8002d94:	4a2e      	ldr	r2, [pc, #184]	@ (8002e50 <HAL_RCC_ClockConfig+0xf8>)
 8002d96:	061b      	lsls	r3, r3, #24
 8002d98:	0f1b      	lsrs	r3, r3, #28
 8002d9a:	5cd3      	ldrb	r3, [r2, r3]
 8002d9c:	492d      	ldr	r1, [pc, #180]	@ (8002e54 <HAL_RCC_ClockConfig+0xfc>)
 8002d9e:	40d8      	lsrs	r0, r3
 8002da0:	6008      	str	r0, [r1, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8002da2:	2003      	movs	r0, #3
 8002da4:	f7ff fc54 	bl	8002650 <HAL_InitTick>
  return HAL_OK;
 8002da8:	2000      	movs	r0, #0
 8002daa:	e7db      	b.n	8002d64 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002dac:	682b      	ldr	r3, [r5, #0]
 8002dae:	4393      	bics	r3, r2
 8002db0:	430b      	orrs	r3, r1
 8002db2:	602b      	str	r3, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002db4:	682b      	ldr	r3, [r5, #0]
 8002db6:	4013      	ands	r3, r2
 8002db8:	428b      	cmp	r3, r1
 8002dba:	d1d2      	bne.n	8002d62 <HAL_RCC_ClockConfig+0xa>
 8002dbc:	e7d9      	b.n	8002d72 <HAL_RCC_ClockConfig+0x1a>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002dbe:	4923      	ldr	r1, [pc, #140]	@ (8002e4c <HAL_RCC_ClockConfig+0xf4>)
 8002dc0:	0753      	lsls	r3, r2, #29
 8002dc2:	d504      	bpl.n	8002dce <HAL_RCC_ClockConfig+0x76>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8002dc4:	23e0      	movs	r3, #224	@ 0xe0
 8002dc6:	6848      	ldr	r0, [r1, #4]
 8002dc8:	00db      	lsls	r3, r3, #3
 8002dca:	4303      	orrs	r3, r0
 8002dcc:	604b      	str	r3, [r1, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002dce:	20f0      	movs	r0, #240	@ 0xf0
 8002dd0:	684b      	ldr	r3, [r1, #4]
 8002dd2:	4383      	bics	r3, r0
 8002dd4:	68a0      	ldr	r0, [r4, #8]
 8002dd6:	4303      	orrs	r3, r0
 8002dd8:	604b      	str	r3, [r1, #4]
 8002dda:	e7cd      	b.n	8002d78 <HAL_RCC_ClockConfig+0x20>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002ddc:	4f1b      	ldr	r7, [pc, #108]	@ (8002e4c <HAL_RCC_ClockConfig+0xf4>)
 8002dde:	6862      	ldr	r2, [r4, #4]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002de0:	683b      	ldr	r3, [r7, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002de2:	2a01      	cmp	r2, #1
 8002de4:	d119      	bne.n	8002e1a <HAL_RCC_ClockConfig+0xc2>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002de6:	039b      	lsls	r3, r3, #14
 8002de8:	d5bb      	bpl.n	8002d62 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002dea:	2103      	movs	r1, #3
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	438b      	bics	r3, r1
 8002df0:	4313      	orrs	r3, r2
 8002df2:	607b      	str	r3, [r7, #4]
    tickstart = HAL_GetTick();
 8002df4:	f7ff fc6c 	bl	80026d0 <HAL_GetTick>
 8002df8:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002dfa:	230c      	movs	r3, #12
 8002dfc:	687a      	ldr	r2, [r7, #4]
 8002dfe:	401a      	ands	r2, r3
 8002e00:	6863      	ldr	r3, [r4, #4]
 8002e02:	009b      	lsls	r3, r3, #2
 8002e04:	429a      	cmp	r2, r3
 8002e06:	d0b9      	beq.n	8002d7c <HAL_RCC_ClockConfig+0x24>
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002e08:	f7ff fc62 	bl	80026d0 <HAL_GetTick>
 8002e0c:	9b01      	ldr	r3, [sp, #4]
 8002e0e:	1ac0      	subs	r0, r0, r3
 8002e10:	4b11      	ldr	r3, [pc, #68]	@ (8002e58 <HAL_RCC_ClockConfig+0x100>)
 8002e12:	4298      	cmp	r0, r3
 8002e14:	d9f1      	bls.n	8002dfa <HAL_RCC_ClockConfig+0xa2>
        return HAL_TIMEOUT;
 8002e16:	2003      	movs	r0, #3
 8002e18:	e7a4      	b.n	8002d64 <HAL_RCC_ClockConfig+0xc>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002e1a:	2a02      	cmp	r2, #2
 8002e1c:	d102      	bne.n	8002e24 <HAL_RCC_ClockConfig+0xcc>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002e1e:	019b      	lsls	r3, r3, #6
 8002e20:	d4e3      	bmi.n	8002dea <HAL_RCC_ClockConfig+0x92>
 8002e22:	e79e      	b.n	8002d62 <HAL_RCC_ClockConfig+0xa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002e24:	079b      	lsls	r3, r3, #30
 8002e26:	d4e0      	bmi.n	8002dea <HAL_RCC_ClockConfig+0x92>
 8002e28:	e79b      	b.n	8002d62 <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002e2a:	682a      	ldr	r2, [r5, #0]
 8002e2c:	439a      	bics	r2, r3
 8002e2e:	602a      	str	r2, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002e30:	682a      	ldr	r2, [r5, #0]
 8002e32:	421a      	tst	r2, r3
 8002e34:	d0a7      	beq.n	8002d86 <HAL_RCC_ClockConfig+0x2e>
 8002e36:	e794      	b.n	8002d62 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8002e38:	686b      	ldr	r3, [r5, #4]
 8002e3a:	4a08      	ldr	r2, [pc, #32]	@ (8002e5c <HAL_RCC_ClockConfig+0x104>)
 8002e3c:	4013      	ands	r3, r2
 8002e3e:	68e2      	ldr	r2, [r4, #12]
 8002e40:	4313      	orrs	r3, r2
 8002e42:	606b      	str	r3, [r5, #4]
 8002e44:	e7a3      	b.n	8002d8e <HAL_RCC_ClockConfig+0x36>
 8002e46:	46c0      	nop			@ (mov r8, r8)
 8002e48:	40022000 	.word	0x40022000
 8002e4c:	40021000 	.word	0x40021000
 8002e50:	0800385b 	.word	0x0800385b
 8002e54:	20000000 	.word	0x20000000
 8002e58:	00001388 	.word	0x00001388
 8002e5c:	fffff8ff 	.word	0xfffff8ff

08002e60 <siprintf>:
 8002e60:	b40e      	push	{r1, r2, r3}
 8002e62:	b500      	push	{lr}
 8002e64:	490b      	ldr	r1, [pc, #44]	@ (8002e94 <siprintf+0x34>)
 8002e66:	b09c      	sub	sp, #112	@ 0x70
 8002e68:	ab1d      	add	r3, sp, #116	@ 0x74
 8002e6a:	9002      	str	r0, [sp, #8]
 8002e6c:	9006      	str	r0, [sp, #24]
 8002e6e:	9107      	str	r1, [sp, #28]
 8002e70:	9104      	str	r1, [sp, #16]
 8002e72:	4809      	ldr	r0, [pc, #36]	@ (8002e98 <siprintf+0x38>)
 8002e74:	4909      	ldr	r1, [pc, #36]	@ (8002e9c <siprintf+0x3c>)
 8002e76:	cb04      	ldmia	r3!, {r2}
 8002e78:	9105      	str	r1, [sp, #20]
 8002e7a:	6800      	ldr	r0, [r0, #0]
 8002e7c:	a902      	add	r1, sp, #8
 8002e7e:	9301      	str	r3, [sp, #4]
 8002e80:	f000 f99e 	bl	80031c0 <_svfiprintf_r>
 8002e84:	2200      	movs	r2, #0
 8002e86:	9b02      	ldr	r3, [sp, #8]
 8002e88:	701a      	strb	r2, [r3, #0]
 8002e8a:	b01c      	add	sp, #112	@ 0x70
 8002e8c:	bc08      	pop	{r3}
 8002e8e:	b003      	add	sp, #12
 8002e90:	4718      	bx	r3
 8002e92:	46c0      	nop			@ (mov r8, r8)
 8002e94:	7fffffff 	.word	0x7fffffff
 8002e98:	2000000c 	.word	0x2000000c
 8002e9c:	ffff0208 	.word	0xffff0208

08002ea0 <memset>:
 8002ea0:	0003      	movs	r3, r0
 8002ea2:	1882      	adds	r2, r0, r2
 8002ea4:	4293      	cmp	r3, r2
 8002ea6:	d100      	bne.n	8002eaa <memset+0xa>
 8002ea8:	4770      	bx	lr
 8002eaa:	7019      	strb	r1, [r3, #0]
 8002eac:	3301      	adds	r3, #1
 8002eae:	e7f9      	b.n	8002ea4 <memset+0x4>

08002eb0 <__errno>:
 8002eb0:	4b01      	ldr	r3, [pc, #4]	@ (8002eb8 <__errno+0x8>)
 8002eb2:	6818      	ldr	r0, [r3, #0]
 8002eb4:	4770      	bx	lr
 8002eb6:	46c0      	nop			@ (mov r8, r8)
 8002eb8:	2000000c 	.word	0x2000000c

08002ebc <__libc_init_array>:
 8002ebc:	b570      	push	{r4, r5, r6, lr}
 8002ebe:	2600      	movs	r6, #0
 8002ec0:	4c0c      	ldr	r4, [pc, #48]	@ (8002ef4 <__libc_init_array+0x38>)
 8002ec2:	4d0d      	ldr	r5, [pc, #52]	@ (8002ef8 <__libc_init_array+0x3c>)
 8002ec4:	1b64      	subs	r4, r4, r5
 8002ec6:	10a4      	asrs	r4, r4, #2
 8002ec8:	42a6      	cmp	r6, r4
 8002eca:	d109      	bne.n	8002ee0 <__libc_init_array+0x24>
 8002ecc:	2600      	movs	r6, #0
 8002ece:	f000 fc65 	bl	800379c <_init>
 8002ed2:	4c0a      	ldr	r4, [pc, #40]	@ (8002efc <__libc_init_array+0x40>)
 8002ed4:	4d0a      	ldr	r5, [pc, #40]	@ (8002f00 <__libc_init_array+0x44>)
 8002ed6:	1b64      	subs	r4, r4, r5
 8002ed8:	10a4      	asrs	r4, r4, #2
 8002eda:	42a6      	cmp	r6, r4
 8002edc:	d105      	bne.n	8002eea <__libc_init_array+0x2e>
 8002ede:	bd70      	pop	{r4, r5, r6, pc}
 8002ee0:	00b3      	lsls	r3, r6, #2
 8002ee2:	58eb      	ldr	r3, [r5, r3]
 8002ee4:	4798      	blx	r3
 8002ee6:	3601      	adds	r6, #1
 8002ee8:	e7ee      	b.n	8002ec8 <__libc_init_array+0xc>
 8002eea:	00b3      	lsls	r3, r6, #2
 8002eec:	58eb      	ldr	r3, [r5, r3]
 8002eee:	4798      	blx	r3
 8002ef0:	3601      	adds	r6, #1
 8002ef2:	e7f2      	b.n	8002eda <__libc_init_array+0x1e>
 8002ef4:	080038c0 	.word	0x080038c0
 8002ef8:	080038c0 	.word	0x080038c0
 8002efc:	080038c4 	.word	0x080038c4
 8002f00:	080038c0 	.word	0x080038c0

08002f04 <__retarget_lock_acquire_recursive>:
 8002f04:	4770      	bx	lr

08002f06 <__retarget_lock_release_recursive>:
 8002f06:	4770      	bx	lr

08002f08 <_free_r>:
 8002f08:	b570      	push	{r4, r5, r6, lr}
 8002f0a:	0005      	movs	r5, r0
 8002f0c:	1e0c      	subs	r4, r1, #0
 8002f0e:	d010      	beq.n	8002f32 <_free_r+0x2a>
 8002f10:	3c04      	subs	r4, #4
 8002f12:	6823      	ldr	r3, [r4, #0]
 8002f14:	2b00      	cmp	r3, #0
 8002f16:	da00      	bge.n	8002f1a <_free_r+0x12>
 8002f18:	18e4      	adds	r4, r4, r3
 8002f1a:	0028      	movs	r0, r5
 8002f1c:	f000 f8e0 	bl	80030e0 <__malloc_lock>
 8002f20:	4a1d      	ldr	r2, [pc, #116]	@ (8002f98 <_free_r+0x90>)
 8002f22:	6813      	ldr	r3, [r2, #0]
 8002f24:	2b00      	cmp	r3, #0
 8002f26:	d105      	bne.n	8002f34 <_free_r+0x2c>
 8002f28:	6063      	str	r3, [r4, #4]
 8002f2a:	6014      	str	r4, [r2, #0]
 8002f2c:	0028      	movs	r0, r5
 8002f2e:	f000 f8df 	bl	80030f0 <__malloc_unlock>
 8002f32:	bd70      	pop	{r4, r5, r6, pc}
 8002f34:	42a3      	cmp	r3, r4
 8002f36:	d908      	bls.n	8002f4a <_free_r+0x42>
 8002f38:	6820      	ldr	r0, [r4, #0]
 8002f3a:	1821      	adds	r1, r4, r0
 8002f3c:	428b      	cmp	r3, r1
 8002f3e:	d1f3      	bne.n	8002f28 <_free_r+0x20>
 8002f40:	6819      	ldr	r1, [r3, #0]
 8002f42:	685b      	ldr	r3, [r3, #4]
 8002f44:	1809      	adds	r1, r1, r0
 8002f46:	6021      	str	r1, [r4, #0]
 8002f48:	e7ee      	b.n	8002f28 <_free_r+0x20>
 8002f4a:	001a      	movs	r2, r3
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d001      	beq.n	8002f56 <_free_r+0x4e>
 8002f52:	42a3      	cmp	r3, r4
 8002f54:	d9f9      	bls.n	8002f4a <_free_r+0x42>
 8002f56:	6811      	ldr	r1, [r2, #0]
 8002f58:	1850      	adds	r0, r2, r1
 8002f5a:	42a0      	cmp	r0, r4
 8002f5c:	d10b      	bne.n	8002f76 <_free_r+0x6e>
 8002f5e:	6820      	ldr	r0, [r4, #0]
 8002f60:	1809      	adds	r1, r1, r0
 8002f62:	1850      	adds	r0, r2, r1
 8002f64:	6011      	str	r1, [r2, #0]
 8002f66:	4283      	cmp	r3, r0
 8002f68:	d1e0      	bne.n	8002f2c <_free_r+0x24>
 8002f6a:	6818      	ldr	r0, [r3, #0]
 8002f6c:	685b      	ldr	r3, [r3, #4]
 8002f6e:	1841      	adds	r1, r0, r1
 8002f70:	6011      	str	r1, [r2, #0]
 8002f72:	6053      	str	r3, [r2, #4]
 8002f74:	e7da      	b.n	8002f2c <_free_r+0x24>
 8002f76:	42a0      	cmp	r0, r4
 8002f78:	d902      	bls.n	8002f80 <_free_r+0x78>
 8002f7a:	230c      	movs	r3, #12
 8002f7c:	602b      	str	r3, [r5, #0]
 8002f7e:	e7d5      	b.n	8002f2c <_free_r+0x24>
 8002f80:	6820      	ldr	r0, [r4, #0]
 8002f82:	1821      	adds	r1, r4, r0
 8002f84:	428b      	cmp	r3, r1
 8002f86:	d103      	bne.n	8002f90 <_free_r+0x88>
 8002f88:	6819      	ldr	r1, [r3, #0]
 8002f8a:	685b      	ldr	r3, [r3, #4]
 8002f8c:	1809      	adds	r1, r1, r0
 8002f8e:	6021      	str	r1, [r4, #0]
 8002f90:	6063      	str	r3, [r4, #4]
 8002f92:	6054      	str	r4, [r2, #4]
 8002f94:	e7ca      	b.n	8002f2c <_free_r+0x24>
 8002f96:	46c0      	nop			@ (mov r8, r8)
 8002f98:	2000020c 	.word	0x2000020c

08002f9c <sbrk_aligned>:
 8002f9c:	b570      	push	{r4, r5, r6, lr}
 8002f9e:	4e0f      	ldr	r6, [pc, #60]	@ (8002fdc <sbrk_aligned+0x40>)
 8002fa0:	000d      	movs	r5, r1
 8002fa2:	6831      	ldr	r1, [r6, #0]
 8002fa4:	0004      	movs	r4, r0
 8002fa6:	2900      	cmp	r1, #0
 8002fa8:	d102      	bne.n	8002fb0 <sbrk_aligned+0x14>
 8002faa:	f000 fb99 	bl	80036e0 <_sbrk_r>
 8002fae:	6030      	str	r0, [r6, #0]
 8002fb0:	0029      	movs	r1, r5
 8002fb2:	0020      	movs	r0, r4
 8002fb4:	f000 fb94 	bl	80036e0 <_sbrk_r>
 8002fb8:	1c43      	adds	r3, r0, #1
 8002fba:	d103      	bne.n	8002fc4 <sbrk_aligned+0x28>
 8002fbc:	2501      	movs	r5, #1
 8002fbe:	426d      	negs	r5, r5
 8002fc0:	0028      	movs	r0, r5
 8002fc2:	bd70      	pop	{r4, r5, r6, pc}
 8002fc4:	2303      	movs	r3, #3
 8002fc6:	1cc5      	adds	r5, r0, #3
 8002fc8:	439d      	bics	r5, r3
 8002fca:	42a8      	cmp	r0, r5
 8002fcc:	d0f8      	beq.n	8002fc0 <sbrk_aligned+0x24>
 8002fce:	1a29      	subs	r1, r5, r0
 8002fd0:	0020      	movs	r0, r4
 8002fd2:	f000 fb85 	bl	80036e0 <_sbrk_r>
 8002fd6:	3001      	adds	r0, #1
 8002fd8:	d1f2      	bne.n	8002fc0 <sbrk_aligned+0x24>
 8002fda:	e7ef      	b.n	8002fbc <sbrk_aligned+0x20>
 8002fdc:	20000208 	.word	0x20000208

08002fe0 <_malloc_r>:
 8002fe0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002fe2:	2203      	movs	r2, #3
 8002fe4:	1ccb      	adds	r3, r1, #3
 8002fe6:	4393      	bics	r3, r2
 8002fe8:	3308      	adds	r3, #8
 8002fea:	0005      	movs	r5, r0
 8002fec:	001f      	movs	r7, r3
 8002fee:	2b0c      	cmp	r3, #12
 8002ff0:	d234      	bcs.n	800305c <_malloc_r+0x7c>
 8002ff2:	270c      	movs	r7, #12
 8002ff4:	42b9      	cmp	r1, r7
 8002ff6:	d833      	bhi.n	8003060 <_malloc_r+0x80>
 8002ff8:	0028      	movs	r0, r5
 8002ffa:	f000 f871 	bl	80030e0 <__malloc_lock>
 8002ffe:	4e37      	ldr	r6, [pc, #220]	@ (80030dc <_malloc_r+0xfc>)
 8003000:	6833      	ldr	r3, [r6, #0]
 8003002:	001c      	movs	r4, r3
 8003004:	2c00      	cmp	r4, #0
 8003006:	d12f      	bne.n	8003068 <_malloc_r+0x88>
 8003008:	0039      	movs	r1, r7
 800300a:	0028      	movs	r0, r5
 800300c:	f7ff ffc6 	bl	8002f9c <sbrk_aligned>
 8003010:	0004      	movs	r4, r0
 8003012:	1c43      	adds	r3, r0, #1
 8003014:	d15f      	bne.n	80030d6 <_malloc_r+0xf6>
 8003016:	6834      	ldr	r4, [r6, #0]
 8003018:	9400      	str	r4, [sp, #0]
 800301a:	9b00      	ldr	r3, [sp, #0]
 800301c:	2b00      	cmp	r3, #0
 800301e:	d14a      	bne.n	80030b6 <_malloc_r+0xd6>
 8003020:	2c00      	cmp	r4, #0
 8003022:	d052      	beq.n	80030ca <_malloc_r+0xea>
 8003024:	6823      	ldr	r3, [r4, #0]
 8003026:	0028      	movs	r0, r5
 8003028:	18e3      	adds	r3, r4, r3
 800302a:	9900      	ldr	r1, [sp, #0]
 800302c:	9301      	str	r3, [sp, #4]
 800302e:	f000 fb57 	bl	80036e0 <_sbrk_r>
 8003032:	9b01      	ldr	r3, [sp, #4]
 8003034:	4283      	cmp	r3, r0
 8003036:	d148      	bne.n	80030ca <_malloc_r+0xea>
 8003038:	6823      	ldr	r3, [r4, #0]
 800303a:	0028      	movs	r0, r5
 800303c:	1aff      	subs	r7, r7, r3
 800303e:	0039      	movs	r1, r7
 8003040:	f7ff ffac 	bl	8002f9c <sbrk_aligned>
 8003044:	3001      	adds	r0, #1
 8003046:	d040      	beq.n	80030ca <_malloc_r+0xea>
 8003048:	6823      	ldr	r3, [r4, #0]
 800304a:	19db      	adds	r3, r3, r7
 800304c:	6023      	str	r3, [r4, #0]
 800304e:	6833      	ldr	r3, [r6, #0]
 8003050:	685a      	ldr	r2, [r3, #4]
 8003052:	2a00      	cmp	r2, #0
 8003054:	d133      	bne.n	80030be <_malloc_r+0xde>
 8003056:	9b00      	ldr	r3, [sp, #0]
 8003058:	6033      	str	r3, [r6, #0]
 800305a:	e019      	b.n	8003090 <_malloc_r+0xb0>
 800305c:	2b00      	cmp	r3, #0
 800305e:	dac9      	bge.n	8002ff4 <_malloc_r+0x14>
 8003060:	230c      	movs	r3, #12
 8003062:	602b      	str	r3, [r5, #0]
 8003064:	2000      	movs	r0, #0
 8003066:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003068:	6821      	ldr	r1, [r4, #0]
 800306a:	1bc9      	subs	r1, r1, r7
 800306c:	d420      	bmi.n	80030b0 <_malloc_r+0xd0>
 800306e:	290b      	cmp	r1, #11
 8003070:	d90a      	bls.n	8003088 <_malloc_r+0xa8>
 8003072:	19e2      	adds	r2, r4, r7
 8003074:	6027      	str	r7, [r4, #0]
 8003076:	42a3      	cmp	r3, r4
 8003078:	d104      	bne.n	8003084 <_malloc_r+0xa4>
 800307a:	6032      	str	r2, [r6, #0]
 800307c:	6863      	ldr	r3, [r4, #4]
 800307e:	6011      	str	r1, [r2, #0]
 8003080:	6053      	str	r3, [r2, #4]
 8003082:	e005      	b.n	8003090 <_malloc_r+0xb0>
 8003084:	605a      	str	r2, [r3, #4]
 8003086:	e7f9      	b.n	800307c <_malloc_r+0x9c>
 8003088:	6862      	ldr	r2, [r4, #4]
 800308a:	42a3      	cmp	r3, r4
 800308c:	d10e      	bne.n	80030ac <_malloc_r+0xcc>
 800308e:	6032      	str	r2, [r6, #0]
 8003090:	0028      	movs	r0, r5
 8003092:	f000 f82d 	bl	80030f0 <__malloc_unlock>
 8003096:	0020      	movs	r0, r4
 8003098:	2207      	movs	r2, #7
 800309a:	300b      	adds	r0, #11
 800309c:	1d23      	adds	r3, r4, #4
 800309e:	4390      	bics	r0, r2
 80030a0:	1ac2      	subs	r2, r0, r3
 80030a2:	4298      	cmp	r0, r3
 80030a4:	d0df      	beq.n	8003066 <_malloc_r+0x86>
 80030a6:	1a1b      	subs	r3, r3, r0
 80030a8:	50a3      	str	r3, [r4, r2]
 80030aa:	e7dc      	b.n	8003066 <_malloc_r+0x86>
 80030ac:	605a      	str	r2, [r3, #4]
 80030ae:	e7ef      	b.n	8003090 <_malloc_r+0xb0>
 80030b0:	0023      	movs	r3, r4
 80030b2:	6864      	ldr	r4, [r4, #4]
 80030b4:	e7a6      	b.n	8003004 <_malloc_r+0x24>
 80030b6:	9c00      	ldr	r4, [sp, #0]
 80030b8:	6863      	ldr	r3, [r4, #4]
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	e7ad      	b.n	800301a <_malloc_r+0x3a>
 80030be:	001a      	movs	r2, r3
 80030c0:	685b      	ldr	r3, [r3, #4]
 80030c2:	42a3      	cmp	r3, r4
 80030c4:	d1fb      	bne.n	80030be <_malloc_r+0xde>
 80030c6:	2300      	movs	r3, #0
 80030c8:	e7da      	b.n	8003080 <_malloc_r+0xa0>
 80030ca:	230c      	movs	r3, #12
 80030cc:	0028      	movs	r0, r5
 80030ce:	602b      	str	r3, [r5, #0]
 80030d0:	f000 f80e 	bl	80030f0 <__malloc_unlock>
 80030d4:	e7c6      	b.n	8003064 <_malloc_r+0x84>
 80030d6:	6007      	str	r7, [r0, #0]
 80030d8:	e7da      	b.n	8003090 <_malloc_r+0xb0>
 80030da:	46c0      	nop			@ (mov r8, r8)
 80030dc:	2000020c 	.word	0x2000020c

080030e0 <__malloc_lock>:
 80030e0:	b510      	push	{r4, lr}
 80030e2:	4802      	ldr	r0, [pc, #8]	@ (80030ec <__malloc_lock+0xc>)
 80030e4:	f7ff ff0e 	bl	8002f04 <__retarget_lock_acquire_recursive>
 80030e8:	bd10      	pop	{r4, pc}
 80030ea:	46c0      	nop			@ (mov r8, r8)
 80030ec:	20000204 	.word	0x20000204

080030f0 <__malloc_unlock>:
 80030f0:	b510      	push	{r4, lr}
 80030f2:	4802      	ldr	r0, [pc, #8]	@ (80030fc <__malloc_unlock+0xc>)
 80030f4:	f7ff ff07 	bl	8002f06 <__retarget_lock_release_recursive>
 80030f8:	bd10      	pop	{r4, pc}
 80030fa:	46c0      	nop			@ (mov r8, r8)
 80030fc:	20000204 	.word	0x20000204

08003100 <__ssputs_r>:
 8003100:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003102:	688e      	ldr	r6, [r1, #8]
 8003104:	b085      	sub	sp, #20
 8003106:	001f      	movs	r7, r3
 8003108:	000c      	movs	r4, r1
 800310a:	680b      	ldr	r3, [r1, #0]
 800310c:	9002      	str	r0, [sp, #8]
 800310e:	9203      	str	r2, [sp, #12]
 8003110:	42be      	cmp	r6, r7
 8003112:	d830      	bhi.n	8003176 <__ssputs_r+0x76>
 8003114:	210c      	movs	r1, #12
 8003116:	5e62      	ldrsh	r2, [r4, r1]
 8003118:	2190      	movs	r1, #144	@ 0x90
 800311a:	00c9      	lsls	r1, r1, #3
 800311c:	420a      	tst	r2, r1
 800311e:	d028      	beq.n	8003172 <__ssputs_r+0x72>
 8003120:	2003      	movs	r0, #3
 8003122:	6921      	ldr	r1, [r4, #16]
 8003124:	1a5b      	subs	r3, r3, r1
 8003126:	9301      	str	r3, [sp, #4]
 8003128:	6963      	ldr	r3, [r4, #20]
 800312a:	4343      	muls	r3, r0
 800312c:	9801      	ldr	r0, [sp, #4]
 800312e:	0fdd      	lsrs	r5, r3, #31
 8003130:	18ed      	adds	r5, r5, r3
 8003132:	1c7b      	adds	r3, r7, #1
 8003134:	181b      	adds	r3, r3, r0
 8003136:	106d      	asrs	r5, r5, #1
 8003138:	42ab      	cmp	r3, r5
 800313a:	d900      	bls.n	800313e <__ssputs_r+0x3e>
 800313c:	001d      	movs	r5, r3
 800313e:	0552      	lsls	r2, r2, #21
 8003140:	d528      	bpl.n	8003194 <__ssputs_r+0x94>
 8003142:	0029      	movs	r1, r5
 8003144:	9802      	ldr	r0, [sp, #8]
 8003146:	f7ff ff4b 	bl	8002fe0 <_malloc_r>
 800314a:	1e06      	subs	r6, r0, #0
 800314c:	d02c      	beq.n	80031a8 <__ssputs_r+0xa8>
 800314e:	9a01      	ldr	r2, [sp, #4]
 8003150:	6921      	ldr	r1, [r4, #16]
 8003152:	f000 fae2 	bl	800371a <memcpy>
 8003156:	89a2      	ldrh	r2, [r4, #12]
 8003158:	4b18      	ldr	r3, [pc, #96]	@ (80031bc <__ssputs_r+0xbc>)
 800315a:	401a      	ands	r2, r3
 800315c:	2380      	movs	r3, #128	@ 0x80
 800315e:	4313      	orrs	r3, r2
 8003160:	81a3      	strh	r3, [r4, #12]
 8003162:	9b01      	ldr	r3, [sp, #4]
 8003164:	6126      	str	r6, [r4, #16]
 8003166:	18f6      	adds	r6, r6, r3
 8003168:	6026      	str	r6, [r4, #0]
 800316a:	003e      	movs	r6, r7
 800316c:	6165      	str	r5, [r4, #20]
 800316e:	1aed      	subs	r5, r5, r3
 8003170:	60a5      	str	r5, [r4, #8]
 8003172:	42be      	cmp	r6, r7
 8003174:	d900      	bls.n	8003178 <__ssputs_r+0x78>
 8003176:	003e      	movs	r6, r7
 8003178:	0032      	movs	r2, r6
 800317a:	9903      	ldr	r1, [sp, #12]
 800317c:	6820      	ldr	r0, [r4, #0]
 800317e:	f000 fa9b 	bl	80036b8 <memmove>
 8003182:	2000      	movs	r0, #0
 8003184:	68a3      	ldr	r3, [r4, #8]
 8003186:	1b9b      	subs	r3, r3, r6
 8003188:	60a3      	str	r3, [r4, #8]
 800318a:	6823      	ldr	r3, [r4, #0]
 800318c:	199b      	adds	r3, r3, r6
 800318e:	6023      	str	r3, [r4, #0]
 8003190:	b005      	add	sp, #20
 8003192:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003194:	002a      	movs	r2, r5
 8003196:	9802      	ldr	r0, [sp, #8]
 8003198:	f000 fac8 	bl	800372c <_realloc_r>
 800319c:	1e06      	subs	r6, r0, #0
 800319e:	d1e0      	bne.n	8003162 <__ssputs_r+0x62>
 80031a0:	6921      	ldr	r1, [r4, #16]
 80031a2:	9802      	ldr	r0, [sp, #8]
 80031a4:	f7ff feb0 	bl	8002f08 <_free_r>
 80031a8:	230c      	movs	r3, #12
 80031aa:	2001      	movs	r0, #1
 80031ac:	9a02      	ldr	r2, [sp, #8]
 80031ae:	4240      	negs	r0, r0
 80031b0:	6013      	str	r3, [r2, #0]
 80031b2:	89a2      	ldrh	r2, [r4, #12]
 80031b4:	3334      	adds	r3, #52	@ 0x34
 80031b6:	4313      	orrs	r3, r2
 80031b8:	81a3      	strh	r3, [r4, #12]
 80031ba:	e7e9      	b.n	8003190 <__ssputs_r+0x90>
 80031bc:	fffffb7f 	.word	0xfffffb7f

080031c0 <_svfiprintf_r>:
 80031c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80031c2:	b0a1      	sub	sp, #132	@ 0x84
 80031c4:	9003      	str	r0, [sp, #12]
 80031c6:	001d      	movs	r5, r3
 80031c8:	898b      	ldrh	r3, [r1, #12]
 80031ca:	000f      	movs	r7, r1
 80031cc:	0016      	movs	r6, r2
 80031ce:	061b      	lsls	r3, r3, #24
 80031d0:	d511      	bpl.n	80031f6 <_svfiprintf_r+0x36>
 80031d2:	690b      	ldr	r3, [r1, #16]
 80031d4:	2b00      	cmp	r3, #0
 80031d6:	d10e      	bne.n	80031f6 <_svfiprintf_r+0x36>
 80031d8:	2140      	movs	r1, #64	@ 0x40
 80031da:	f7ff ff01 	bl	8002fe0 <_malloc_r>
 80031de:	6038      	str	r0, [r7, #0]
 80031e0:	6138      	str	r0, [r7, #16]
 80031e2:	2800      	cmp	r0, #0
 80031e4:	d105      	bne.n	80031f2 <_svfiprintf_r+0x32>
 80031e6:	230c      	movs	r3, #12
 80031e8:	9a03      	ldr	r2, [sp, #12]
 80031ea:	6013      	str	r3, [r2, #0]
 80031ec:	2001      	movs	r0, #1
 80031ee:	4240      	negs	r0, r0
 80031f0:	e0cf      	b.n	8003392 <_svfiprintf_r+0x1d2>
 80031f2:	2340      	movs	r3, #64	@ 0x40
 80031f4:	617b      	str	r3, [r7, #20]
 80031f6:	2300      	movs	r3, #0
 80031f8:	ac08      	add	r4, sp, #32
 80031fa:	6163      	str	r3, [r4, #20]
 80031fc:	3320      	adds	r3, #32
 80031fe:	7663      	strb	r3, [r4, #25]
 8003200:	3310      	adds	r3, #16
 8003202:	76a3      	strb	r3, [r4, #26]
 8003204:	9507      	str	r5, [sp, #28]
 8003206:	0035      	movs	r5, r6
 8003208:	782b      	ldrb	r3, [r5, #0]
 800320a:	2b00      	cmp	r3, #0
 800320c:	d001      	beq.n	8003212 <_svfiprintf_r+0x52>
 800320e:	2b25      	cmp	r3, #37	@ 0x25
 8003210:	d148      	bne.n	80032a4 <_svfiprintf_r+0xe4>
 8003212:	1bab      	subs	r3, r5, r6
 8003214:	9305      	str	r3, [sp, #20]
 8003216:	42b5      	cmp	r5, r6
 8003218:	d00b      	beq.n	8003232 <_svfiprintf_r+0x72>
 800321a:	0032      	movs	r2, r6
 800321c:	0039      	movs	r1, r7
 800321e:	9803      	ldr	r0, [sp, #12]
 8003220:	f7ff ff6e 	bl	8003100 <__ssputs_r>
 8003224:	3001      	adds	r0, #1
 8003226:	d100      	bne.n	800322a <_svfiprintf_r+0x6a>
 8003228:	e0ae      	b.n	8003388 <_svfiprintf_r+0x1c8>
 800322a:	6963      	ldr	r3, [r4, #20]
 800322c:	9a05      	ldr	r2, [sp, #20]
 800322e:	189b      	adds	r3, r3, r2
 8003230:	6163      	str	r3, [r4, #20]
 8003232:	782b      	ldrb	r3, [r5, #0]
 8003234:	2b00      	cmp	r3, #0
 8003236:	d100      	bne.n	800323a <_svfiprintf_r+0x7a>
 8003238:	e0a6      	b.n	8003388 <_svfiprintf_r+0x1c8>
 800323a:	2201      	movs	r2, #1
 800323c:	2300      	movs	r3, #0
 800323e:	4252      	negs	r2, r2
 8003240:	6062      	str	r2, [r4, #4]
 8003242:	a904      	add	r1, sp, #16
 8003244:	3254      	adds	r2, #84	@ 0x54
 8003246:	1852      	adds	r2, r2, r1
 8003248:	1c6e      	adds	r6, r5, #1
 800324a:	6023      	str	r3, [r4, #0]
 800324c:	60e3      	str	r3, [r4, #12]
 800324e:	60a3      	str	r3, [r4, #8]
 8003250:	7013      	strb	r3, [r2, #0]
 8003252:	65a3      	str	r3, [r4, #88]	@ 0x58
 8003254:	4b54      	ldr	r3, [pc, #336]	@ (80033a8 <_svfiprintf_r+0x1e8>)
 8003256:	2205      	movs	r2, #5
 8003258:	0018      	movs	r0, r3
 800325a:	7831      	ldrb	r1, [r6, #0]
 800325c:	9305      	str	r3, [sp, #20]
 800325e:	f000 fa51 	bl	8003704 <memchr>
 8003262:	1c75      	adds	r5, r6, #1
 8003264:	2800      	cmp	r0, #0
 8003266:	d11f      	bne.n	80032a8 <_svfiprintf_r+0xe8>
 8003268:	6822      	ldr	r2, [r4, #0]
 800326a:	06d3      	lsls	r3, r2, #27
 800326c:	d504      	bpl.n	8003278 <_svfiprintf_r+0xb8>
 800326e:	2353      	movs	r3, #83	@ 0x53
 8003270:	a904      	add	r1, sp, #16
 8003272:	185b      	adds	r3, r3, r1
 8003274:	2120      	movs	r1, #32
 8003276:	7019      	strb	r1, [r3, #0]
 8003278:	0713      	lsls	r3, r2, #28
 800327a:	d504      	bpl.n	8003286 <_svfiprintf_r+0xc6>
 800327c:	2353      	movs	r3, #83	@ 0x53
 800327e:	a904      	add	r1, sp, #16
 8003280:	185b      	adds	r3, r3, r1
 8003282:	212b      	movs	r1, #43	@ 0x2b
 8003284:	7019      	strb	r1, [r3, #0]
 8003286:	7833      	ldrb	r3, [r6, #0]
 8003288:	2b2a      	cmp	r3, #42	@ 0x2a
 800328a:	d016      	beq.n	80032ba <_svfiprintf_r+0xfa>
 800328c:	0035      	movs	r5, r6
 800328e:	2100      	movs	r1, #0
 8003290:	200a      	movs	r0, #10
 8003292:	68e3      	ldr	r3, [r4, #12]
 8003294:	782a      	ldrb	r2, [r5, #0]
 8003296:	1c6e      	adds	r6, r5, #1
 8003298:	3a30      	subs	r2, #48	@ 0x30
 800329a:	2a09      	cmp	r2, #9
 800329c:	d950      	bls.n	8003340 <_svfiprintf_r+0x180>
 800329e:	2900      	cmp	r1, #0
 80032a0:	d111      	bne.n	80032c6 <_svfiprintf_r+0x106>
 80032a2:	e017      	b.n	80032d4 <_svfiprintf_r+0x114>
 80032a4:	3501      	adds	r5, #1
 80032a6:	e7af      	b.n	8003208 <_svfiprintf_r+0x48>
 80032a8:	9b05      	ldr	r3, [sp, #20]
 80032aa:	6822      	ldr	r2, [r4, #0]
 80032ac:	1ac0      	subs	r0, r0, r3
 80032ae:	2301      	movs	r3, #1
 80032b0:	4083      	lsls	r3, r0
 80032b2:	4313      	orrs	r3, r2
 80032b4:	002e      	movs	r6, r5
 80032b6:	6023      	str	r3, [r4, #0]
 80032b8:	e7cc      	b.n	8003254 <_svfiprintf_r+0x94>
 80032ba:	9b07      	ldr	r3, [sp, #28]
 80032bc:	1d19      	adds	r1, r3, #4
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	9107      	str	r1, [sp, #28]
 80032c2:	2b00      	cmp	r3, #0
 80032c4:	db01      	blt.n	80032ca <_svfiprintf_r+0x10a>
 80032c6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80032c8:	e004      	b.n	80032d4 <_svfiprintf_r+0x114>
 80032ca:	425b      	negs	r3, r3
 80032cc:	60e3      	str	r3, [r4, #12]
 80032ce:	2302      	movs	r3, #2
 80032d0:	4313      	orrs	r3, r2
 80032d2:	6023      	str	r3, [r4, #0]
 80032d4:	782b      	ldrb	r3, [r5, #0]
 80032d6:	2b2e      	cmp	r3, #46	@ 0x2e
 80032d8:	d10c      	bne.n	80032f4 <_svfiprintf_r+0x134>
 80032da:	786b      	ldrb	r3, [r5, #1]
 80032dc:	2b2a      	cmp	r3, #42	@ 0x2a
 80032de:	d134      	bne.n	800334a <_svfiprintf_r+0x18a>
 80032e0:	9b07      	ldr	r3, [sp, #28]
 80032e2:	3502      	adds	r5, #2
 80032e4:	1d1a      	adds	r2, r3, #4
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	9207      	str	r2, [sp, #28]
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	da01      	bge.n	80032f2 <_svfiprintf_r+0x132>
 80032ee:	2301      	movs	r3, #1
 80032f0:	425b      	negs	r3, r3
 80032f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80032f4:	4e2d      	ldr	r6, [pc, #180]	@ (80033ac <_svfiprintf_r+0x1ec>)
 80032f6:	2203      	movs	r2, #3
 80032f8:	0030      	movs	r0, r6
 80032fa:	7829      	ldrb	r1, [r5, #0]
 80032fc:	f000 fa02 	bl	8003704 <memchr>
 8003300:	2800      	cmp	r0, #0
 8003302:	d006      	beq.n	8003312 <_svfiprintf_r+0x152>
 8003304:	2340      	movs	r3, #64	@ 0x40
 8003306:	1b80      	subs	r0, r0, r6
 8003308:	4083      	lsls	r3, r0
 800330a:	6822      	ldr	r2, [r4, #0]
 800330c:	3501      	adds	r5, #1
 800330e:	4313      	orrs	r3, r2
 8003310:	6023      	str	r3, [r4, #0]
 8003312:	7829      	ldrb	r1, [r5, #0]
 8003314:	2206      	movs	r2, #6
 8003316:	4826      	ldr	r0, [pc, #152]	@ (80033b0 <_svfiprintf_r+0x1f0>)
 8003318:	1c6e      	adds	r6, r5, #1
 800331a:	7621      	strb	r1, [r4, #24]
 800331c:	f000 f9f2 	bl	8003704 <memchr>
 8003320:	2800      	cmp	r0, #0
 8003322:	d038      	beq.n	8003396 <_svfiprintf_r+0x1d6>
 8003324:	4b23      	ldr	r3, [pc, #140]	@ (80033b4 <_svfiprintf_r+0x1f4>)
 8003326:	2b00      	cmp	r3, #0
 8003328:	d122      	bne.n	8003370 <_svfiprintf_r+0x1b0>
 800332a:	2207      	movs	r2, #7
 800332c:	9b07      	ldr	r3, [sp, #28]
 800332e:	3307      	adds	r3, #7
 8003330:	4393      	bics	r3, r2
 8003332:	3308      	adds	r3, #8
 8003334:	9307      	str	r3, [sp, #28]
 8003336:	6963      	ldr	r3, [r4, #20]
 8003338:	9a04      	ldr	r2, [sp, #16]
 800333a:	189b      	adds	r3, r3, r2
 800333c:	6163      	str	r3, [r4, #20]
 800333e:	e762      	b.n	8003206 <_svfiprintf_r+0x46>
 8003340:	4343      	muls	r3, r0
 8003342:	0035      	movs	r5, r6
 8003344:	2101      	movs	r1, #1
 8003346:	189b      	adds	r3, r3, r2
 8003348:	e7a4      	b.n	8003294 <_svfiprintf_r+0xd4>
 800334a:	2300      	movs	r3, #0
 800334c:	200a      	movs	r0, #10
 800334e:	0019      	movs	r1, r3
 8003350:	3501      	adds	r5, #1
 8003352:	6063      	str	r3, [r4, #4]
 8003354:	782a      	ldrb	r2, [r5, #0]
 8003356:	1c6e      	adds	r6, r5, #1
 8003358:	3a30      	subs	r2, #48	@ 0x30
 800335a:	2a09      	cmp	r2, #9
 800335c:	d903      	bls.n	8003366 <_svfiprintf_r+0x1a6>
 800335e:	2b00      	cmp	r3, #0
 8003360:	d0c8      	beq.n	80032f4 <_svfiprintf_r+0x134>
 8003362:	9109      	str	r1, [sp, #36]	@ 0x24
 8003364:	e7c6      	b.n	80032f4 <_svfiprintf_r+0x134>
 8003366:	4341      	muls	r1, r0
 8003368:	0035      	movs	r5, r6
 800336a:	2301      	movs	r3, #1
 800336c:	1889      	adds	r1, r1, r2
 800336e:	e7f1      	b.n	8003354 <_svfiprintf_r+0x194>
 8003370:	aa07      	add	r2, sp, #28
 8003372:	9200      	str	r2, [sp, #0]
 8003374:	0021      	movs	r1, r4
 8003376:	003a      	movs	r2, r7
 8003378:	4b0f      	ldr	r3, [pc, #60]	@ (80033b8 <_svfiprintf_r+0x1f8>)
 800337a:	9803      	ldr	r0, [sp, #12]
 800337c:	e000      	b.n	8003380 <_svfiprintf_r+0x1c0>
 800337e:	bf00      	nop
 8003380:	9004      	str	r0, [sp, #16]
 8003382:	9b04      	ldr	r3, [sp, #16]
 8003384:	3301      	adds	r3, #1
 8003386:	d1d6      	bne.n	8003336 <_svfiprintf_r+0x176>
 8003388:	89bb      	ldrh	r3, [r7, #12]
 800338a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800338c:	065b      	lsls	r3, r3, #25
 800338e:	d500      	bpl.n	8003392 <_svfiprintf_r+0x1d2>
 8003390:	e72c      	b.n	80031ec <_svfiprintf_r+0x2c>
 8003392:	b021      	add	sp, #132	@ 0x84
 8003394:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003396:	aa07      	add	r2, sp, #28
 8003398:	9200      	str	r2, [sp, #0]
 800339a:	0021      	movs	r1, r4
 800339c:	003a      	movs	r2, r7
 800339e:	4b06      	ldr	r3, [pc, #24]	@ (80033b8 <_svfiprintf_r+0x1f8>)
 80033a0:	9803      	ldr	r0, [sp, #12]
 80033a2:	f000 f87b 	bl	800349c <_printf_i>
 80033a6:	e7eb      	b.n	8003380 <_svfiprintf_r+0x1c0>
 80033a8:	0800388b 	.word	0x0800388b
 80033ac:	08003891 	.word	0x08003891
 80033b0:	08003895 	.word	0x08003895
 80033b4:	00000000 	.word	0x00000000
 80033b8:	08003101 	.word	0x08003101

080033bc <_printf_common>:
 80033bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80033be:	0016      	movs	r6, r2
 80033c0:	9301      	str	r3, [sp, #4]
 80033c2:	688a      	ldr	r2, [r1, #8]
 80033c4:	690b      	ldr	r3, [r1, #16]
 80033c6:	000c      	movs	r4, r1
 80033c8:	9000      	str	r0, [sp, #0]
 80033ca:	4293      	cmp	r3, r2
 80033cc:	da00      	bge.n	80033d0 <_printf_common+0x14>
 80033ce:	0013      	movs	r3, r2
 80033d0:	0022      	movs	r2, r4
 80033d2:	6033      	str	r3, [r6, #0]
 80033d4:	3243      	adds	r2, #67	@ 0x43
 80033d6:	7812      	ldrb	r2, [r2, #0]
 80033d8:	2a00      	cmp	r2, #0
 80033da:	d001      	beq.n	80033e0 <_printf_common+0x24>
 80033dc:	3301      	adds	r3, #1
 80033de:	6033      	str	r3, [r6, #0]
 80033e0:	6823      	ldr	r3, [r4, #0]
 80033e2:	069b      	lsls	r3, r3, #26
 80033e4:	d502      	bpl.n	80033ec <_printf_common+0x30>
 80033e6:	6833      	ldr	r3, [r6, #0]
 80033e8:	3302      	adds	r3, #2
 80033ea:	6033      	str	r3, [r6, #0]
 80033ec:	6822      	ldr	r2, [r4, #0]
 80033ee:	2306      	movs	r3, #6
 80033f0:	0015      	movs	r5, r2
 80033f2:	401d      	ands	r5, r3
 80033f4:	421a      	tst	r2, r3
 80033f6:	d027      	beq.n	8003448 <_printf_common+0x8c>
 80033f8:	0023      	movs	r3, r4
 80033fa:	3343      	adds	r3, #67	@ 0x43
 80033fc:	781b      	ldrb	r3, [r3, #0]
 80033fe:	1e5a      	subs	r2, r3, #1
 8003400:	4193      	sbcs	r3, r2
 8003402:	6822      	ldr	r2, [r4, #0]
 8003404:	0692      	lsls	r2, r2, #26
 8003406:	d430      	bmi.n	800346a <_printf_common+0xae>
 8003408:	0022      	movs	r2, r4
 800340a:	9901      	ldr	r1, [sp, #4]
 800340c:	9800      	ldr	r0, [sp, #0]
 800340e:	9d08      	ldr	r5, [sp, #32]
 8003410:	3243      	adds	r2, #67	@ 0x43
 8003412:	47a8      	blx	r5
 8003414:	3001      	adds	r0, #1
 8003416:	d025      	beq.n	8003464 <_printf_common+0xa8>
 8003418:	2206      	movs	r2, #6
 800341a:	6823      	ldr	r3, [r4, #0]
 800341c:	2500      	movs	r5, #0
 800341e:	4013      	ands	r3, r2
 8003420:	2b04      	cmp	r3, #4
 8003422:	d105      	bne.n	8003430 <_printf_common+0x74>
 8003424:	6833      	ldr	r3, [r6, #0]
 8003426:	68e5      	ldr	r5, [r4, #12]
 8003428:	1aed      	subs	r5, r5, r3
 800342a:	43eb      	mvns	r3, r5
 800342c:	17db      	asrs	r3, r3, #31
 800342e:	401d      	ands	r5, r3
 8003430:	68a3      	ldr	r3, [r4, #8]
 8003432:	6922      	ldr	r2, [r4, #16]
 8003434:	4293      	cmp	r3, r2
 8003436:	dd01      	ble.n	800343c <_printf_common+0x80>
 8003438:	1a9b      	subs	r3, r3, r2
 800343a:	18ed      	adds	r5, r5, r3
 800343c:	2600      	movs	r6, #0
 800343e:	42b5      	cmp	r5, r6
 8003440:	d120      	bne.n	8003484 <_printf_common+0xc8>
 8003442:	2000      	movs	r0, #0
 8003444:	e010      	b.n	8003468 <_printf_common+0xac>
 8003446:	3501      	adds	r5, #1
 8003448:	68e3      	ldr	r3, [r4, #12]
 800344a:	6832      	ldr	r2, [r6, #0]
 800344c:	1a9b      	subs	r3, r3, r2
 800344e:	42ab      	cmp	r3, r5
 8003450:	ddd2      	ble.n	80033f8 <_printf_common+0x3c>
 8003452:	0022      	movs	r2, r4
 8003454:	2301      	movs	r3, #1
 8003456:	9901      	ldr	r1, [sp, #4]
 8003458:	9800      	ldr	r0, [sp, #0]
 800345a:	9f08      	ldr	r7, [sp, #32]
 800345c:	3219      	adds	r2, #25
 800345e:	47b8      	blx	r7
 8003460:	3001      	adds	r0, #1
 8003462:	d1f0      	bne.n	8003446 <_printf_common+0x8a>
 8003464:	2001      	movs	r0, #1
 8003466:	4240      	negs	r0, r0
 8003468:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800346a:	2030      	movs	r0, #48	@ 0x30
 800346c:	18e1      	adds	r1, r4, r3
 800346e:	3143      	adds	r1, #67	@ 0x43
 8003470:	7008      	strb	r0, [r1, #0]
 8003472:	0021      	movs	r1, r4
 8003474:	1c5a      	adds	r2, r3, #1
 8003476:	3145      	adds	r1, #69	@ 0x45
 8003478:	7809      	ldrb	r1, [r1, #0]
 800347a:	18a2      	adds	r2, r4, r2
 800347c:	3243      	adds	r2, #67	@ 0x43
 800347e:	3302      	adds	r3, #2
 8003480:	7011      	strb	r1, [r2, #0]
 8003482:	e7c1      	b.n	8003408 <_printf_common+0x4c>
 8003484:	0022      	movs	r2, r4
 8003486:	2301      	movs	r3, #1
 8003488:	9901      	ldr	r1, [sp, #4]
 800348a:	9800      	ldr	r0, [sp, #0]
 800348c:	9f08      	ldr	r7, [sp, #32]
 800348e:	321a      	adds	r2, #26
 8003490:	47b8      	blx	r7
 8003492:	3001      	adds	r0, #1
 8003494:	d0e6      	beq.n	8003464 <_printf_common+0xa8>
 8003496:	3601      	adds	r6, #1
 8003498:	e7d1      	b.n	800343e <_printf_common+0x82>
	...

0800349c <_printf_i>:
 800349c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800349e:	b08b      	sub	sp, #44	@ 0x2c
 80034a0:	9206      	str	r2, [sp, #24]
 80034a2:	000a      	movs	r2, r1
 80034a4:	3243      	adds	r2, #67	@ 0x43
 80034a6:	9307      	str	r3, [sp, #28]
 80034a8:	9005      	str	r0, [sp, #20]
 80034aa:	9203      	str	r2, [sp, #12]
 80034ac:	7e0a      	ldrb	r2, [r1, #24]
 80034ae:	000c      	movs	r4, r1
 80034b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80034b2:	2a78      	cmp	r2, #120	@ 0x78
 80034b4:	d809      	bhi.n	80034ca <_printf_i+0x2e>
 80034b6:	2a62      	cmp	r2, #98	@ 0x62
 80034b8:	d80b      	bhi.n	80034d2 <_printf_i+0x36>
 80034ba:	2a00      	cmp	r2, #0
 80034bc:	d100      	bne.n	80034c0 <_printf_i+0x24>
 80034be:	e0bc      	b.n	800363a <_printf_i+0x19e>
 80034c0:	497b      	ldr	r1, [pc, #492]	@ (80036b0 <_printf_i+0x214>)
 80034c2:	9104      	str	r1, [sp, #16]
 80034c4:	2a58      	cmp	r2, #88	@ 0x58
 80034c6:	d100      	bne.n	80034ca <_printf_i+0x2e>
 80034c8:	e090      	b.n	80035ec <_printf_i+0x150>
 80034ca:	0025      	movs	r5, r4
 80034cc:	3542      	adds	r5, #66	@ 0x42
 80034ce:	702a      	strb	r2, [r5, #0]
 80034d0:	e022      	b.n	8003518 <_printf_i+0x7c>
 80034d2:	0010      	movs	r0, r2
 80034d4:	3863      	subs	r0, #99	@ 0x63
 80034d6:	2815      	cmp	r0, #21
 80034d8:	d8f7      	bhi.n	80034ca <_printf_i+0x2e>
 80034da:	f7fc fe27 	bl	800012c <__gnu_thumb1_case_shi>
 80034de:	0016      	.short	0x0016
 80034e0:	fff6001f 	.word	0xfff6001f
 80034e4:	fff6fff6 	.word	0xfff6fff6
 80034e8:	001ffff6 	.word	0x001ffff6
 80034ec:	fff6fff6 	.word	0xfff6fff6
 80034f0:	fff6fff6 	.word	0xfff6fff6
 80034f4:	003600a1 	.word	0x003600a1
 80034f8:	fff60080 	.word	0xfff60080
 80034fc:	00b2fff6 	.word	0x00b2fff6
 8003500:	0036fff6 	.word	0x0036fff6
 8003504:	fff6fff6 	.word	0xfff6fff6
 8003508:	0084      	.short	0x0084
 800350a:	0025      	movs	r5, r4
 800350c:	681a      	ldr	r2, [r3, #0]
 800350e:	3542      	adds	r5, #66	@ 0x42
 8003510:	1d11      	adds	r1, r2, #4
 8003512:	6019      	str	r1, [r3, #0]
 8003514:	6813      	ldr	r3, [r2, #0]
 8003516:	702b      	strb	r3, [r5, #0]
 8003518:	2301      	movs	r3, #1
 800351a:	e0a0      	b.n	800365e <_printf_i+0x1c2>
 800351c:	6818      	ldr	r0, [r3, #0]
 800351e:	6809      	ldr	r1, [r1, #0]
 8003520:	1d02      	adds	r2, r0, #4
 8003522:	060d      	lsls	r5, r1, #24
 8003524:	d50b      	bpl.n	800353e <_printf_i+0xa2>
 8003526:	6806      	ldr	r6, [r0, #0]
 8003528:	601a      	str	r2, [r3, #0]
 800352a:	2e00      	cmp	r6, #0
 800352c:	da03      	bge.n	8003536 <_printf_i+0x9a>
 800352e:	232d      	movs	r3, #45	@ 0x2d
 8003530:	9a03      	ldr	r2, [sp, #12]
 8003532:	4276      	negs	r6, r6
 8003534:	7013      	strb	r3, [r2, #0]
 8003536:	4b5e      	ldr	r3, [pc, #376]	@ (80036b0 <_printf_i+0x214>)
 8003538:	270a      	movs	r7, #10
 800353a:	9304      	str	r3, [sp, #16]
 800353c:	e018      	b.n	8003570 <_printf_i+0xd4>
 800353e:	6806      	ldr	r6, [r0, #0]
 8003540:	601a      	str	r2, [r3, #0]
 8003542:	0649      	lsls	r1, r1, #25
 8003544:	d5f1      	bpl.n	800352a <_printf_i+0x8e>
 8003546:	b236      	sxth	r6, r6
 8003548:	e7ef      	b.n	800352a <_printf_i+0x8e>
 800354a:	6808      	ldr	r0, [r1, #0]
 800354c:	6819      	ldr	r1, [r3, #0]
 800354e:	c940      	ldmia	r1!, {r6}
 8003550:	0605      	lsls	r5, r0, #24
 8003552:	d402      	bmi.n	800355a <_printf_i+0xbe>
 8003554:	0640      	lsls	r0, r0, #25
 8003556:	d500      	bpl.n	800355a <_printf_i+0xbe>
 8003558:	b2b6      	uxth	r6, r6
 800355a:	6019      	str	r1, [r3, #0]
 800355c:	4b54      	ldr	r3, [pc, #336]	@ (80036b0 <_printf_i+0x214>)
 800355e:	270a      	movs	r7, #10
 8003560:	9304      	str	r3, [sp, #16]
 8003562:	2a6f      	cmp	r2, #111	@ 0x6f
 8003564:	d100      	bne.n	8003568 <_printf_i+0xcc>
 8003566:	3f02      	subs	r7, #2
 8003568:	0023      	movs	r3, r4
 800356a:	2200      	movs	r2, #0
 800356c:	3343      	adds	r3, #67	@ 0x43
 800356e:	701a      	strb	r2, [r3, #0]
 8003570:	6863      	ldr	r3, [r4, #4]
 8003572:	60a3      	str	r3, [r4, #8]
 8003574:	2b00      	cmp	r3, #0
 8003576:	db03      	blt.n	8003580 <_printf_i+0xe4>
 8003578:	2104      	movs	r1, #4
 800357a:	6822      	ldr	r2, [r4, #0]
 800357c:	438a      	bics	r2, r1
 800357e:	6022      	str	r2, [r4, #0]
 8003580:	2e00      	cmp	r6, #0
 8003582:	d102      	bne.n	800358a <_printf_i+0xee>
 8003584:	9d03      	ldr	r5, [sp, #12]
 8003586:	2b00      	cmp	r3, #0
 8003588:	d00c      	beq.n	80035a4 <_printf_i+0x108>
 800358a:	9d03      	ldr	r5, [sp, #12]
 800358c:	0030      	movs	r0, r6
 800358e:	0039      	movs	r1, r7
 8003590:	f7fc fe5c 	bl	800024c <__aeabi_uidivmod>
 8003594:	9b04      	ldr	r3, [sp, #16]
 8003596:	3d01      	subs	r5, #1
 8003598:	5c5b      	ldrb	r3, [r3, r1]
 800359a:	702b      	strb	r3, [r5, #0]
 800359c:	0033      	movs	r3, r6
 800359e:	0006      	movs	r6, r0
 80035a0:	429f      	cmp	r7, r3
 80035a2:	d9f3      	bls.n	800358c <_printf_i+0xf0>
 80035a4:	2f08      	cmp	r7, #8
 80035a6:	d109      	bne.n	80035bc <_printf_i+0x120>
 80035a8:	6823      	ldr	r3, [r4, #0]
 80035aa:	07db      	lsls	r3, r3, #31
 80035ac:	d506      	bpl.n	80035bc <_printf_i+0x120>
 80035ae:	6862      	ldr	r2, [r4, #4]
 80035b0:	6923      	ldr	r3, [r4, #16]
 80035b2:	429a      	cmp	r2, r3
 80035b4:	dc02      	bgt.n	80035bc <_printf_i+0x120>
 80035b6:	2330      	movs	r3, #48	@ 0x30
 80035b8:	3d01      	subs	r5, #1
 80035ba:	702b      	strb	r3, [r5, #0]
 80035bc:	9b03      	ldr	r3, [sp, #12]
 80035be:	1b5b      	subs	r3, r3, r5
 80035c0:	6123      	str	r3, [r4, #16]
 80035c2:	9b07      	ldr	r3, [sp, #28]
 80035c4:	0021      	movs	r1, r4
 80035c6:	9300      	str	r3, [sp, #0]
 80035c8:	9805      	ldr	r0, [sp, #20]
 80035ca:	9b06      	ldr	r3, [sp, #24]
 80035cc:	aa09      	add	r2, sp, #36	@ 0x24
 80035ce:	f7ff fef5 	bl	80033bc <_printf_common>
 80035d2:	3001      	adds	r0, #1
 80035d4:	d148      	bne.n	8003668 <_printf_i+0x1cc>
 80035d6:	2001      	movs	r0, #1
 80035d8:	4240      	negs	r0, r0
 80035da:	b00b      	add	sp, #44	@ 0x2c
 80035dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80035de:	2220      	movs	r2, #32
 80035e0:	6809      	ldr	r1, [r1, #0]
 80035e2:	430a      	orrs	r2, r1
 80035e4:	6022      	str	r2, [r4, #0]
 80035e6:	2278      	movs	r2, #120	@ 0x78
 80035e8:	4932      	ldr	r1, [pc, #200]	@ (80036b4 <_printf_i+0x218>)
 80035ea:	9104      	str	r1, [sp, #16]
 80035ec:	0021      	movs	r1, r4
 80035ee:	3145      	adds	r1, #69	@ 0x45
 80035f0:	700a      	strb	r2, [r1, #0]
 80035f2:	6819      	ldr	r1, [r3, #0]
 80035f4:	6822      	ldr	r2, [r4, #0]
 80035f6:	c940      	ldmia	r1!, {r6}
 80035f8:	0610      	lsls	r0, r2, #24
 80035fa:	d402      	bmi.n	8003602 <_printf_i+0x166>
 80035fc:	0650      	lsls	r0, r2, #25
 80035fe:	d500      	bpl.n	8003602 <_printf_i+0x166>
 8003600:	b2b6      	uxth	r6, r6
 8003602:	6019      	str	r1, [r3, #0]
 8003604:	07d3      	lsls	r3, r2, #31
 8003606:	d502      	bpl.n	800360e <_printf_i+0x172>
 8003608:	2320      	movs	r3, #32
 800360a:	4313      	orrs	r3, r2
 800360c:	6023      	str	r3, [r4, #0]
 800360e:	2e00      	cmp	r6, #0
 8003610:	d001      	beq.n	8003616 <_printf_i+0x17a>
 8003612:	2710      	movs	r7, #16
 8003614:	e7a8      	b.n	8003568 <_printf_i+0xcc>
 8003616:	2220      	movs	r2, #32
 8003618:	6823      	ldr	r3, [r4, #0]
 800361a:	4393      	bics	r3, r2
 800361c:	6023      	str	r3, [r4, #0]
 800361e:	e7f8      	b.n	8003612 <_printf_i+0x176>
 8003620:	681a      	ldr	r2, [r3, #0]
 8003622:	680d      	ldr	r5, [r1, #0]
 8003624:	1d10      	adds	r0, r2, #4
 8003626:	6949      	ldr	r1, [r1, #20]
 8003628:	6018      	str	r0, [r3, #0]
 800362a:	6813      	ldr	r3, [r2, #0]
 800362c:	062e      	lsls	r6, r5, #24
 800362e:	d501      	bpl.n	8003634 <_printf_i+0x198>
 8003630:	6019      	str	r1, [r3, #0]
 8003632:	e002      	b.n	800363a <_printf_i+0x19e>
 8003634:	066d      	lsls	r5, r5, #25
 8003636:	d5fb      	bpl.n	8003630 <_printf_i+0x194>
 8003638:	8019      	strh	r1, [r3, #0]
 800363a:	2300      	movs	r3, #0
 800363c:	9d03      	ldr	r5, [sp, #12]
 800363e:	6123      	str	r3, [r4, #16]
 8003640:	e7bf      	b.n	80035c2 <_printf_i+0x126>
 8003642:	681a      	ldr	r2, [r3, #0]
 8003644:	1d11      	adds	r1, r2, #4
 8003646:	6019      	str	r1, [r3, #0]
 8003648:	6815      	ldr	r5, [r2, #0]
 800364a:	2100      	movs	r1, #0
 800364c:	0028      	movs	r0, r5
 800364e:	6862      	ldr	r2, [r4, #4]
 8003650:	f000 f858 	bl	8003704 <memchr>
 8003654:	2800      	cmp	r0, #0
 8003656:	d001      	beq.n	800365c <_printf_i+0x1c0>
 8003658:	1b40      	subs	r0, r0, r5
 800365a:	6060      	str	r0, [r4, #4]
 800365c:	6863      	ldr	r3, [r4, #4]
 800365e:	6123      	str	r3, [r4, #16]
 8003660:	2300      	movs	r3, #0
 8003662:	9a03      	ldr	r2, [sp, #12]
 8003664:	7013      	strb	r3, [r2, #0]
 8003666:	e7ac      	b.n	80035c2 <_printf_i+0x126>
 8003668:	002a      	movs	r2, r5
 800366a:	6923      	ldr	r3, [r4, #16]
 800366c:	9906      	ldr	r1, [sp, #24]
 800366e:	9805      	ldr	r0, [sp, #20]
 8003670:	9d07      	ldr	r5, [sp, #28]
 8003672:	47a8      	blx	r5
 8003674:	3001      	adds	r0, #1
 8003676:	d0ae      	beq.n	80035d6 <_printf_i+0x13a>
 8003678:	6823      	ldr	r3, [r4, #0]
 800367a:	079b      	lsls	r3, r3, #30
 800367c:	d415      	bmi.n	80036aa <_printf_i+0x20e>
 800367e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003680:	68e0      	ldr	r0, [r4, #12]
 8003682:	4298      	cmp	r0, r3
 8003684:	daa9      	bge.n	80035da <_printf_i+0x13e>
 8003686:	0018      	movs	r0, r3
 8003688:	e7a7      	b.n	80035da <_printf_i+0x13e>
 800368a:	0022      	movs	r2, r4
 800368c:	2301      	movs	r3, #1
 800368e:	9906      	ldr	r1, [sp, #24]
 8003690:	9805      	ldr	r0, [sp, #20]
 8003692:	9e07      	ldr	r6, [sp, #28]
 8003694:	3219      	adds	r2, #25
 8003696:	47b0      	blx	r6
 8003698:	3001      	adds	r0, #1
 800369a:	d09c      	beq.n	80035d6 <_printf_i+0x13a>
 800369c:	3501      	adds	r5, #1
 800369e:	68e3      	ldr	r3, [r4, #12]
 80036a0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80036a2:	1a9b      	subs	r3, r3, r2
 80036a4:	42ab      	cmp	r3, r5
 80036a6:	dcf0      	bgt.n	800368a <_printf_i+0x1ee>
 80036a8:	e7e9      	b.n	800367e <_printf_i+0x1e2>
 80036aa:	2500      	movs	r5, #0
 80036ac:	e7f7      	b.n	800369e <_printf_i+0x202>
 80036ae:	46c0      	nop			@ (mov r8, r8)
 80036b0:	0800389c 	.word	0x0800389c
 80036b4:	080038ad 	.word	0x080038ad

080036b8 <memmove>:
 80036b8:	b510      	push	{r4, lr}
 80036ba:	4288      	cmp	r0, r1
 80036bc:	d806      	bhi.n	80036cc <memmove+0x14>
 80036be:	2300      	movs	r3, #0
 80036c0:	429a      	cmp	r2, r3
 80036c2:	d008      	beq.n	80036d6 <memmove+0x1e>
 80036c4:	5ccc      	ldrb	r4, [r1, r3]
 80036c6:	54c4      	strb	r4, [r0, r3]
 80036c8:	3301      	adds	r3, #1
 80036ca:	e7f9      	b.n	80036c0 <memmove+0x8>
 80036cc:	188b      	adds	r3, r1, r2
 80036ce:	4298      	cmp	r0, r3
 80036d0:	d2f5      	bcs.n	80036be <memmove+0x6>
 80036d2:	3a01      	subs	r2, #1
 80036d4:	d200      	bcs.n	80036d8 <memmove+0x20>
 80036d6:	bd10      	pop	{r4, pc}
 80036d8:	5c8b      	ldrb	r3, [r1, r2]
 80036da:	5483      	strb	r3, [r0, r2]
 80036dc:	e7f9      	b.n	80036d2 <memmove+0x1a>
	...

080036e0 <_sbrk_r>:
 80036e0:	2300      	movs	r3, #0
 80036e2:	b570      	push	{r4, r5, r6, lr}
 80036e4:	4d06      	ldr	r5, [pc, #24]	@ (8003700 <_sbrk_r+0x20>)
 80036e6:	0004      	movs	r4, r0
 80036e8:	0008      	movs	r0, r1
 80036ea:	602b      	str	r3, [r5, #0]
 80036ec:	f7fe ff64 	bl	80025b8 <_sbrk>
 80036f0:	1c43      	adds	r3, r0, #1
 80036f2:	d103      	bne.n	80036fc <_sbrk_r+0x1c>
 80036f4:	682b      	ldr	r3, [r5, #0]
 80036f6:	2b00      	cmp	r3, #0
 80036f8:	d000      	beq.n	80036fc <_sbrk_r+0x1c>
 80036fa:	6023      	str	r3, [r4, #0]
 80036fc:	bd70      	pop	{r4, r5, r6, pc}
 80036fe:	46c0      	nop			@ (mov r8, r8)
 8003700:	20000200 	.word	0x20000200

08003704 <memchr>:
 8003704:	b2c9      	uxtb	r1, r1
 8003706:	1882      	adds	r2, r0, r2
 8003708:	4290      	cmp	r0, r2
 800370a:	d101      	bne.n	8003710 <memchr+0xc>
 800370c:	2000      	movs	r0, #0
 800370e:	4770      	bx	lr
 8003710:	7803      	ldrb	r3, [r0, #0]
 8003712:	428b      	cmp	r3, r1
 8003714:	d0fb      	beq.n	800370e <memchr+0xa>
 8003716:	3001      	adds	r0, #1
 8003718:	e7f6      	b.n	8003708 <memchr+0x4>

0800371a <memcpy>:
 800371a:	2300      	movs	r3, #0
 800371c:	b510      	push	{r4, lr}
 800371e:	429a      	cmp	r2, r3
 8003720:	d100      	bne.n	8003724 <memcpy+0xa>
 8003722:	bd10      	pop	{r4, pc}
 8003724:	5ccc      	ldrb	r4, [r1, r3]
 8003726:	54c4      	strb	r4, [r0, r3]
 8003728:	3301      	adds	r3, #1
 800372a:	e7f8      	b.n	800371e <memcpy+0x4>

0800372c <_realloc_r>:
 800372c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800372e:	0006      	movs	r6, r0
 8003730:	000c      	movs	r4, r1
 8003732:	0015      	movs	r5, r2
 8003734:	2900      	cmp	r1, #0
 8003736:	d105      	bne.n	8003744 <_realloc_r+0x18>
 8003738:	0011      	movs	r1, r2
 800373a:	f7ff fc51 	bl	8002fe0 <_malloc_r>
 800373e:	0004      	movs	r4, r0
 8003740:	0020      	movs	r0, r4
 8003742:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003744:	2a00      	cmp	r2, #0
 8003746:	d103      	bne.n	8003750 <_realloc_r+0x24>
 8003748:	f7ff fbde 	bl	8002f08 <_free_r>
 800374c:	2400      	movs	r4, #0
 800374e:	e7f7      	b.n	8003740 <_realloc_r+0x14>
 8003750:	f000 f81b 	bl	800378a <_malloc_usable_size_r>
 8003754:	0007      	movs	r7, r0
 8003756:	4285      	cmp	r5, r0
 8003758:	d802      	bhi.n	8003760 <_realloc_r+0x34>
 800375a:	0843      	lsrs	r3, r0, #1
 800375c:	42ab      	cmp	r3, r5
 800375e:	d3ef      	bcc.n	8003740 <_realloc_r+0x14>
 8003760:	0029      	movs	r1, r5
 8003762:	0030      	movs	r0, r6
 8003764:	f7ff fc3c 	bl	8002fe0 <_malloc_r>
 8003768:	9001      	str	r0, [sp, #4]
 800376a:	2800      	cmp	r0, #0
 800376c:	d0ee      	beq.n	800374c <_realloc_r+0x20>
 800376e:	002a      	movs	r2, r5
 8003770:	42bd      	cmp	r5, r7
 8003772:	d900      	bls.n	8003776 <_realloc_r+0x4a>
 8003774:	003a      	movs	r2, r7
 8003776:	0021      	movs	r1, r4
 8003778:	9801      	ldr	r0, [sp, #4]
 800377a:	f7ff ffce 	bl	800371a <memcpy>
 800377e:	0021      	movs	r1, r4
 8003780:	0030      	movs	r0, r6
 8003782:	f7ff fbc1 	bl	8002f08 <_free_r>
 8003786:	9c01      	ldr	r4, [sp, #4]
 8003788:	e7da      	b.n	8003740 <_realloc_r+0x14>

0800378a <_malloc_usable_size_r>:
 800378a:	1f0b      	subs	r3, r1, #4
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	1f18      	subs	r0, r3, #4
 8003790:	2b00      	cmp	r3, #0
 8003792:	da01      	bge.n	8003798 <_malloc_usable_size_r+0xe>
 8003794:	580b      	ldr	r3, [r1, r0]
 8003796:	18c0      	adds	r0, r0, r3
 8003798:	4770      	bx	lr
	...

0800379c <_init>:
 800379c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800379e:	46c0      	nop			@ (mov r8, r8)
 80037a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80037a2:	bc08      	pop	{r3}
 80037a4:	469e      	mov	lr, r3
 80037a6:	4770      	bx	lr

080037a8 <_fini>:
 80037a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037aa:	46c0      	nop			@ (mov r8, r8)
 80037ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80037ae:	bc08      	pop	{r3}
 80037b0:	469e      	mov	lr, r3
 80037b2:	4770      	bx	lr
